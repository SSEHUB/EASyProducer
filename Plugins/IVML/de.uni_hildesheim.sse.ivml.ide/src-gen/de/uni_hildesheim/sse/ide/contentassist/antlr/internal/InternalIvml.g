/*
 * generated by Xtext 2.34.0
 */
grammar InternalIvml;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package de.uni_hildesheim.sse.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.uni_hildesheim.sse.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.uni_hildesheim.sse.services.IvmlGrammarAccess;

}
@parser::members {
	private IvmlGrammarAccess grammarAccess;

	public void setGrammarAccess(IvmlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleVariabilityUnit
entryRuleVariabilityUnit
:
{ before(grammarAccess.getVariabilityUnitRule()); }
	 ruleVariabilityUnit
{ after(grammarAccess.getVariabilityUnitRule()); } 
	 EOF 
;

// Rule VariabilityUnit
ruleVariabilityUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariabilityUnitAccess().getGroup()); }
		(rule__VariabilityUnit__Group__0)
		{ after(grammarAccess.getVariabilityUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProject
entryRuleProject
:
{ before(grammarAccess.getProjectRule()); }
	 ruleProject
{ after(grammarAccess.getProjectRule()); } 
	 EOF 
;

// Rule Project
ruleProject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectAccess().getGroup()); }
		(rule__Project__Group__0)
		{ after(grammarAccess.getProjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProjectContents
entryRuleProjectContents
:
{ before(grammarAccess.getProjectContentsRule()); }
	 ruleProjectContents
{ after(grammarAccess.getProjectContentsRule()); } 
	 EOF 
;

// Rule ProjectContents
ruleProjectContents 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectContentsAccess().getGroup()); }
		(rule__ProjectContents__Group__0)
		{ after(grammarAccess.getProjectContentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypedef
entryRuleTypedef
:
{ before(grammarAccess.getTypedefRule()); }
	 ruleTypedef
{ after(grammarAccess.getTypedefRule()); } 
	 EOF 
;

// Rule Typedef
ruleTypedef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypedefAccess().getAlternatives()); }
		(rule__Typedef__Alternatives)
		{ after(grammarAccess.getTypedefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypedefEnum
entryRuleTypedefEnum
:
{ before(grammarAccess.getTypedefEnumRule()); }
	 ruleTypedefEnum
{ after(grammarAccess.getTypedefEnumRule()); } 
	 EOF 
;

// Rule TypedefEnum
ruleTypedefEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypedefEnumAccess().getGroup()); }
		(rule__TypedefEnum__Group__0)
		{ after(grammarAccess.getTypedefEnumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypedefEnumLiteral
entryRuleTypedefEnumLiteral
:
{ before(grammarAccess.getTypedefEnumLiteralRule()); }
	 ruleTypedefEnumLiteral
{ after(grammarAccess.getTypedefEnumLiteralRule()); } 
	 EOF 
;

// Rule TypedefEnumLiteral
ruleTypedefEnumLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypedefEnumLiteralAccess().getGroup()); }
		(rule__TypedefEnumLiteral__Group__0)
		{ after(grammarAccess.getTypedefEnumLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypedefCompound
entryRuleTypedefCompound
:
{ before(grammarAccess.getTypedefCompoundRule()); }
	 ruleTypedefCompound
{ after(grammarAccess.getTypedefCompoundRule()); } 
	 EOF 
;

// Rule TypedefCompound
ruleTypedefCompound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypedefCompoundAccess().getGroup()); }
		(rule__TypedefCompound__Group__0)
		{ after(grammarAccess.getTypedefCompoundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttrAssignment
entryRuleAttrAssignment
:
{ before(grammarAccess.getAttrAssignmentRule()); }
	 ruleAttrAssignment
{ after(grammarAccess.getAttrAssignmentRule()); } 
	 EOF 
;

// Rule AttrAssignment
ruleAttrAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttrAssignmentAccess().getGroup()); }
		(rule__AttrAssignment__Group__0)
		{ after(grammarAccess.getAttrAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttrAssignmentPart
entryRuleAttrAssignmentPart
:
{ before(grammarAccess.getAttrAssignmentPartRule()); }
	 ruleAttrAssignmentPart
{ after(grammarAccess.getAttrAssignmentPartRule()); } 
	 EOF 
;

// Rule AttrAssignmentPart
ruleAttrAssignmentPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttrAssignmentPartAccess().getGroup()); }
		(rule__AttrAssignmentPart__Group__0)
		{ after(grammarAccess.getAttrAssignmentPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypedefMapping
entryRuleTypedefMapping
:
{ before(grammarAccess.getTypedefMappingRule()); }
	 ruleTypedefMapping
{ after(grammarAccess.getTypedefMappingRule()); } 
	 EOF 
;

// Rule TypedefMapping
ruleTypedefMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypedefMappingAccess().getGroup()); }
		(rule__TypedefMapping__Group__0)
		{ after(grammarAccess.getTypedefMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypedefConstraint
entryRuleTypedefConstraint
:
{ before(grammarAccess.getTypedefConstraintRule()); }
	 ruleTypedefConstraint
{ after(grammarAccess.getTypedefConstraintRule()); } 
	 EOF 
;

// Rule TypedefConstraint
ruleTypedefConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypedefConstraintAccess().getGroup()); }
		(rule__TypedefConstraint__Group__0)
		{ after(grammarAccess.getTypedefConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
		(rule__VariableDeclaration__Group__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclarationPart
entryRuleVariableDeclarationPart
:
{ before(grammarAccess.getVariableDeclarationPartRule()); }
	 ruleVariableDeclarationPart
{ after(grammarAccess.getVariableDeclarationPartRule()); } 
	 EOF 
;

// Rule VariableDeclarationPart
ruleVariableDeclarationPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationPartAccess().getGroup()); }
		(rule__VariableDeclarationPart__Group__0)
		{ after(grammarAccess.getVariableDeclarationPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicType
entryRuleBasicType
:
{ before(grammarAccess.getBasicTypeRule()); }
	 ruleBasicType
{ after(grammarAccess.getBasicTypeRule()); } 
	 EOF 
;

// Rule BasicType
ruleBasicType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicTypeAccess().getAlternatives()); }
		(rule__BasicType__Alternatives)
		{ after(grammarAccess.getBasicTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumValue
entryRuleNumValue
:
{ before(grammarAccess.getNumValueRule()); }
	 ruleNumValue
{ after(grammarAccess.getNumValueRule()); } 
	 EOF 
;

// Rule NumValue
ruleNumValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumValueAccess().getValAssignment()); }
		(rule__NumValue__ValAssignment)
		{ after(grammarAccess.getNumValueAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAccessName
entryRuleAccessName
:
{ before(grammarAccess.getAccessNameRule()); }
	 ruleAccessName
{ after(grammarAccess.getAccessNameRule()); } 
	 EOF 
;

// Rule AccessName
ruleAccessName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getAccessNameAccess().getGroup()); }
			(rule__AccessName__Group__0)
			{ after(grammarAccess.getAccessNameAccess().getGroup()); }
		)
		(
			{ before(grammarAccess.getAccessNameAccess().getGroup()); }
			(rule__AccessName__Group__0)*
			{ after(grammarAccess.getAccessNameAccess().getGroup()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDerivedType
entryRuleDerivedType
:
{ before(grammarAccess.getDerivedTypeRule()); }
	 ruleDerivedType
{ after(grammarAccess.getDerivedTypeRule()); } 
	 EOF 
;

// Rule DerivedType
ruleDerivedType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDerivedTypeAccess().getGroup()); }
		(rule__DerivedType__Group__0)
		{ after(grammarAccess.getDerivedTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotateTo
entryRuleAnnotateTo
:
{ before(grammarAccess.getAnnotateToRule()); }
	 ruleAnnotateTo
{ after(grammarAccess.getAnnotateToRule()); } 
	 EOF 
;

// Rule AnnotateTo
ruleAnnotateTo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotateToAccess().getGroup()); }
		(rule__AnnotateTo__Group__0)
		{ after(grammarAccess.getAnnotateToAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFreeze
entryRuleFreeze
:
{ before(grammarAccess.getFreezeRule()); }
	 ruleFreeze
{ after(grammarAccess.getFreezeRule()); } 
	 EOF 
;

// Rule Freeze
ruleFreeze 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFreezeAccess().getGroup()); }
		(rule__Freeze__Group__0)
		{ after(grammarAccess.getFreezeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFreezeStatement
entryRuleFreezeStatement
:
{ before(grammarAccess.getFreezeStatementRule()); }
	 ruleFreezeStatement
{ after(grammarAccess.getFreezeStatementRule()); } 
	 EOF 
;

// Rule FreezeStatement
ruleFreezeStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFreezeStatementAccess().getGroup()); }
		(rule__FreezeStatement__Group__0)
		{ after(grammarAccess.getFreezeStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEval
entryRuleEval
:
{ before(grammarAccess.getEvalRule()); }
	 ruleEval
{ after(grammarAccess.getEvalRule()); } 
	 EOF 
;

// Rule Eval
ruleEval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvalAccess().getGroup()); }
		(rule__Eval__Group__0)
		{ after(grammarAccess.getEvalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration
:
{ before(grammarAccess.getInterfaceDeclarationRule()); }
	 ruleInterfaceDeclaration
{ after(grammarAccess.getInterfaceDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getGroup()); }
		(rule__InterfaceDeclaration__Group__0)
		{ after(grammarAccess.getInterfaceDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExport
entryRuleExport
:
{ before(grammarAccess.getExportRule()); }
	 ruleExport
{ after(grammarAccess.getExportRule()); } 
	 EOF 
;

// Rule Export
ruleExport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExportAccess().getGroup()); }
		(rule__Export__Group__0)
		{ after(grammarAccess.getExportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportStmt
entryRuleImportStmt
:
{ before(grammarAccess.getImportStmtRule()); }
	 ruleImportStmt
{ after(grammarAccess.getImportStmtRule()); } 
	 EOF 
;

// Rule ImportStmt
ruleImportStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportStmtAccess().getGroup()); }
		(rule__ImportStmt__Group__0)
		{ after(grammarAccess.getImportStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConflictStmt
entryRuleConflictStmt
:
{ before(grammarAccess.getConflictStmtRule()); }
	 ruleConflictStmt
{ after(grammarAccess.getConflictStmtRule()); } 
	 EOF 
;

// Rule ConflictStmt
ruleConflictStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConflictStmtAccess().getGroup()); }
		(rule__ConflictStmt__Group__0)
		{ after(grammarAccess.getConflictStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVersionStmt
entryRuleVersionStmt
:
{ before(grammarAccess.getVersionStmtRule()); }
	 ruleVersionStmt
{ after(grammarAccess.getVersionStmtRule()); } 
	 EOF 
;

// Rule VersionStmt
ruleVersionStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVersionStmtAccess().getGroup()); }
		(rule__VersionStmt__Group__0)
		{ after(grammarAccess.getVersionStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpDefStatement
entryRuleOpDefStatement
:
{ before(grammarAccess.getOpDefStatementRule()); }
	 ruleOpDefStatement
{ after(grammarAccess.getOpDefStatementRule()); } 
	 EOF 
;

// Rule OpDefStatement
ruleOpDefStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpDefStatementAccess().getGroup()); }
		(rule__OpDefStatement__Group__0)
		{ after(grammarAccess.getOpDefStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotationDeclarations
entryRuleAnnotationDeclarations
:
{ before(grammarAccess.getAnnotationDeclarationsRule()); }
	 ruleAnnotationDeclarations
{ after(grammarAccess.getAnnotationDeclarationsRule()); } 
	 EOF 
;

// Rule AnnotationDeclarations
ruleAnnotationDeclarations 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationDeclarationsAccess().getGroup()); }
		(rule__AnnotationDeclarations__Group__0)
		{ after(grammarAccess.getAnnotationDeclarationsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpDefParameterList
entryRuleOpDefParameterList
:
{ before(grammarAccess.getOpDefParameterListRule()); }
	 ruleOpDefParameterList
{ after(grammarAccess.getOpDefParameterListRule()); } 
	 EOF 
;

// Rule OpDefParameterList
ruleOpDefParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpDefParameterListAccess().getGroup()); }
		(rule__OpDefParameterList__Group__0)
		{ after(grammarAccess.getOpDefParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpDefParameter
entryRuleOpDefParameter
:
{ before(grammarAccess.getOpDefParameterRule()); }
	 ruleOpDefParameter
{ after(grammarAccess.getOpDefParameterRule()); } 
	 EOF 
;

// Rule OpDefParameter
ruleOpDefParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpDefParameterAccess().getGroup()); }
		(rule__OpDefParameter__Group__0)
		{ after(grammarAccess.getOpDefParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement
:
{ before(grammarAccess.getExpressionStatementRule()); }
	 ruleExpressionStatement
{ after(grammarAccess.getExpressionStatementRule()); } 
	 EOF 
;

// Rule ExpressionStatement
ruleExpressionStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionStatementAccess().getGroup()); }
		(rule__ExpressionStatement__Group__0)
		{ after(grammarAccess.getExpressionStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLetExpression
entryRuleLetExpression
:
{ before(grammarAccess.getLetExpressionRule()); }
	 ruleLetExpression
{ after(grammarAccess.getLetExpressionRule()); } 
	 EOF 
;

// Rule LetExpression
ruleLetExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLetExpressionAccess().getGroup()); }
		(rule__LetExpression__Group__0)
		{ after(grammarAccess.getLetExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOptBlockExpression
entryRuleOptBlockExpression
:
{ before(grammarAccess.getOptBlockExpressionRule()); }
	 ruleOptBlockExpression
{ after(grammarAccess.getOptBlockExpressionRule()); } 
	 EOF 
;

// Rule OptBlockExpression
ruleOptBlockExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptBlockExpressionAccess().getAlternatives()); }
		(rule__OptBlockExpression__Alternatives)
		{ after(grammarAccess.getOptBlockExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlockExpression
entryRuleBlockExpression
:
{ before(grammarAccess.getBlockExpressionRule()); }
	 ruleBlockExpression
{ after(grammarAccess.getBlockExpressionRule()); } 
	 EOF 
;

// Rule BlockExpression
ruleBlockExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockExpressionAccess().getGroup()); }
		(rule__BlockExpression__Group__0)
		{ after(grammarAccess.getBlockExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression
:
{ before(grammarAccess.getAssignmentExpressionRule()); }
	 ruleAssignmentExpression
{ after(grammarAccess.getAssignmentExpressionRule()); } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
		(rule__AssignmentExpression__Group__0)
		{ after(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignmentExpressionPart
entryRuleAssignmentExpressionPart
:
{ before(grammarAccess.getAssignmentExpressionPartRule()); }
	 ruleAssignmentExpressionPart
{ after(grammarAccess.getAssignmentExpressionPartRule()); } 
	 EOF 
;

// Rule AssignmentExpressionPart
ruleAssignmentExpressionPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentExpressionPartAccess().getGroup()); }
		(rule__AssignmentExpressionPart__Group__0)
		{ after(grammarAccess.getAssignmentExpressionPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignmentOperator
entryRuleAssignmentOperator
:
{ before(grammarAccess.getAssignmentOperatorRule()); }
	 ruleAssignmentOperator
{ after(grammarAccess.getAssignmentOperatorRule()); } 
	 EOF 
;

// Rule AssignmentOperator
ruleAssignmentOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword()); }
		'='
		{ after(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplicationExpression
entryRuleImplicationExpression
:
{ before(grammarAccess.getImplicationExpressionRule()); }
	 ruleImplicationExpression
{ after(grammarAccess.getImplicationExpressionRule()); } 
	 EOF 
;

// Rule ImplicationExpression
ruleImplicationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplicationExpressionAccess().getGroup()); }
		(rule__ImplicationExpression__Group__0)
		{ after(grammarAccess.getImplicationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplicationExpressionPart
entryRuleImplicationExpressionPart
:
{ before(grammarAccess.getImplicationExpressionPartRule()); }
	 ruleImplicationExpressionPart
{ after(grammarAccess.getImplicationExpressionPartRule()); } 
	 EOF 
;

// Rule ImplicationExpressionPart
ruleImplicationExpressionPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplicationExpressionPartAccess().getGroup()); }
		(rule__ImplicationExpressionPart__Group__0)
		{ after(grammarAccess.getImplicationExpressionPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplicationOperator
entryRuleImplicationOperator
:
{ before(grammarAccess.getImplicationOperatorRule()); }
	 ruleImplicationOperator
{ after(grammarAccess.getImplicationOperatorRule()); } 
	 EOF 
;

// Rule ImplicationOperator
ruleImplicationOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplicationOperatorAccess().getAlternatives()); }
		(rule__ImplicationOperator__Alternatives)
		{ after(grammarAccess.getImplicationOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalExpression
entryRuleLogicalExpression
:
{ before(grammarAccess.getLogicalExpressionRule()); }
	 ruleLogicalExpression
{ after(grammarAccess.getLogicalExpressionRule()); } 
	 EOF 
;

// Rule LogicalExpression
ruleLogicalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup()); }
		(rule__LogicalExpression__Group__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalExpressionPart
entryRuleLogicalExpressionPart
:
{ before(grammarAccess.getLogicalExpressionPartRule()); }
	 ruleLogicalExpressionPart
{ after(grammarAccess.getLogicalExpressionPartRule()); } 
	 EOF 
;

// Rule LogicalExpressionPart
ruleLogicalExpressionPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalExpressionPartAccess().getGroup()); }
		(rule__LogicalExpressionPart__Group__0)
		{ after(grammarAccess.getLogicalExpressionPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalOperator
entryRuleLogicalOperator
:
{ before(grammarAccess.getLogicalOperatorRule()); }
	 ruleLogicalOperator
{ after(grammarAccess.getLogicalOperatorRule()); } 
	 EOF 
;

// Rule LogicalOperator
ruleLogicalOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getAlternatives()); }
		(rule__LogicalOperator__Alternatives)
		{ after(grammarAccess.getLogicalOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
		(rule__EqualityExpression__Group__0)
		{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpressionPart
entryRuleEqualityExpressionPart
:
{ before(grammarAccess.getEqualityExpressionPartRule()); }
	 ruleEqualityExpressionPart
{ after(grammarAccess.getEqualityExpressionPartRule()); } 
	 EOF 
;

// Rule EqualityExpressionPart
ruleEqualityExpressionPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionPartAccess().getGroup()); }
		(rule__EqualityExpressionPart__Group__0)
		{ after(grammarAccess.getEqualityExpressionPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityOperator
entryRuleEqualityOperator
:
{ before(grammarAccess.getEqualityOperatorRule()); }
	 ruleEqualityOperator
{ after(grammarAccess.getEqualityOperatorRule()); } 
	 EOF 
;

// Rule EqualityOperator
ruleEqualityOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
		(rule__EqualityOperator__Alternatives)
		{ after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
		(rule__RelationalExpression__Group__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpressionPart
entryRuleRelationalExpressionPart
:
{ before(grammarAccess.getRelationalExpressionPartRule()); }
	 ruleRelationalExpressionPart
{ after(grammarAccess.getRelationalExpressionPartRule()); } 
	 EOF 
;

// Rule RelationalExpressionPart
ruleRelationalExpressionPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionPartAccess().getGroup()); }
		(rule__RelationalExpressionPart__Group__0)
		{ after(grammarAccess.getRelationalExpressionPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalOperator
entryRuleRelationalOperator
:
{ before(grammarAccess.getRelationalOperatorRule()); }
	 ruleRelationalOperator
{ after(grammarAccess.getRelationalOperatorRule()); } 
	 EOF 
;

// Rule RelationalOperator
ruleRelationalOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
		(rule__RelationalOperator__Alternatives)
		{ after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpressionPart
entryRuleAdditiveExpressionPart
:
{ before(grammarAccess.getAdditiveExpressionPartRule()); }
	 ruleAdditiveExpressionPart
{ after(grammarAccess.getAdditiveExpressionPartRule()); } 
	 EOF 
;

// Rule AdditiveExpressionPart
ruleAdditiveExpressionPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionPartAccess().getGroup()); }
		(rule__AdditiveExpressionPart__Group__0)
		{ after(grammarAccess.getAdditiveExpressionPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveOperator
entryRuleAdditiveOperator
:
{ before(grammarAccess.getAdditiveOperatorRule()); }
	 ruleAdditiveOperator
{ after(grammarAccess.getAdditiveOperatorRule()); } 
	 EOF 
;

// Rule AdditiveOperator
ruleAdditiveOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
		(rule__AdditiveOperator__Alternatives)
		{ after(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpressionPart
entryRuleMultiplicativeExpressionPart
:
{ before(grammarAccess.getMultiplicativeExpressionPartRule()); }
	 ruleMultiplicativeExpressionPart
{ after(grammarAccess.getMultiplicativeExpressionPartRule()); } 
	 EOF 
;

// Rule MultiplicativeExpressionPart
ruleMultiplicativeExpressionPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionPartAccess().getGroup()); }
		(rule__MultiplicativeExpressionPart__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeOperator
entryRuleMultiplicativeOperator
:
{ before(grammarAccess.getMultiplicativeOperatorRule()); }
	 ruleMultiplicativeOperator
{ after(grammarAccess.getMultiplicativeOperatorRule()); } 
	 EOF 
;

// Rule MultiplicativeOperator
ruleMultiplicativeOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
		(rule__MultiplicativeOperator__Alternatives)
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
		(rule__UnaryExpression__Group__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOperator
entryRuleUnaryOperator
:
{ before(grammarAccess.getUnaryOperatorRule()); }
	 ruleUnaryOperator
{ after(grammarAccess.getUnaryOperatorRule()); } 
	 EOF 
;

// Rule UnaryOperator
ruleUnaryOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
		(rule__UnaryOperator__Alternatives)
		{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostfixExpression
entryRulePostfixExpression
:
{ before(grammarAccess.getPostfixExpressionRule()); }
	 rulePostfixExpression
{ after(grammarAccess.getPostfixExpressionRule()); } 
	 EOF 
;

// Rule PostfixExpression
rulePostfixExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getAlternatives()); }
		(rule__PostfixExpression__Alternatives)
		{ after(grammarAccess.getPostfixExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCall
entryRuleCall
:
{ before(grammarAccess.getCallRule()); }
	 ruleCall
{ after(grammarAccess.getCallRule()); } 
	 EOF 
;

// Rule Call
ruleCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallAccess().getAlternatives()); }
		(rule__Call__Alternatives)
		{ after(grammarAccess.getCallAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureCall
entryRuleFeatureCall
:
{ before(grammarAccess.getFeatureCallRule()); }
	 ruleFeatureCall
{ after(grammarAccess.getFeatureCallRule()); } 
	 EOF 
;

// Rule FeatureCall
ruleFeatureCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureCallAccess().getGroup()); }
		(rule__FeatureCall__Group__0)
		{ after(grammarAccess.getFeatureCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContainerOp
entryRuleContainerOp
:
{ before(grammarAccess.getContainerOpRule()); }
	 ruleContainerOp
{ after(grammarAccess.getContainerOpRule()); } 
	 EOF 
;

// Rule ContainerOp
ruleContainerOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainerOpAccess().getGroup()); }
		(rule__ContainerOp__Group__0)
		{ after(grammarAccess.getContainerOpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclarator
entryRuleDeclarator
:
{ before(grammarAccess.getDeclaratorRule()); }
	 ruleDeclarator
{ after(grammarAccess.getDeclaratorRule()); } 
	 EOF 
;

// Rule Declarator
ruleDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaratorAccess().getGroup()); }
		(rule__Declarator__Group__0)
		{ after(grammarAccess.getDeclaratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getGroup()); }
		(rule__Declaration__Group__0)
		{ after(grammarAccess.getDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ActualArgumentList
ruleActualArgumentList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActualArgumentListAccess().getGroup()); }
		(rule__ActualArgumentList__Group__0)
		{ after(grammarAccess.getActualArgumentListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActualArgument
entryRuleActualArgument
:
{ before(grammarAccess.getActualArgumentRule()); }
	 ruleActualArgument
{ after(grammarAccess.getActualArgumentRule()); } 
	 EOF 
;

// Rule ActualArgument
ruleActualArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActualArgumentAccess().getGroup()); }
		(rule__ActualArgument__Group__0)
		{ after(grammarAccess.getActualArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionAccess
entryRuleExpressionAccess
:
{ before(grammarAccess.getExpressionAccessRule()); }
	 ruleExpressionAccess
{ after(grammarAccess.getExpressionAccessRule()); } 
	 EOF 
;

// Rule ExpressionAccess
ruleExpressionAccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccessAccess().getGroup()); }
		(rule__ExpressionAccess__Group__0)
		{ after(grammarAccess.getExpressionAccessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
		(rule__PrimaryExpression__Group__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContainerInitializer
entryRuleContainerInitializer
:
{ before(grammarAccess.getContainerInitializerRule()); }
	 ruleContainerInitializer
{ after(grammarAccess.getContainerInitializerRule()); } 
	 EOF 
;

// Rule ContainerInitializer
ruleContainerInitializer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainerInitializerAccess().getGroup()); }
		(rule__ContainerInitializer__Group__0)
		{ after(grammarAccess.getContainerInitializerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionListOrRange
entryRuleExpressionListOrRange
:
{ before(grammarAccess.getExpressionListOrRangeRule()); }
	 ruleExpressionListOrRange
{ after(grammarAccess.getExpressionListOrRangeRule()); } 
	 EOF 
;

// Rule ExpressionListOrRange
ruleExpressionListOrRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionListOrRangeAccess().getGroup()); }
		(rule__ExpressionListOrRange__Group__0)
		{ after(grammarAccess.getExpressionListOrRangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionListEntry
entryRuleExpressionListEntry
:
{ before(grammarAccess.getExpressionListEntryRule()); }
	 ruleExpressionListEntry
{ after(grammarAccess.getExpressionListEntryRule()); } 
	 EOF 
;

// Rule ExpressionListEntry
ruleExpressionListEntry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionListEntryAccess().getGroup()); }
		(rule__ExpressionListEntry__Group__0)
		{ after(grammarAccess.getExpressionListEntryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getValAssignment()); }
		(rule__Literal__ValAssignment)
		{ after(grammarAccess.getLiteralAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfExpression
entryRuleIfExpression
:
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
		(rule__IfExpression__Group__0)
		{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifier
entryRuleIdentifier
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule Identifier
ruleIdentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierAccess().getAlternatives()); }
		(rule__Identifier__Alternatives)
		{ after(grammarAccess.getIdentifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectContents__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_0()); }
		(rule__ProjectContents__ElementsAssignment_1_0)
		{ after(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_1()); }
		(rule__ProjectContents__ElementsAssignment_1_1)
		{ after(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_2()); }
		(rule__ProjectContents__ElementsAssignment_1_2)
		{ after(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_3()); }
		(rule__ProjectContents__ElementsAssignment_1_3)
		{ after(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_4()); }
		(rule__ProjectContents__ElementsAssignment_1_4)
		{ after(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_5()); }
		(rule__ProjectContents__ElementsAssignment_1_5)
		{ after(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_6()); }
		(rule__ProjectContents__ElementsAssignment_1_6)
		{ after(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_7()); }
		(rule__ProjectContents__ElementsAssignment_1_7)
		{ after(grammarAccess.getProjectContentsAccess().getElementsAssignment_1_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefAccess().getTEnumAssignment_0()); }
		(rule__Typedef__TEnumAssignment_0)
		{ after(grammarAccess.getTypedefAccess().getTEnumAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypedefAccess().getTCompoundAssignment_1()); }
		(rule__Typedef__TCompoundAssignment_1)
		{ after(grammarAccess.getTypedefAccess().getTCompoundAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypedefAccess().getTMappingAssignment_2()); }
		(rule__Typedef__TMappingAssignment_2)
		{ after(grammarAccess.getTypedefAccess().getTMappingAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefCompoundAccess().getElementsAssignment_5_0()); }
		(rule__TypedefCompound__ElementsAssignment_5_0)
		{ after(grammarAccess.getTypedefCompoundAccess().getElementsAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypedefCompoundAccess().getElementsAssignment_5_1()); }
		(rule__TypedefCompound__ElementsAssignment_5_1)
		{ after(grammarAccess.getTypedefCompoundAccess().getElementsAssignment_5_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypedefCompoundAccess().getElementsAssignment_5_2()); }
		(rule__TypedefCompound__ElementsAssignment_5_2)
		{ after(grammarAccess.getTypedefCompoundAccess().getElementsAssignment_5_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypedefCompoundAccess().getElementsAssignment_5_3()); }
		(rule__TypedefCompound__ElementsAssignment_5_3)
		{ after(grammarAccess.getTypedefCompoundAccess().getElementsAssignment_5_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssignmentAccess().getElementsAssignment_7_0()); }
		(rule__AttrAssignment__ElementsAssignment_7_0)
		{ after(grammarAccess.getAttrAssignmentAccess().getElementsAssignment_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttrAssignmentAccess().getElementsAssignment_7_1()); }
		(rule__AttrAssignment__ElementsAssignment_7_1)
		{ after(grammarAccess.getAttrAssignmentAccess().getElementsAssignment_7_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttrAssignmentAccess().getElementsAssignment_7_2()); }
		(rule__AttrAssignment__ElementsAssignment_7_2)
		{ after(grammarAccess.getAttrAssignmentAccess().getElementsAssignment_7_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getTypeAssignment_0()); }
		(rule__BasicType__TypeAssignment_0)
		{ after(grammarAccess.getBasicTypeAccess().getTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getTypeAssignment_1()); }
		(rule__BasicType__TypeAssignment_1)
		{ after(grammarAccess.getBasicTypeAccess().getTypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getTypeAssignment_2()); }
		(rule__BasicType__TypeAssignment_2)
		{ after(grammarAccess.getBasicTypeAccess().getTypeAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getTypeAssignment_3()); }
		(rule__BasicType__TypeAssignment_3)
		{ after(grammarAccess.getBasicTypeAccess().getTypeAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getTypeAssignment_4()); }
		(rule__BasicType__TypeAssignment_4)
		{ after(grammarAccess.getBasicTypeAccess().getTypeAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getTypeAssignment_5()); }
		(rule__BasicType__TypeAssignment_5)
		{ after(grammarAccess.getBasicTypeAccess().getTypeAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeAssignment_0()); }
		(rule__Type__TypeAssignment_0)
		{ after(grammarAccess.getTypeAccess().getTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getIdAssignment_1()); }
		(rule__Type__IdAssignment_1)
		{ after(grammarAccess.getTypeAccess().getIdAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDerivedAssignment_2()); }
		(rule__Type__DerivedAssignment_2)
		{ after(grammarAccess.getTypeAccess().getDerivedAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNValueAssignment_0()); }
		(rule__Value__NValueAssignment_0)
		{ after(grammarAccess.getValueAccess().getNValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getSValueAssignment_1()); }
		(rule__Value__SValueAssignment_1)
		{ after(grammarAccess.getValueAccess().getSValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getQValueAssignment_2()); }
		(rule__Value__QValueAssignment_2)
		{ after(grammarAccess.getValueAccess().getQValueAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getBValueAssignment_3()); }
		(rule__Value__BValueAssignment_3)
		{ after(grammarAccess.getValueAccess().getBValueAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getSelfAssignment_4()); }
		(rule__Value__SelfAssignment_4)
		{ after(grammarAccess.getValueAccess().getSelfAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNullValueAssignment_5()); }
		(rule__Value__NullValueAssignment_5)
		{ after(grammarAccess.getValueAccess().getNullValueAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getTValueAssignment_6()); }
		(rule__Value__TValueAssignment_6)
		{ after(grammarAccess.getValueAccess().getTValueAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getVersionAssignment_7()); }
		(rule__Value__VersionAssignment_7)
		{ after(grammarAccess.getValueAccess().getVersionAssignment_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__BValueAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getBValueTrueKeyword_3_0_0()); }
		'true'
		{ after(grammarAccess.getValueAccess().getBValueTrueKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getBValueFalseKeyword_3_0_1()); }
		'false'
		{ after(grammarAccess.getValueAccess().getBValueFalseKeyword_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedType__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivedTypeAccess().getOpAssignment_0_0()); }
		(rule__DerivedType__OpAssignment_0_0)
		{ after(grammarAccess.getDerivedTypeAccess().getOpAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDerivedTypeAccess().getOpAssignment_0_1()); }
		(rule__DerivedType__OpAssignment_0_1)
		{ after(grammarAccess.getDerivedTypeAccess().getOpAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDerivedTypeAccess().getOpAssignment_0_2()); }
		(rule__DerivedType__OpAssignment_0_2)
		{ after(grammarAccess.getDerivedTypeAccess().getOpAssignment_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__SnameAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotateToAccess().getSnameAttributeKeyword_0_0_0()); }
		'attribute'
		{ after(grammarAccess.getAnnotateToAccess().getSnameAttributeKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotateToAccess().getSnameAnnotateKeyword_0_0_1()); }
		'annotate'
		{ after(grammarAccess.getAnnotateToAccess().getSnameAnnotateKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotateToAccess().getNamesAssignment_4_0()); }
		(rule__AnnotateTo__NamesAssignment_4_0)
		{ after(grammarAccess.getAnnotateToAccess().getNamesAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnnotateToAccess().getGroup_4_1()); }
		(rule__AnnotateTo__Group_4_1__0)
		{ after(grammarAccess.getAnnotateToAccess().getGroup_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezeStatement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFreezeStatementAccess().getDotAssignment_0_0()); }
		(rule__FreezeStatement__DotAssignment_0_0)
		{ after(grammarAccess.getFreezeStatementAccess().getDotAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFreezeStatementAccess().getGroup_0_1()); }
		(rule__FreezeStatement__Group_0_1__0)
		{ after(grammarAccess.getFreezeStatementAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStmtAccess().getImportKeyword_0_0()); }
		'import'
		{ after(grammarAccess.getImportStmtAccess().getImportKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportStmtAccess().getInsertAssignment_0_1()); }
		(rule__ImportStmt__InsertAssignment_0_1)
		{ after(grammarAccess.getImportStmtAccess().getInsertAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Alternatives_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpDefStatementAccess().getGroup_9_0()); }
		(rule__OpDefStatement__Group_9_0__0)
		{ after(grammarAccess.getOpDefStatementAccess().getGroup_9_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpDefStatementAccess().getBlockAssignment_9_1()); }
		(rule__OpDefStatement__BlockAssignment_9_1)
		{ after(grammarAccess.getOpDefStatementAccess().getBlockAssignment_9_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getLetAssignment_0()); }
		(rule__Expression__LetAssignment_0)
		{ after(grammarAccess.getExpressionAccess().getLetAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getExprAssignment_1()); }
		(rule__Expression__ExprAssignment_1)
		{ after(grammarAccess.getExpressionAccess().getExprAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getContainerAssignment_2()); }
		(rule__Expression__ContainerAssignment_2)
		{ after(grammarAccess.getExpressionAccess().getContainerAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptBlockExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptBlockExpressionAccess().getExprAssignment_0()); }
		(rule__OptBlockExpression__ExprAssignment_0)
		{ after(grammarAccess.getOptBlockExpressionAccess().getExprAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getOptBlockExpressionAccess().getBlockAssignment_1()); }
		(rule__OptBlockExpression__BlockAssignment_1)
		{ after(grammarAccess.getOptBlockExpressionAccess().getBlockAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpressionPart__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentExpressionPartAccess().getExAssignment_1_0()); }
		(rule__AssignmentExpressionPart__ExAssignment_1_0)
		{ after(grammarAccess.getAssignmentExpressionPartAccess().getExAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentExpressionPartAccess().getContainerAssignment_1_1()); }
		(rule__AssignmentExpressionPart__ContainerAssignment_1_1)
		{ after(grammarAccess.getAssignmentExpressionPartAccess().getContainerAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplicationOperatorAccess().getImpliesKeyword_0()); }
		'implies'
		{ after(grammarAccess.getImplicationOperatorAccess().getImpliesKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getImplicationOperatorAccess().getIffKeyword_1()); }
		'iff'
		{ after(grammarAccess.getImplicationOperatorAccess().getIffKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getAndKeyword_0()); }
		'and'
		{ after(grammarAccess.getLogicalOperatorAccess().getAndKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getOrKeyword_1()); }
		'or'
		{ after(grammarAccess.getLogicalOperatorAccess().getOrKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getXorKeyword_2()); }
		'xor'
		{ after(grammarAccess.getLogicalOperatorAccess().getXorKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionPart__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionPartAccess().getExAssignment_1_0()); }
		(rule__EqualityExpressionPart__ExAssignment_1_0)
		{ after(grammarAccess.getEqualityExpressionPartAccess().getExAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionPartAccess().getContainerAssignment_1_1()); }
		(rule__EqualityExpressionPart__ContainerAssignment_1_1)
		{ after(grammarAccess.getEqualityExpressionPartAccess().getContainerAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0()); }
		'=='
		{ after(grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityOperatorAccess().getLessThanSignGreaterThanSignKeyword_1()); }
		'<>'
		{ after(grammarAccess.getEqualityOperatorAccess().getLessThanSignGreaterThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_2()); }
		'!='
		{ after(grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_0()); }
		'>'
		{ after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_1()); }
		'<'
		{ after(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_2()); }
		'>='
		{ after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_3()); }
		'<='
		{ after(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getNotKeyword_0()); }
		'not'
		{ after(grammarAccess.getUnaryOperatorAccess().getNotKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup_0()); }
		(rule__PostfixExpression__Group_0__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getLeftAssignment_1()); }
		(rule__PostfixExpression__LeftAssignment_1)
		{ after(grammarAccess.getPostfixExpressionAccess().getLeftAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallAccess().getGroup_0()); }
		(rule__Call__Group_0__0)
		{ after(grammarAccess.getCallAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCallAccess().getGroup_1()); }
		(rule__Call__Group_1__0)
		{ after(grammarAccess.getCallAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getCallAccess().getGroup_2()); }
		(rule__Call__Group_2__0)
		{ after(grammarAccess.getCallAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameAssignment_0_0()); }
		(rule__FeatureCall__NameAssignment_0_0)
		{ after(grammarAccess.getFeatureCallAccess().getNameAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameAssignment_0_1()); }
		(rule__FeatureCall__NameAssignment_0_1)
		{ after(grammarAccess.getFeatureCallAccess().getNameAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameAssignment_0_2()); }
		(rule__FeatureCall__NameAssignment_0_2)
		{ after(grammarAccess.getFeatureCallAccess().getNameAssignment_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameAssignment_0_3()); }
		(rule__FeatureCall__NameAssignment_0_3)
		{ after(grammarAccess.getFeatureCallAccess().getNameAssignment_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameAssignment_0_4()); }
		(rule__FeatureCall__NameAssignment_0_4)
		{ after(grammarAccess.getFeatureCallAccess().getNameAssignment_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameAssignment_0_5()); }
		(rule__FeatureCall__NameAssignment_0_5)
		{ after(grammarAccess.getFeatureCallAccess().getNameAssignment_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameAssignment_0_6()); }
		(rule__FeatureCall__NameAssignment_0_6)
		{ after(grammarAccess.getFeatureCallAccess().getNameAssignment_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameAssignment_0_7()); }
		(rule__FeatureCall__NameAssignment_0_7)
		{ after(grammarAccess.getFeatureCallAccess().getNameAssignment_0_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getLitAssignment_0_0()); }
		(rule__PrimaryExpression__LitAssignment_0_0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getLitAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_1()); }
		(rule__PrimaryExpression__Group_0_1__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getIfExAssignment_0_2()); }
		(rule__PrimaryExpression__IfExAssignment_0_2)
		{ after(grammarAccess.getPrimaryExpressionAccess().getIfExAssignment_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0_3()); }
		(rule__PrimaryExpression__Group_0_3__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListEntryAccess().getValueAssignment_1_0()); }
		(rule__ExpressionListEntry__ValueAssignment_1_0)
		{ after(grammarAccess.getExpressionListEntryAccess().getValueAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionListEntryAccess().getContainerAssignment_1_1()); }
		(rule__ExpressionListEntry__ContainerAssignment_1_1)
		{ after(grammarAccess.getExpressionListEntryAccess().getContainerAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getIdentifierAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getIdentifierAccess().getVERSIONTerminalRuleCall_1()); }
		RULE_VERSION
		{ after(grammarAccess.getIdentifierAccess().getVERSIONTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getIdentifierAccess().getEXPONENTTerminalRuleCall_2()); }
		RULE_EXPONENT
		{ after(grammarAccess.getIdentifierAccess().getEXPONENTTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getIdentifierAccess().getVersionKeyword_3()); }
		'version'
		{ after(grammarAccess.getIdentifierAccess().getVersionKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariabilityUnit__Group__0__Impl
	rule__VariabilityUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariabilityUnitAccess().getVariabilityUnitAction_0()); }
	()
	{ after(grammarAccess.getVariabilityUnitAccess().getVariabilityUnitAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariabilityUnit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariabilityUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariabilityUnitAccess().getProjectsAssignment_1()); }
	(rule__VariabilityUnit__ProjectsAssignment_1)*
	{ after(grammarAccess.getVariabilityUnitAccess().getProjectsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Project__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__0__Impl
	rule__Project__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
	'project'
	{ after(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__1__Impl
	rule__Project__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getNameAssignment_1()); }
	(rule__Project__NameAssignment_1)
	{ after(grammarAccess.getProjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__2__Impl
	rule__Project__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getProjectAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__3__Impl
	rule__Project__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getVersionAssignment_3()); }
	(rule__Project__VersionAssignment_3)?
	{ after(grammarAccess.getProjectAccess().getVersionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__4__Impl
	rule__Project__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getImportsAssignment_4()); }
	(rule__Project__ImportsAssignment_4)*
	{ after(grammarAccess.getProjectAccess().getImportsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__5__Impl
	rule__Project__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getConflictsAssignment_5()); }
	(rule__Project__ConflictsAssignment_5)*
	{ after(grammarAccess.getProjectAccess().getConflictsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__6__Impl
	rule__Project__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getInterfacesAssignment_6()); }
	(rule__Project__InterfacesAssignment_6)*
	{ after(grammarAccess.getProjectAccess().getInterfacesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__7__Impl
	rule__Project__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getContentsAssignment_7()); }
	(rule__Project__ContentsAssignment_7)
	{ after(grammarAccess.getProjectAccess().getContentsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__8__Impl
	rule__Project__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getProjectAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getSemicolonKeyword_9()); }
	(';')?
	{ after(grammarAccess.getProjectAccess().getSemicolonKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectContents__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectContents__Group__0__Impl
	rule__ProjectContents__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectContents__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectContentsAccess().getProjectContentsAction_0()); }
	()
	{ after(grammarAccess.getProjectContentsAccess().getProjectContentsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectContents__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectContents__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectContents__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectContentsAccess().getAlternatives_1()); }
	(rule__ProjectContents__Alternatives_1)*
	{ after(grammarAccess.getProjectContentsAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefEnum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnum__Group__0__Impl
	rule__TypedefEnum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumAccess().getEnumKeyword_0()); }
	'enum'
	{ after(grammarAccess.getTypedefEnumAccess().getEnumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnum__Group__1__Impl
	rule__TypedefEnum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumAccess().getNameAssignment_1()); }
	(rule__TypedefEnum__NameAssignment_1)
	{ after(grammarAccess.getTypedefEnumAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnum__Group__2__Impl
	rule__TypedefEnum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTypedefEnumAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnum__Group__3__Impl
	rule__TypedefEnum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumAccess().getLiteralsAssignment_3()); }
	(rule__TypedefEnum__LiteralsAssignment_3)
	{ after(grammarAccess.getTypedefEnumAccess().getLiteralsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnum__Group__4__Impl
	rule__TypedefEnum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumAccess().getGroup_4()); }
	(rule__TypedefEnum__Group_4__0)*
	{ after(grammarAccess.getTypedefEnumAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnum__Group__5__Impl
	rule__TypedefEnum__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTypedefEnumAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnum__Group__6__Impl
	rule__TypedefEnum__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumAccess().getConstraintAssignment_6()); }
	(rule__TypedefEnum__ConstraintAssignment_6)?
	{ after(grammarAccess.getTypedefEnumAccess().getConstraintAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnum__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumAccess().getSemicolonKeyword_7()); }
	';'
	{ after(grammarAccess.getTypedefEnumAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefEnum__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnum__Group_4__0__Impl
	rule__TypedefEnum__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getTypedefEnumAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnum__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumAccess().getLiteralsAssignment_4_1()); }
	(rule__TypedefEnum__LiteralsAssignment_4_1)
	{ after(grammarAccess.getTypedefEnumAccess().getLiteralsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefEnumLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnumLiteral__Group__0__Impl
	rule__TypedefEnumLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnumLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumLiteralAccess().getNameAssignment_0()); }
	(rule__TypedefEnumLiteral__NameAssignment_0)
	{ after(grammarAccess.getTypedefEnumLiteralAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnumLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnumLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnumLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumLiteralAccess().getGroup_1()); }
	(rule__TypedefEnumLiteral__Group_1__0)?
	{ after(grammarAccess.getTypedefEnumLiteralAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefEnumLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnumLiteral__Group_1__0__Impl
	rule__TypedefEnumLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnumLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumLiteralAccess().getEqualsSignKeyword_1_0()); }
	'='
	{ after(grammarAccess.getTypedefEnumLiteralAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnumLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefEnumLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnumLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefEnumLiteralAccess().getValueAssignment_1_1()); }
	(rule__TypedefEnumLiteral__ValueAssignment_1_1)
	{ after(grammarAccess.getTypedefEnumLiteralAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefCompound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefCompound__Group__0__Impl
	rule__TypedefCompound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefCompoundAccess().getAbstractAssignment_0()); }
	(rule__TypedefCompound__AbstractAssignment_0)?
	{ after(grammarAccess.getTypedefCompoundAccess().getAbstractAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefCompound__Group__1__Impl
	rule__TypedefCompound__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefCompoundAccess().getCompoundKeyword_1()); }
	'compound'
	{ after(grammarAccess.getTypedefCompoundAccess().getCompoundKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefCompound__Group__2__Impl
	rule__TypedefCompound__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefCompoundAccess().getNameAssignment_2()); }
	(rule__TypedefCompound__NameAssignment_2)
	{ after(grammarAccess.getTypedefCompoundAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefCompound__Group__3__Impl
	rule__TypedefCompound__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefCompoundAccess().getGroup_3()); }
	(rule__TypedefCompound__Group_3__0)?
	{ after(grammarAccess.getTypedefCompoundAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefCompound__Group__4__Impl
	rule__TypedefCompound__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefCompoundAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getTypedefCompoundAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefCompound__Group__5__Impl
	rule__TypedefCompound__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefCompoundAccess().getAlternatives_5()); }
	(rule__TypedefCompound__Alternatives_5)*
	{ after(grammarAccess.getTypedefCompoundAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefCompound__Group__6__Impl
	rule__TypedefCompound__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefCompoundAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getTypedefCompoundAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefCompound__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefCompoundAccess().getSemicolonKeyword_7()); }
	(';')?
	{ after(grammarAccess.getTypedefCompoundAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefCompound__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefCompound__Group_3__0__Impl
	rule__TypedefCompound__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefCompoundAccess().getRefinesKeyword_3_0()); }
	'refines'
	{ after(grammarAccess.getTypedefCompoundAccess().getRefinesKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefCompound__Group_3__1__Impl
	rule__TypedefCompound__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefCompoundAccess().getSuperAssignment_3_1()); }
	(rule__TypedefCompound__SuperAssignment_3_1)
	{ after(grammarAccess.getTypedefCompoundAccess().getSuperAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefCompound__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefCompoundAccess().getGroup_3_2()); }
	(rule__TypedefCompound__Group_3_2__0)*
	{ after(grammarAccess.getTypedefCompoundAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefCompound__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefCompound__Group_3_2__0__Impl
	rule__TypedefCompound__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefCompoundAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getTypedefCompoundAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefCompound__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefCompoundAccess().getSuperAssignment_3_2_1()); }
	(rule__TypedefCompound__SuperAssignment_3_2_1)
	{ after(grammarAccess.getTypedefCompoundAccess().getSuperAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignment__Group__0__Impl
	rule__AttrAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentAccess().getAssignKeyword_0()); }
	'assign'
	{ after(grammarAccess.getAttrAssignmentAccess().getAssignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignment__Group__1__Impl
	rule__AttrAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAttrAssignmentAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignment__Group__2__Impl
	rule__AttrAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentAccess().getPartsAssignment_2()); }
	(rule__AttrAssignment__PartsAssignment_2)
	{ after(grammarAccess.getAttrAssignmentAccess().getPartsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignment__Group__3__Impl
	rule__AttrAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentAccess().getGroup_3()); }
	(rule__AttrAssignment__Group_3__0)*
	{ after(grammarAccess.getAttrAssignmentAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignment__Group__4__Impl
	rule__AttrAssignment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAttrAssignmentAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignment__Group__5__Impl
	rule__AttrAssignment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentAccess().getToKeyword_5()); }
	'to'
	{ after(grammarAccess.getAttrAssignmentAccess().getToKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignment__Group__6__Impl
	rule__AttrAssignment__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getAttrAssignmentAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignment__Group__7__Impl
	rule__AttrAssignment__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAttrAssignmentAccess().getAlternatives_7()); }
		(rule__AttrAssignment__Alternatives_7)
		{ after(grammarAccess.getAttrAssignmentAccess().getAlternatives_7()); }
	)
	(
		{ before(grammarAccess.getAttrAssignmentAccess().getAlternatives_7()); }
		(rule__AttrAssignment__Alternatives_7)*
		{ after(grammarAccess.getAttrAssignmentAccess().getAlternatives_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignment__Group__8__Impl
	rule__AttrAssignment__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getAttrAssignmentAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignment__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentAccess().getSemicolonKeyword_9()); }
	(';')?
	{ after(grammarAccess.getAttrAssignmentAccess().getSemicolonKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAssignment__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignment__Group_3__0__Impl
	rule__AttrAssignment__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getAttrAssignmentAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignment__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentAccess().getPartsAssignment_3_1()); }
	(rule__AttrAssignment__PartsAssignment_3_1)
	{ after(grammarAccess.getAttrAssignmentAccess().getPartsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAssignmentPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignmentPart__Group__0__Impl
	rule__AttrAssignmentPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignmentPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentPartAccess().getNameAssignment_0()); }
	(rule__AttrAssignmentPart__NameAssignment_0)
	{ after(grammarAccess.getAttrAssignmentPartAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignmentPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignmentPart__Group__1__Impl
	rule__AttrAssignmentPart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignmentPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentPartAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAttrAssignmentPartAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignmentPart__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssignmentPart__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignmentPart__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssignmentPartAccess().getValueAssignment_2()); }
	(rule__AttrAssignmentPart__ValueAssignment_2)
	{ after(grammarAccess.getAttrAssignmentPartAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefMapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefMapping__Group__0__Impl
	rule__TypedefMapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefMapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefMappingAccess().getTypedefKeyword_0()); }
	'typedef'
	{ after(grammarAccess.getTypedefMappingAccess().getTypedefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefMapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefMapping__Group__1__Impl
	rule__TypedefMapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefMapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefMappingAccess().getNewTypeAssignment_1()); }
	(rule__TypedefMapping__NewTypeAssignment_1)
	{ after(grammarAccess.getTypedefMappingAccess().getNewTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefMapping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefMapping__Group__2__Impl
	rule__TypedefMapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefMapping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefMappingAccess().getTypeAssignment_2()); }
	(rule__TypedefMapping__TypeAssignment_2)
	{ after(grammarAccess.getTypedefMappingAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefMapping__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefMapping__Group__3__Impl
	rule__TypedefMapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefMapping__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefMappingAccess().getConstraintAssignment_3()); }
	(rule__TypedefMapping__ConstraintAssignment_3)?
	{ after(grammarAccess.getTypedefMappingAccess().getConstraintAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefMapping__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefMapping__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefMapping__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefMappingAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getTypedefMappingAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypedefConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefConstraint__Group__0__Impl
	rule__TypedefConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefConstraintAccess().getWithKeyword_0()); }
	'with'
	{ after(grammarAccess.getTypedefConstraintAccess().getWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefConstraint__Group__1__Impl
	rule__TypedefConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefConstraintAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTypedefConstraintAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefConstraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefConstraint__Group__2__Impl
	rule__TypedefConstraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefConstraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefConstraintAccess().getExpressionsAssignment_2()); }
	(rule__TypedefConstraint__ExpressionsAssignment_2)
	{ after(grammarAccess.getTypedefConstraintAccess().getExpressionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefConstraint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypedefConstraint__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefConstraint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedefConstraintAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTypedefConstraintAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getConstAssignment_0()); }
	(rule__VariableDeclaration__ConstAssignment_0)?
	{ after(grammarAccess.getVariableDeclarationAccess().getConstAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_1()); }
	(rule__VariableDeclaration__TypeAssignment_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getDeclsAssignment_2()); }
	(rule__VariableDeclaration__DeclsAssignment_2)
	{ after(grammarAccess.getVariableDeclarationAccess().getDeclsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__3__Impl
	rule__VariableDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_3()); }
	(rule__VariableDeclaration__Group_3__0)*
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_3__0__Impl
	rule__VariableDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getDeclsAssignment_3_1()); }
	(rule__VariableDeclaration__DeclsAssignment_3_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getDeclsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclarationPart__Group__0__Impl
	rule__VariableDeclarationPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationPartAccess().getNameAssignment_0()); }
	(rule__VariableDeclarationPart__NameAssignment_0)
	{ after(grammarAccess.getVariableDeclarationPartAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclarationPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationPartAccess().getGroup_1()); }
	(rule__VariableDeclarationPart__Group_1__0)?
	{ after(grammarAccess.getVariableDeclarationPartAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarationPart__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclarationPart__Group_1__0__Impl
	rule__VariableDeclarationPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationPart__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationPartAccess().getEqualsSignKeyword_1_0()); }
	'='
	{ after(grammarAccess.getVariableDeclarationPartAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationPart__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclarationPart__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationPart__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationPartAccess().getDefaultAssignment_1_1()); }
	(rule__VariableDeclarationPart__DefaultAssignment_1_1)
	{ after(grammarAccess.getVariableDeclarationPartAccess().getDefaultAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_0()); }
	(rule__QualifiedName__Group_0__0)?
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getQNameAssignment_1()); }
	(rule__QualifiedName__QNameAssignment_1)
	{ after(grammarAccess.getQualifiedNameAccess().getQNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_0__0__Impl
	rule__QualifiedName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getQNameAssignment_0_0()); }
	(rule__QualifiedName__QNameAssignment_0_0)
	{ after(grammarAccess.getQualifiedNameAccess().getQNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_0__1__Impl
	rule__QualifiedName__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getQNameAssignment_0_1()); }
	(rule__QualifiedName__QNameAssignment_0_1)
	{ after(grammarAccess.getQualifiedNameAccess().getQNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_0_2()); }
	(rule__QualifiedName__Group_0_2__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_0_2__0__Impl
	rule__QualifiedName__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getQNameAssignment_0_2_0()); }
	(rule__QualifiedName__QNameAssignment_0_2_0)
	{ after(grammarAccess.getQualifiedNameAccess().getQNameAssignment_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getQNameAssignment_0_2_1()); }
	(rule__QualifiedName__QNameAssignment_0_2_1)
	{ after(grammarAccess.getQualifiedNameAccess().getQNameAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AccessName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessName__Group__0__Impl
	rule__AccessName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessNameAccess().getANameAssignment_0()); }
	(rule__AccessName__ANameAssignment_0)
	{ after(grammarAccess.getAccessNameAccess().getANameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessNameAccess().getANameAssignment_1()); }
	(rule__AccessName__ANameAssignment_1)
	{ after(grammarAccess.getAccessNameAccess().getANameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DerivedType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedType__Group__0__Impl
	rule__DerivedType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedTypeAccess().getAlternatives_0()); }
	(rule__DerivedType__Alternatives_0)
	{ after(grammarAccess.getDerivedTypeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedType__Group__1__Impl
	rule__DerivedType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDerivedTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedType__Group__2__Impl
	rule__DerivedType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedTypeAccess().getTypeAssignment_2()); }
	(rule__DerivedType__TypeAssignment_2)
	{ after(grammarAccess.getDerivedTypeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getDerivedTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotateTo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotateTo__Group__0__Impl
	rule__AnnotateTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotateToAccess().getSnameAssignment_0()); }
	(rule__AnnotateTo__SnameAssignment_0)
	{ after(grammarAccess.getAnnotateToAccess().getSnameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotateTo__Group__1__Impl
	rule__AnnotateTo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotateToAccess().getAnnotationTypeAssignment_1()); }
	(rule__AnnotateTo__AnnotationTypeAssignment_1)
	{ after(grammarAccess.getAnnotateToAccess().getAnnotationTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotateTo__Group__2__Impl
	rule__AnnotateTo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotateToAccess().getAnnotationDeclAssignment_2()); }
	(rule__AnnotateTo__AnnotationDeclAssignment_2)
	{ after(grammarAccess.getAnnotateToAccess().getAnnotationDeclAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotateTo__Group__3__Impl
	rule__AnnotateTo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotateToAccess().getToKeyword_3()); }
	'to'
	{ after(grammarAccess.getAnnotateToAccess().getToKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotateTo__Group__4__Impl
	rule__AnnotateTo__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotateToAccess().getAlternatives_4()); }
	(rule__AnnotateTo__Alternatives_4)
	{ after(grammarAccess.getAnnotateToAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotateTo__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotateToAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getAnnotateToAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotateTo__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotateTo__Group_4_1__0__Impl
	rule__AnnotateTo__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotateToAccess().getNamesAssignment_4_1_0()); }
	(rule__AnnotateTo__NamesAssignment_4_1_0)
	{ after(grammarAccess.getAnnotateToAccess().getNamesAssignment_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotateTo__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotateToAccess().getGroup_4_1_1()); }
	(rule__AnnotateTo__Group_4_1_1__0)*
	{ after(grammarAccess.getAnnotateToAccess().getGroup_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotateTo__Group_4_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotateTo__Group_4_1_1__0__Impl
	rule__AnnotateTo__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group_4_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotateToAccess().getCommaKeyword_4_1_1_0()); }
	','
	{ after(grammarAccess.getAnnotateToAccess().getCommaKeyword_4_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group_4_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotateTo__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__Group_4_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotateToAccess().getNamesAssignment_4_1_1_1()); }
	(rule__AnnotateTo__NamesAssignment_4_1_1_1)
	{ after(grammarAccess.getAnnotateToAccess().getNamesAssignment_4_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Freeze__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Freeze__Group__0__Impl
	rule__Freeze__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeAccess().getFreezeKeyword_0()); }
	'freeze'
	{ after(grammarAccess.getFreezeAccess().getFreezeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Freeze__Group__1__Impl
	rule__Freeze__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getFreezeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Freeze__Group__2__Impl
	rule__Freeze__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFreezeAccess().getNamesAssignment_2()); }
		(rule__Freeze__NamesAssignment_2)
		{ after(grammarAccess.getFreezeAccess().getNamesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getFreezeAccess().getNamesAssignment_2()); }
		(rule__Freeze__NamesAssignment_2)*
		{ after(grammarAccess.getFreezeAccess().getNamesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Freeze__Group__3__Impl
	rule__Freeze__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getFreezeAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Freeze__Group__4__Impl
	rule__Freeze__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeAccess().getGroup_4()); }
	(rule__Freeze__Group_4__0)?
	{ after(grammarAccess.getFreezeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Freeze__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeAccess().getSemicolonKeyword_5()); }
	(';')?
	{ after(grammarAccess.getFreezeAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Freeze__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Freeze__Group_4__0__Impl
	rule__Freeze__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeAccess().getButKeyword_4_0()); }
	'but'
	{ after(grammarAccess.getFreezeAccess().getButKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Freeze__Group_4__1__Impl
	rule__Freeze__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeAccess().getLeftParenthesisKeyword_4_1()); }
	'('
	{ after(grammarAccess.getFreezeAccess().getLeftParenthesisKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Freeze__Group_4__2__Impl
	rule__Freeze__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeAccess().getIdAssignment_4_2()); }
	(rule__Freeze__IdAssignment_4_2)
	{ after(grammarAccess.getFreezeAccess().getIdAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Freeze__Group_4__3__Impl
	rule__Freeze__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeAccess().getVerticalLineKeyword_4_3()); }
	'|'
	{ after(grammarAccess.getFreezeAccess().getVerticalLineKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Freeze__Group_4__4__Impl
	rule__Freeze__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeAccess().getExAssignment_4_4()); }
	(rule__Freeze__ExAssignment_4_4)
	{ after(grammarAccess.getFreezeAccess().getExAssignment_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group_4__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Freeze__Group_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__Group_4__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeAccess().getRightParenthesisKeyword_4_5()); }
	')'
	{ after(grammarAccess.getFreezeAccess().getRightParenthesisKeyword_4_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FreezeStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreezeStatement__Group__0__Impl
	rule__FreezeStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezeStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeStatementAccess().getAlternatives_0()); }
	(rule__FreezeStatement__Alternatives_0)
	{ after(grammarAccess.getFreezeStatementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezeStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreezeStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezeStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeStatementAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getFreezeStatementAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FreezeStatement__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreezeStatement__Group_0_1__0__Impl
	rule__FreezeStatement__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezeStatement__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeStatementAccess().getNameAssignment_0_1_0()); }
	(rule__FreezeStatement__NameAssignment_0_1_0)
	{ after(grammarAccess.getFreezeStatementAccess().getNameAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezeStatement__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreezeStatement__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezeStatement__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezeStatementAccess().getAccessAssignment_0_1_1()); }
	(rule__FreezeStatement__AccessAssignment_0_1_1)?
	{ after(grammarAccess.getFreezeStatementAccess().getAccessAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Eval__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__0__Impl
	rule__Eval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getEvalAction_0()); }
	()
	{ after(grammarAccess.getEvalAccess().getEvalAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__1__Impl
	rule__Eval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getEvalKeyword_1()); }
	'eval'
	{ after(grammarAccess.getEvalAccess().getEvalKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__2__Impl
	rule__Eval__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEvalAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__3__Impl
	rule__Eval__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getNestedAssignment_3()); }
	(rule__Eval__NestedAssignment_3)*
	{ after(grammarAccess.getEvalAccess().getNestedAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__4__Impl
	rule__Eval__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getStatementsAssignment_4()); }
	(rule__Eval__StatementsAssignment_4)*
	{ after(grammarAccess.getEvalAccess().getStatementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__5__Impl
	rule__Eval__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getEvalAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getSemicolonKeyword_6()); }
	(';')?
	{ after(grammarAccess.getEvalAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__0__Impl
	rule__InterfaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getInterfaceKeyword_0()); }
	'interface'
	{ after(grammarAccess.getInterfaceDeclarationAccess().getInterfaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__1__Impl
	rule__InterfaceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getNameAssignment_1()); }
	(rule__InterfaceDeclaration__NameAssignment_1)
	{ after(grammarAccess.getInterfaceDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__2__Impl
	rule__InterfaceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getInterfaceDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__3__Impl
	rule__InterfaceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getExportsAssignment_3()); }
	(rule__InterfaceDeclaration__ExportsAssignment_3)*
	{ after(grammarAccess.getInterfaceDeclarationAccess().getExportsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__4__Impl
	rule__InterfaceDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getInterfaceDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getSemicolonKeyword_5()); }
	(';')?
	{ after(grammarAccess.getInterfaceDeclarationAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__0__Impl
	rule__Export__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getExportKeyword_0()); }
	'export'
	{ after(grammarAccess.getExportAccess().getExportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__1__Impl
	rule__Export__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getNamesAssignment_1()); }
	(rule__Export__NamesAssignment_1)
	{ after(grammarAccess.getExportAccess().getNamesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__2__Impl
	rule__Export__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getGroup_2()); }
	(rule__Export__Group_2__0)*
	{ after(grammarAccess.getExportAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getExportAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group_2__0__Impl
	rule__Export__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getExportAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getNamesAssignment_2_1()); }
	(rule__Export__NamesAssignment_2_1)
	{ after(grammarAccess.getExportAccess().getNamesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStmt__Group__0__Impl
	rule__ImportStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStmtAccess().getAlternatives_0()); }
	(rule__ImportStmt__Alternatives_0)?
	{ after(grammarAccess.getImportStmtAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStmt__Group__1__Impl
	rule__ImportStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStmtAccess().getNameAssignment_1()); }
	(rule__ImportStmt__NameAssignment_1)
	{ after(grammarAccess.getImportStmtAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStmt__Group__2__Impl
	rule__ImportStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStmtAccess().getGroup_2()); }
	(rule__ImportStmt__Group_2__0)?
	{ after(grammarAccess.getImportStmtAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStmt__Group__3__Impl
	rule__ImportStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStmtAccess().getWildcardAssignment_3()); }
	(rule__ImportStmt__WildcardAssignment_3)?
	{ after(grammarAccess.getImportStmtAccess().getWildcardAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStmt__Group__4__Impl
	rule__ImportStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStmtAccess().getGroup_4()); }
	(rule__ImportStmt__Group_4__0)?
	{ after(grammarAccess.getImportStmtAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStmt__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStmtAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getImportStmtAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStmt__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStmt__Group_2__0__Impl
	rule__ImportStmt__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStmtAccess().getColonColonKeyword_2_0()); }
	'::'
	{ after(grammarAccess.getImportStmtAccess().getColonColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStmt__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStmtAccess().getInterfaceAssignment_2_1()); }
	(rule__ImportStmt__InterfaceAssignment_2_1)
	{ after(grammarAccess.getImportStmtAccess().getInterfaceAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStmt__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStmt__Group_4__0__Impl
	rule__ImportStmt__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStmtAccess().getWithKeyword_4_0()); }
	'with'
	{ after(grammarAccess.getImportStmtAccess().getWithKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStmt__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStmtAccess().getRestrictionAssignment_4_1()); }
	(rule__ImportStmt__RestrictionAssignment_4_1)
	{ after(grammarAccess.getImportStmtAccess().getRestrictionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConflictStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictStmt__Group__0__Impl
	rule__ConflictStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictStmtAccess().getConflictsKeyword_0()); }
	'conflicts'
	{ after(grammarAccess.getConflictStmtAccess().getConflictsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictStmt__Group__1__Impl
	rule__ConflictStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictStmtAccess().getNameAssignment_1()); }
	(rule__ConflictStmt__NameAssignment_1)
	{ after(grammarAccess.getConflictStmtAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictStmt__Group__2__Impl
	rule__ConflictStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictStmtAccess().getGroup_2()); }
	(rule__ConflictStmt__Group_2__0)?
	{ after(grammarAccess.getConflictStmtAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictStmt__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictStmtAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getConflictStmtAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConflictStmt__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictStmt__Group_2__0__Impl
	rule__ConflictStmt__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictStmt__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictStmtAccess().getWithKeyword_2_0()); }
	'with'
	{ after(grammarAccess.getConflictStmtAccess().getWithKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictStmt__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConflictStmt__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictStmt__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConflictStmtAccess().getRestrictionAssignment_2_1()); }
	(rule__ConflictStmt__RestrictionAssignment_2_1)
	{ after(grammarAccess.getConflictStmtAccess().getRestrictionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionStmt__Group__0__Impl
	rule__VersionStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionStmtAccess().getVersionKeyword_0()); }
	'version'
	{ after(grammarAccess.getVersionStmtAccess().getVersionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionStmt__Group__1__Impl
	rule__VersionStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionStmtAccess().getVersionAssignment_1()); }
	(rule__VersionStmt__VersionAssignment_1)
	{ after(grammarAccess.getVersionStmtAccess().getVersionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionStmtAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getVersionStmtAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpDefStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefStatement__Group__0__Impl
	rule__OpDefStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefStatementAccess().getAnnotationsAssignment_0()); }
	(rule__OpDefStatement__AnnotationsAssignment_0)?
	{ after(grammarAccess.getOpDefStatementAccess().getAnnotationsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefStatement__Group__1__Impl
	rule__OpDefStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefStatementAccess().getDefKeyword_1()); }
	'def'
	{ after(grammarAccess.getOpDefStatementAccess().getDefKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefStatement__Group__2__Impl
	rule__OpDefStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefStatementAccess().getStaticAssignment_2()); }
	(rule__OpDefStatement__StaticAssignment_2)?
	{ after(grammarAccess.getOpDefStatementAccess().getStaticAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefStatement__Group__3__Impl
	rule__OpDefStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefStatementAccess().getResultAssignment_3()); }
	(rule__OpDefStatement__ResultAssignment_3)
	{ after(grammarAccess.getOpDefStatementAccess().getResultAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefStatement__Group__4__Impl
	rule__OpDefStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefStatementAccess().getIdAssignment_4()); }
	(rule__OpDefStatement__IdAssignment_4)
	{ after(grammarAccess.getOpDefStatementAccess().getIdAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefStatement__Group__5__Impl
	rule__OpDefStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefStatementAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getOpDefStatementAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefStatement__Group__6__Impl
	rule__OpDefStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefStatementAccess().getParamAssignment_6()); }
	(rule__OpDefStatement__ParamAssignment_6)
	{ after(grammarAccess.getOpDefStatementAccess().getParamAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefStatement__Group__7__Impl
	rule__OpDefStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefStatementAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getOpDefStatementAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefStatement__Group__8__Impl
	rule__OpDefStatement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefStatementAccess().getEqualsSignKeyword_8()); }
	'='
	{ after(grammarAccess.getOpDefStatementAccess().getEqualsSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefStatement__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefStatementAccess().getAlternatives_9()); }
	(rule__OpDefStatement__Alternatives_9)
	{ after(grammarAccess.getOpDefStatementAccess().getAlternatives_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpDefStatement__Group_9_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefStatement__Group_9_0__0__Impl
	rule__OpDefStatement__Group_9_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group_9_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefStatementAccess().getImplAssignment_9_0_0()); }
	(rule__OpDefStatement__ImplAssignment_9_0_0)
	{ after(grammarAccess.getOpDefStatementAccess().getImplAssignment_9_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group_9_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefStatement__Group_9_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__Group_9_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefStatementAccess().getSemicolonKeyword_9_0_1()); }
	';'
	{ after(grammarAccess.getOpDefStatementAccess().getSemicolonKeyword_9_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDeclarations__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDeclarations__Group__0__Impl
	rule__AnnotationDeclarations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDeclarations__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDeclarationsAccess().getAnnotationDeclarationsAction_0()); }
	()
	{ after(grammarAccess.getAnnotationDeclarationsAccess().getAnnotationDeclarationsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDeclarations__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDeclarations__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDeclarations__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDeclarationsAccess().getGroup_1()); }
	(rule__AnnotationDeclarations__Group_1__0)*
	{ after(grammarAccess.getAnnotationDeclarationsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationDeclarations__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDeclarations__Group_1__0__Impl
	rule__AnnotationDeclarations__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDeclarations__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDeclarationsAccess().getCommercialAtKeyword_1_0()); }
	'@'
	{ after(grammarAccess.getAnnotationDeclarationsAccess().getCommercialAtKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDeclarations__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationDeclarations__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDeclarations__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationDeclarationsAccess().getIdAssignment_1_1()); }
	(rule__AnnotationDeclarations__IdAssignment_1_1)
	{ after(grammarAccess.getAnnotationDeclarationsAccess().getIdAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpDefParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefParameterList__Group__0__Impl
	rule__OpDefParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefParameterListAccess().getOpDefParameterListAction_0()); }
	()
	{ after(grammarAccess.getOpDefParameterListAccess().getOpDefParameterListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefParameterListAccess().getGroup_1()); }
	(rule__OpDefParameterList__Group_1__0)?
	{ after(grammarAccess.getOpDefParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpDefParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefParameterList__Group_1__0__Impl
	rule__OpDefParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefParameterListAccess().getListAssignment_1_0()); }
	(rule__OpDefParameterList__ListAssignment_1_0)
	{ after(grammarAccess.getOpDefParameterListAccess().getListAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefParameterListAccess().getGroup_1_1()); }
	(rule__OpDefParameterList__Group_1_1__0)*
	{ after(grammarAccess.getOpDefParameterListAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpDefParameterList__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefParameterList__Group_1_1__0__Impl
	rule__OpDefParameterList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameterList__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefParameterListAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getOpDefParameterListAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameterList__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefParameterList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameterList__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefParameterListAccess().getListAssignment_1_1_1()); }
	(rule__OpDefParameterList__ListAssignment_1_1_1)
	{ after(grammarAccess.getOpDefParameterListAccess().getListAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpDefParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefParameter__Group__0__Impl
	rule__OpDefParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefParameterAccess().getTypeAssignment_0()); }
	(rule__OpDefParameter__TypeAssignment_0)
	{ after(grammarAccess.getOpDefParameterAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefParameter__Group__1__Impl
	rule__OpDefParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefParameterAccess().getIdAssignment_1()); }
	(rule__OpDefParameter__IdAssignment_1)
	{ after(grammarAccess.getOpDefParameterAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefParameterAccess().getGroup_2()); }
	(rule__OpDefParameter__Group_2__0)?
	{ after(grammarAccess.getOpDefParameterAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpDefParameter__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefParameter__Group_2__0__Impl
	rule__OpDefParameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameter__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefParameterAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getOpDefParameterAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameter__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpDefParameter__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameter__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpDefParameterAccess().getValAssignment_2_1()); }
	(rule__OpDefParameter__ValAssignment_2_1)
	{ after(grammarAccess.getOpDefParameterAccess().getValAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionStatement__Group__0__Impl
	rule__ExpressionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionStatementAccess().getExprAssignment_0()); }
	(rule__ExpressionStatement__ExprAssignment_0)
	{ after(grammarAccess.getExpressionStatementAccess().getExprAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__0__Impl
	rule__LetExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getLetKeyword_0()); }
	'let'
	{ after(grammarAccess.getLetExpressionAccess().getLetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__1__Impl
	rule__LetExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getTypeAssignment_1()); }
	(rule__LetExpression__TypeAssignment_1)
	{ after(grammarAccess.getLetExpressionAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__2__Impl
	rule__LetExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getNameAssignment_2()); }
	(rule__LetExpression__NameAssignment_2)
	{ after(grammarAccess.getLetExpressionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__3__Impl
	rule__LetExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getLetExpressionAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__4__Impl
	rule__LetExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getValueExprAssignment_4()); }
	(rule__LetExpression__ValueExprAssignment_4)
	{ after(grammarAccess.getLetExpressionAccess().getValueExprAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__5__Impl
	rule__LetExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getInKeyword_5()); }
	'in'
	{ after(grammarAccess.getLetExpressionAccess().getInKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getSubExprAssignment_6()); }
	(rule__LetExpression__SubExprAssignment_6)
	{ after(grammarAccess.getLetExpressionAccess().getSubExprAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockExpression__Group__0__Impl
	rule__BlockExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockExpression__Group__1__Impl
	rule__BlockExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBlockExpressionAccess().getExprsAssignment_1()); }
		(rule__BlockExpression__ExprsAssignment_1)
		{ after(grammarAccess.getBlockExpressionAccess().getExprsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getBlockExpressionAccess().getExprsAssignment_1()); }
		(rule__BlockExpression__ExprsAssignment_1)*
		{ after(grammarAccess.getBlockExpressionAccess().getExprsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpression__Group__0__Impl
	rule__AssignmentExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExpressionAccess().getLeftAssignment_0()); }
	(rule__AssignmentExpression__LeftAssignment_0)
	{ after(grammarAccess.getAssignmentExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExpressionAccess().getRightAssignment_1()); }
	(rule__AssignmentExpression__RightAssignment_1)?
	{ after(grammarAccess.getAssignmentExpressionAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpressionPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpressionPart__Group__0__Impl
	rule__AssignmentExpressionPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpressionPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExpressionPartAccess().getOpAssignment_0()); }
	(rule__AssignmentExpressionPart__OpAssignment_0)
	{ after(grammarAccess.getAssignmentExpressionPartAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpressionPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentExpressionPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpressionPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentExpressionPartAccess().getAlternatives_1()); }
	(rule__AssignmentExpressionPart__Alternatives_1)
	{ after(grammarAccess.getAssignmentExpressionPartAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImplicationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationExpression__Group__0__Impl
	rule__ImplicationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationExpressionAccess().getLeftAssignment_0()); }
	(rule__ImplicationExpression__LeftAssignment_0)
	{ after(grammarAccess.getImplicationExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationExpressionAccess().getRightAssignment_1()); }
	(rule__ImplicationExpression__RightAssignment_1)*
	{ after(grammarAccess.getImplicationExpressionAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImplicationExpressionPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationExpressionPart__Group__0__Impl
	rule__ImplicationExpressionPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationExpressionPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationExpressionPartAccess().getOpAssignment_0()); }
	(rule__ImplicationExpressionPart__OpAssignment_0)
	{ after(grammarAccess.getImplicationExpressionPartAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationExpressionPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationExpressionPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationExpressionPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationExpressionPartAccess().getExAssignment_1()); }
	(rule__ImplicationExpressionPart__ExAssignment_1)
	{ after(grammarAccess.getImplicationExpressionPartAccess().getExAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group__0__Impl
	rule__LogicalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getLeftAssignment_0()); }
	(rule__LogicalExpression__LeftAssignment_0)
	{ after(grammarAccess.getLogicalExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getRightAssignment_1()); }
	(rule__LogicalExpression__RightAssignment_1)*
	{ after(grammarAccess.getLogicalExpressionAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpressionPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpressionPart__Group__0__Impl
	rule__LogicalExpressionPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpressionPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionPartAccess().getOpAssignment_0()); }
	(rule__LogicalExpressionPart__OpAssignment_0)
	{ after(grammarAccess.getLogicalExpressionPartAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpressionPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpressionPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpressionPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionPartAccess().getExAssignment_1()); }
	(rule__LogicalExpressionPart__ExAssignment_1)
	{ after(grammarAccess.getLogicalExpressionPartAccess().getExAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getLeftAssignment_0()); }
	(rule__EqualityExpression__LeftAssignment_0)
	{ after(grammarAccess.getEqualityExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1()); }
	(rule__EqualityExpression__RightAssignment_1)?
	{ after(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpressionPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpressionPart__Group__0__Impl
	rule__EqualityExpressionPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionPartAccess().getOpAssignment_0()); }
	(rule__EqualityExpressionPart__OpAssignment_0)
	{ after(grammarAccess.getEqualityExpressionPartAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpressionPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionPartAccess().getAlternatives_1()); }
	(rule__EqualityExpressionPart__Alternatives_1)
	{ after(grammarAccess.getEqualityExpressionPartAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getLeftAssignment_0()); }
	(rule__RelationalExpression__LeftAssignment_0)
	{ after(grammarAccess.getRelationalExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
	(rule__RelationalExpression__Group_1__0)?
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_0()); }
	(rule__RelationalExpression__RightAssignment_1_0)
	{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRight2Assignment_1_1()); }
	(rule__RelationalExpression__Right2Assignment_1_1)?
	{ after(grammarAccess.getRelationalExpressionAccess().getRight2Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpressionPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpressionPart__Group__0__Impl
	rule__RelationalExpressionPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpressionPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionPartAccess().getOpAssignment_0()); }
	(rule__RelationalExpressionPart__OpAssignment_0)
	{ after(grammarAccess.getRelationalExpressionPartAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpressionPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpressionPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpressionPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionPartAccess().getExAssignment_1()); }
	(rule__RelationalExpressionPart__ExAssignment_1)
	{ after(grammarAccess.getRelationalExpressionPartAccess().getExAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getLeftAssignment_0()); }
	(rule__AdditiveExpression__LeftAssignment_0)
	{ after(grammarAccess.getAdditiveExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1()); }
	(rule__AdditiveExpression__RightAssignment_1)*
	{ after(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpressionPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpressionPart__Group__0__Impl
	rule__AdditiveExpressionPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionPartAccess().getOpAssignment_0()); }
	(rule__AdditiveExpressionPart__OpAssignment_0)
	{ after(grammarAccess.getAdditiveExpressionPartAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpressionPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionPartAccess().getExAssignment_1()); }
	(rule__AdditiveExpressionPart__ExAssignment_1)
	{ after(grammarAccess.getAdditiveExpressionPartAccess().getExAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getLeftAssignment_0()); }
	(rule__MultiplicativeExpression__LeftAssignment_0)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1()); }
	(rule__MultiplicativeExpression__RightAssignment_1)?
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpressionPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpressionPart__Group__0__Impl
	rule__MultiplicativeExpressionPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionPartAccess().getOpAssignment_0()); }
	(rule__MultiplicativeExpressionPart__OpAssignment_0)
	{ after(grammarAccess.getMultiplicativeExpressionPartAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpressionPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionPartAccess().getExprAssignment_1()); }
	(rule__MultiplicativeExpressionPart__ExprAssignment_1)
	{ after(grammarAccess.getMultiplicativeExpressionPartAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__0__Impl
	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0()); }
	(rule__UnaryExpression__OpAssignment_0)?
	{ after(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getExprAssignment_1()); }
	(rule__UnaryExpression__ExprAssignment_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_0__0__Impl
	rule__PostfixExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getCallAssignment_0_0()); }
	(rule__PostfixExpression__CallAssignment_0_0)
	{ after(grammarAccess.getPostfixExpressionAccess().getCallAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_0__1__Impl
	rule__PostfixExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getFCallsAssignment_0_1()); }
	(rule__PostfixExpression__FCallsAssignment_0_1)*
	{ after(grammarAccess.getPostfixExpressionAccess().getFCallsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getAccessAssignment_0_2()); }
	(rule__PostfixExpression__AccessAssignment_0_2)?
	{ after(grammarAccess.getPostfixExpressionAccess().getAccessAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group_0__0__Impl
	rule__Call__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getFullStopKeyword_0_0()); }
	'.'
	{ after(grammarAccess.getCallAccess().getFullStopKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getCallAssignment_0_1()); }
	(rule__Call__CallAssignment_0_1)
	{ after(grammarAccess.getCallAccess().getCallAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group_1__0__Impl
	rule__Call__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); }
	'->'
	{ after(grammarAccess.getCallAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getContainerOpAssignment_1_1()); }
	(rule__Call__ContainerOpAssignment_1_1)
	{ after(grammarAccess.getCallAccess().getContainerOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group_2__0__Impl
	rule__Call__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getCallAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group_2__1__Impl
	rule__Call__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getArrayExAssignment_2_1()); }
	(rule__Call__ArrayExAssignment_2_1)
	{ after(grammarAccess.getCallAccess().getArrayExAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getCallAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureCall__Group__0__Impl
	rule__FeatureCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureCallAccess().getAlternatives_0()); }
	(rule__FeatureCall__Alternatives_0)
	{ after(grammarAccess.getFeatureCallAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureCall__Group__1__Impl
	rule__FeatureCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFeatureCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureCall__Group__2__Impl
	rule__FeatureCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureCallAccess().getActualArgumentListParserRuleCall_2()); }
	(ruleActualArgumentList)?
	{ after(grammarAccess.getFeatureCallAccess().getActualArgumentListParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFeatureCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContainerOp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContainerOp__Group__0__Impl
	rule__ContainerOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerOp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerOpAccess().getNameAssignment_0()); }
	(rule__ContainerOp__NameAssignment_0)
	{ after(grammarAccess.getContainerOpAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerOp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContainerOp__Group__1__Impl
	rule__ContainerOp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerOp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerOpAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getContainerOpAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerOp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContainerOp__Group__2__Impl
	rule__ContainerOp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerOp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerOpAccess().getDeclAssignment_2()); }
	(rule__ContainerOp__DeclAssignment_2)?
	{ after(grammarAccess.getContainerOpAccess().getDeclAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerOp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContainerOp__Group__3__Impl
	rule__ContainerOp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerOp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerOpAccess().getActualArgumentListParserRuleCall_3()); }
	(ruleActualArgumentList)?
	{ after(grammarAccess.getContainerOpAccess().getActualArgumentListParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerOp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContainerOp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerOp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerOpAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getContainerOpAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declarator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group__0__Impl
	rule__Declarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getDeclAssignment_0()); }
	(rule__Declarator__DeclAssignment_0)
	{ after(grammarAccess.getDeclaratorAccess().getDeclAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group__1__Impl
	rule__Declarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getGroup_1()); }
	(rule__Declarator__Group_1__0)*
	{ after(grammarAccess.getDeclaratorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getVerticalLineKeyword_2()); }
	'|'
	{ after(grammarAccess.getDeclaratorAccess().getVerticalLineKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declarator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group_1__0__Impl
	rule__Declarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getDeclaratorAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getDeclAssignment_1_1()); }
	(rule__Declarator__DeclAssignment_1_1)
	{ after(grammarAccess.getDeclaratorAccess().getDeclAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getTypeAssignment_0()); }
	(rule__Declaration__TypeAssignment_0)?
	{ after(grammarAccess.getDeclarationAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getIdAssignment_1()); }
	(rule__Declaration__IdAssignment_1)
	{ after(grammarAccess.getDeclarationAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__2__Impl
	rule__Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getGroup_2()); }
	(rule__Declaration__Group_2__0)*
	{ after(grammarAccess.getDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getGroup_3()); }
	(rule__Declaration__Group_3__0)?
	{ after(grammarAccess.getDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group_2__0__Impl
	rule__Declaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getDeclarationAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getIdAssignment_2_1()); }
	(rule__Declaration__IdAssignment_2_1)
	{ after(grammarAccess.getDeclarationAccess().getIdAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group_3__0__Impl
	rule__Declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getEqualsSignKeyword_3_0()); }
	'='
	{ after(grammarAccess.getDeclarationAccess().getEqualsSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getInitAssignment_3_1()); }
	(rule__Declaration__InitAssignment_3_1)
	{ after(grammarAccess.getDeclarationAccess().getInitAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActualArgumentList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActualArgumentList__Group__0__Impl
	rule__ActualArgumentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgumentList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActualArgumentListAccess().getArgsAssignment_0()); }
	(rule__ActualArgumentList__ArgsAssignment_0)
	{ after(grammarAccess.getActualArgumentListAccess().getArgsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgumentList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActualArgumentList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgumentList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActualArgumentListAccess().getGroup_1()); }
	(rule__ActualArgumentList__Group_1__0)*
	{ after(grammarAccess.getActualArgumentListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActualArgumentList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActualArgumentList__Group_1__0__Impl
	rule__ActualArgumentList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgumentList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActualArgumentListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getActualArgumentListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgumentList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActualArgumentList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgumentList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActualArgumentListAccess().getArgsAssignment_1_1()); }
	(rule__ActualArgumentList__ArgsAssignment_1_1)
	{ after(grammarAccess.getActualArgumentListAccess().getArgsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActualArgument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActualArgument__Group__0__Impl
	rule__ActualArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActualArgumentAccess().getGroup_0()); }
	(rule__ActualArgument__Group_0__0)?
	{ after(grammarAccess.getActualArgumentAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActualArgument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActualArgumentAccess().getArgAssignment_1()); }
	(rule__ActualArgument__ArgAssignment_1)
	{ after(grammarAccess.getActualArgumentAccess().getArgAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActualArgument__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActualArgument__Group_0__0__Impl
	rule__ActualArgument__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgument__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActualArgumentAccess().getNameAssignment_0_0()); }
	(rule__ActualArgument__NameAssignment_0_0)
	{ after(grammarAccess.getActualArgumentAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgument__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActualArgument__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgument__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActualArgumentAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getActualArgumentAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionAccess__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionAccess__Group__0__Impl
	rule__ExpressionAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAccess__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccessAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getExpressionAccessAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAccess__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionAccess__Group__1__Impl
	rule__ExpressionAccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAccess__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccessAccess().getNameAssignment_1()); }
	(rule__ExpressionAccess__NameAssignment_1)
	{ after(grammarAccess.getExpressionAccessAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAccess__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionAccess__Group__2__Impl
	rule__ExpressionAccess__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAccess__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccessAccess().getCallsAssignment_2()); }
	(rule__ExpressionAccess__CallsAssignment_2)*
	{ after(grammarAccess.getExpressionAccessAccess().getCallsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAccess__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionAccess__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAccess__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccessAccess().getAccessAssignment_3()); }
	(rule__ExpressionAccess__AccessAssignment_3)?
	{ after(grammarAccess.getExpressionAccessAccess().getAccessAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group__0__Impl
	rule__PrimaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_0()); }
	(rule__PrimaryExpression__Alternatives_0)
	{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group__1__Impl
	rule__PrimaryExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getCallsAssignment_1()); }
	(rule__PrimaryExpression__CallsAssignment_1)*
	{ after(grammarAccess.getPrimaryExpressionAccess().getCallsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getAccessAssignment_2()); }
	(rule__PrimaryExpression__AccessAssignment_2)?
	{ after(grammarAccess.getPrimaryExpressionAccess().getAccessAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0_1__0__Impl
	rule__PrimaryExpression__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_1_0()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0_1__1__Impl
	rule__PrimaryExpression__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getExAssignment_0_1_1()); }
	(rule__PrimaryExpression__ExAssignment_0_1_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getExAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_1_2()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0_3__0__Impl
	rule__PrimaryExpression__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRefByKeyword_0_3_0()); }
	'refBy'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRefByKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0_3__1__Impl
	rule__PrimaryExpression__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_3_1()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0_3__2__Impl
	rule__PrimaryExpression__Group_0_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRefExAssignment_0_3_2()); }
	(rule__PrimaryExpression__RefExAssignment_0_3_2)
	{ after(grammarAccess.getPrimaryExpressionAccess().getRefExAssignment_0_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_0_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_3_3()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContainerInitializer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContainerInitializer__Group__0__Impl
	rule__ContainerInitializer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerInitializer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerInitializerAccess().getContainerInitializerAction_0()); }
	()
	{ after(grammarAccess.getContainerInitializerAccess().getContainerInitializerAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerInitializer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContainerInitializer__Group__1__Impl
	rule__ContainerInitializer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerInitializer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerInitializerAccess().getTypeAssignment_1()); }
	(rule__ContainerInitializer__TypeAssignment_1)?
	{ after(grammarAccess.getContainerInitializerAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerInitializer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContainerInitializer__Group__2__Impl
	rule__ContainerInitializer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerInitializer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerInitializerAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getContainerInitializerAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerInitializer__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContainerInitializer__Group__3__Impl
	rule__ContainerInitializer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerInitializer__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerInitializerAccess().getInitAssignment_3()); }
	(rule__ContainerInitializer__InitAssignment_3)?
	{ after(grammarAccess.getContainerInitializerAccess().getInitAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerInitializer__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContainerInitializer__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerInitializer__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerInitializerAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getContainerInitializerAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionListOrRange__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionListOrRange__Group__0__Impl
	rule__ExpressionListOrRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListOrRange__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListOrRangeAccess().getListAssignment_0()); }
	(rule__ExpressionListOrRange__ListAssignment_0)
	{ after(grammarAccess.getExpressionListOrRangeAccess().getListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListOrRange__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionListOrRange__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListOrRange__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListOrRangeAccess().getGroup_1()); }
	(rule__ExpressionListOrRange__Group_1__0)*
	{ after(grammarAccess.getExpressionListOrRangeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionListOrRange__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionListOrRange__Group_1__0__Impl
	rule__ExpressionListOrRange__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListOrRange__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListOrRangeAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExpressionListOrRangeAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListOrRange__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionListOrRange__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListOrRange__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListOrRangeAccess().getListAssignment_1_1()); }
	(rule__ExpressionListOrRange__ListAssignment_1_1)
	{ after(grammarAccess.getExpressionListOrRangeAccess().getListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionListEntry__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionListEntry__Group__0__Impl
	rule__ExpressionListEntry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListEntryAccess().getGroup_0()); }
	(rule__ExpressionListEntry__Group_0__0)?
	{ after(grammarAccess.getExpressionListEntryAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionListEntry__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListEntryAccess().getAlternatives_1()); }
	(rule__ExpressionListEntry__Alternatives_1)
	{ after(grammarAccess.getExpressionListEntryAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionListEntry__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionListEntry__Group_0__0__Impl
	rule__ExpressionListEntry__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListEntryAccess().getNameAssignment_0_0()); }
	(rule__ExpressionListEntry__NameAssignment_0_0)
	{ after(grammarAccess.getExpressionListEntryAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionListEntry__Group_0__1__Impl
	rule__ExpressionListEntry__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListEntryAccess().getGroup_0_1()); }
	(rule__ExpressionListEntry__Group_0_1__0)?
	{ after(grammarAccess.getExpressionListEntryAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionListEntry__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListEntryAccess().getEqualsSignKeyword_0_2()); }
	'='
	{ after(grammarAccess.getExpressionListEntryAccess().getEqualsSignKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionListEntry__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionListEntry__Group_0_1__0__Impl
	rule__ExpressionListEntry__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListEntryAccess().getFullStopKeyword_0_1_0()); }
	'.'
	{ after(grammarAccess.getExpressionListEntryAccess().getFullStopKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionListEntry__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListEntryAccess().getAttribAssignment_0_1_1()); }
	(rule__ExpressionListEntry__AttribAssignment_0_1_1)
	{ after(grammarAccess.getExpressionListEntryAccess().getAttribAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__0__Impl
	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__1__Impl
	rule__IfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfExAssignment_1()); }
	(rule__IfExpression__IfExAssignment_1)
	{ after(grammarAccess.getIfExpressionAccess().getIfExAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__2__Impl
	rule__IfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfExpressionAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__3__Impl
	rule__IfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getThenExAssignment_3()); }
	(rule__IfExpression__ThenExAssignment_3)
	{ after(grammarAccess.getIfExpressionAccess().getThenExAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__4__Impl
	rule__IfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_4()); }
	'else'
	{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__5__Impl
	rule__IfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseExAssignment_5()); }
	(rule__IfExpression__ElseExAssignment_5)
	{ after(grammarAccess.getIfExpressionAccess().getElseExAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getEndifKeyword_6()); }
	'endif'
	{ after(grammarAccess.getIfExpressionAccess().getEndifKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariabilityUnit__ProjectsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariabilityUnitAccess().getProjectsProjectParserRuleCall_1_0()); }
		ruleProject
		{ after(grammarAccess.getVariabilityUnitAccess().getProjectsProjectParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getNameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getProjectAccess().getNameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__VersionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getVersionVersionStmtParserRuleCall_3_0()); }
		ruleVersionStmt
		{ after(grammarAccess.getProjectAccess().getVersionVersionStmtParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__ImportsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getImportsImportStmtParserRuleCall_4_0()); }
		ruleImportStmt
		{ after(grammarAccess.getProjectAccess().getImportsImportStmtParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__ConflictsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getConflictsConflictStmtParserRuleCall_5_0()); }
		ruleConflictStmt
		{ after(grammarAccess.getProjectAccess().getConflictsConflictStmtParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__InterfacesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getInterfacesInterfaceDeclarationParserRuleCall_6_0()); }
		ruleInterfaceDeclaration
		{ after(grammarAccess.getProjectAccess().getInterfacesInterfaceDeclarationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__ContentsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getContentsProjectContentsParserRuleCall_7_0()); }
		ruleProjectContents
		{ after(grammarAccess.getProjectAccess().getContentsProjectContentsParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectContents__ElementsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsTypedefParserRuleCall_1_0_0()); }
		ruleTypedef
		{ after(grammarAccess.getProjectContentsAccess().getElementsTypedefParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectContents__ElementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsVariableDeclarationParserRuleCall_1_1_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getProjectContentsAccess().getElementsVariableDeclarationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectContents__ElementsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsFreezeParserRuleCall_1_2_0()); }
		ruleFreeze
		{ after(grammarAccess.getProjectContentsAccess().getElementsFreezeParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectContents__ElementsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsEvalParserRuleCall_1_3_0()); }
		ruleEval
		{ after(grammarAccess.getProjectContentsAccess().getElementsEvalParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectContents__ElementsAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsExpressionStatementParserRuleCall_1_4_0()); }
		ruleExpressionStatement
		{ after(grammarAccess.getProjectContentsAccess().getElementsExpressionStatementParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectContents__ElementsAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsAnnotateToParserRuleCall_1_5_0()); }
		ruleAnnotateTo
		{ after(grammarAccess.getProjectContentsAccess().getElementsAnnotateToParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectContents__ElementsAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsOpDefStatementParserRuleCall_1_6_0()); }
		ruleOpDefStatement
		{ after(grammarAccess.getProjectContentsAccess().getElementsOpDefStatementParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectContents__ElementsAssignment_1_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectContentsAccess().getElementsAttrAssignmentParserRuleCall_1_7_0()); }
		ruleAttrAssignment
		{ after(grammarAccess.getProjectContentsAccess().getElementsAttrAssignmentParserRuleCall_1_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__TEnumAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefAccess().getTEnumTypedefEnumParserRuleCall_0_0()); }
		ruleTypedefEnum
		{ after(grammarAccess.getTypedefAccess().getTEnumTypedefEnumParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__TCompoundAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefAccess().getTCompoundTypedefCompoundParserRuleCall_1_0()); }
		ruleTypedefCompound
		{ after(grammarAccess.getTypedefAccess().getTCompoundTypedefCompoundParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__TMappingAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefAccess().getTMappingTypedefMappingParserRuleCall_2_0()); }
		ruleTypedefMapping
		{ after(grammarAccess.getTypedefAccess().getTMappingTypedefMappingParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefEnumAccess().getNameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getTypedefEnumAccess().getNameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__LiteralsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefEnumAccess().getLiteralsTypedefEnumLiteralParserRuleCall_3_0()); }
		ruleTypedefEnumLiteral
		{ after(grammarAccess.getTypedefEnumAccess().getLiteralsTypedefEnumLiteralParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__LiteralsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefEnumAccess().getLiteralsTypedefEnumLiteralParserRuleCall_4_1_0()); }
		ruleTypedefEnumLiteral
		{ after(grammarAccess.getTypedefEnumAccess().getLiteralsTypedefEnumLiteralParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnum__ConstraintAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefEnumAccess().getConstraintTypedefConstraintParserRuleCall_6_0()); }
		ruleTypedefConstraint
		{ after(grammarAccess.getTypedefEnumAccess().getConstraintTypedefConstraintParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnumLiteral__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefEnumLiteralAccess().getNameIdentifierParserRuleCall_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getTypedefEnumLiteralAccess().getNameIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefEnumLiteral__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefEnumLiteralAccess().getValueNumValueParserRuleCall_1_1_0()); }
		ruleNumValue
		{ after(grammarAccess.getTypedefEnumLiteralAccess().getValueNumValueParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__AbstractAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefCompoundAccess().getAbstractAbstractKeyword_0_0()); }
		(
			{ before(grammarAccess.getTypedefCompoundAccess().getAbstractAbstractKeyword_0_0()); }
			'abstract'
			{ after(grammarAccess.getTypedefCompoundAccess().getAbstractAbstractKeyword_0_0()); }
		)
		{ after(grammarAccess.getTypedefCompoundAccess().getAbstractAbstractKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefCompoundAccess().getNameIdentifierParserRuleCall_2_0()); }
		ruleIdentifier
		{ after(grammarAccess.getTypedefCompoundAccess().getNameIdentifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__SuperAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefCompoundAccess().getSuperIdentifierParserRuleCall_3_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getTypedefCompoundAccess().getSuperIdentifierParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__SuperAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefCompoundAccess().getSuperIdentifierParserRuleCall_3_2_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getTypedefCompoundAccess().getSuperIdentifierParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__ElementsAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefCompoundAccess().getElementsVariableDeclarationParserRuleCall_5_0_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getTypedefCompoundAccess().getElementsVariableDeclarationParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__ElementsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefCompoundAccess().getElementsExpressionStatementParserRuleCall_5_1_0()); }
		ruleExpressionStatement
		{ after(grammarAccess.getTypedefCompoundAccess().getElementsExpressionStatementParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__ElementsAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefCompoundAccess().getElementsAttrAssignmentParserRuleCall_5_2_0()); }
		ruleAttrAssignment
		{ after(grammarAccess.getTypedefCompoundAccess().getElementsAttrAssignmentParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefCompound__ElementsAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefCompoundAccess().getElementsEvalParserRuleCall_5_3_0()); }
		ruleEval
		{ after(grammarAccess.getTypedefCompoundAccess().getElementsEvalParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__PartsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssignmentAccess().getPartsAttrAssignmentPartParserRuleCall_2_0()); }
		ruleAttrAssignmentPart
		{ after(grammarAccess.getAttrAssignmentAccess().getPartsAttrAssignmentPartParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__PartsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssignmentAccess().getPartsAttrAssignmentPartParserRuleCall_3_1_0()); }
		ruleAttrAssignmentPart
		{ after(grammarAccess.getAttrAssignmentAccess().getPartsAttrAssignmentPartParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__ElementsAssignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssignmentAccess().getElementsVariableDeclarationParserRuleCall_7_0_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getAttrAssignmentAccess().getElementsVariableDeclarationParserRuleCall_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__ElementsAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssignmentAccess().getElementsExpressionStatementParserRuleCall_7_1_0()); }
		ruleExpressionStatement
		{ after(grammarAccess.getAttrAssignmentAccess().getElementsExpressionStatementParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignment__ElementsAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssignmentAccess().getElementsAttrAssignmentParserRuleCall_7_2_0()); }
		ruleAttrAssignment
		{ after(grammarAccess.getAttrAssignmentAccess().getElementsAttrAssignmentParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignmentPart__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssignmentPartAccess().getNameIdentifierParserRuleCall_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getAttrAssignmentPartAccess().getNameIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssignmentPart__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssignmentPartAccess().getValueLogicalExpressionParserRuleCall_2_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getAttrAssignmentPartAccess().getValueLogicalExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefMapping__NewTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefMappingAccess().getNewTypeIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getTypedefMappingAccess().getNewTypeIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefMapping__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefMappingAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getTypedefMappingAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefMapping__ConstraintAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefMappingAccess().getConstraintTypedefConstraintParserRuleCall_3_0()); }
		ruleTypedefConstraint
		{ after(grammarAccess.getTypedefMappingAccess().getConstraintTypedefConstraintParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedefConstraint__ExpressionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefConstraintAccess().getExpressionsExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getTypedefConstraintAccess().getExpressionsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ConstAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_0_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_0_0()); }
			'const'
			{ after(grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_0_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__DeclsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getDeclsVariableDeclarationPartParserRuleCall_2_0()); }
		ruleVariableDeclarationPart
		{ after(grammarAccess.getVariableDeclarationAccess().getDeclsVariableDeclarationPartParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__DeclsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getDeclsVariableDeclarationPartParserRuleCall_3_1_0()); }
		ruleVariableDeclarationPart
		{ after(grammarAccess.getVariableDeclarationAccess().getDeclsVariableDeclarationPartParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationPart__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationPartAccess().getNameIdentifierParserRuleCall_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getVariableDeclarationPartAccess().getNameIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarationPart__DefaultAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationPartAccess().getDefaultExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getVariableDeclarationPartAccess().getDefaultExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getTypeIntegerKeyword_0_0()); }
		(
			{ before(grammarAccess.getBasicTypeAccess().getTypeIntegerKeyword_0_0()); }
			'Integer'
			{ after(grammarAccess.getBasicTypeAccess().getTypeIntegerKeyword_0_0()); }
		)
		{ after(grammarAccess.getBasicTypeAccess().getTypeIntegerKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getTypeRealKeyword_1_0()); }
		(
			{ before(grammarAccess.getBasicTypeAccess().getTypeRealKeyword_1_0()); }
			'Real'
			{ after(grammarAccess.getBasicTypeAccess().getTypeRealKeyword_1_0()); }
		)
		{ after(grammarAccess.getBasicTypeAccess().getTypeRealKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getTypeBooleanKeyword_2_0()); }
		(
			{ before(grammarAccess.getBasicTypeAccess().getTypeBooleanKeyword_2_0()); }
			'Boolean'
			{ after(grammarAccess.getBasicTypeAccess().getTypeBooleanKeyword_2_0()); }
		)
		{ after(grammarAccess.getBasicTypeAccess().getTypeBooleanKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getTypeStringKeyword_3_0()); }
		(
			{ before(grammarAccess.getBasicTypeAccess().getTypeStringKeyword_3_0()); }
			'String'
			{ after(grammarAccess.getBasicTypeAccess().getTypeStringKeyword_3_0()); }
		)
		{ after(grammarAccess.getBasicTypeAccess().getTypeStringKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getTypeConstraintKeyword_4_0()); }
		(
			{ before(grammarAccess.getBasicTypeAccess().getTypeConstraintKeyword_4_0()); }
			'Constraint'
			{ after(grammarAccess.getBasicTypeAccess().getTypeConstraintKeyword_4_0()); }
		)
		{ after(grammarAccess.getBasicTypeAccess().getTypeConstraintKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__TypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getTypeAnyKeyword_5_0()); }
		(
			{ before(grammarAccess.getBasicTypeAccess().getTypeAnyKeyword_5_0()); }
			'Any'
			{ after(grammarAccess.getBasicTypeAccess().getTypeAnyKeyword_5_0()); }
		)
		{ after(grammarAccess.getBasicTypeAccess().getTypeAnyKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeBasicTypeParserRuleCall_0_0()); }
		ruleBasicType
		{ after(grammarAccess.getTypeAccess().getTypeBasicTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getIdQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getTypeAccess().getIdQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DerivedAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getDerivedDerivedTypeParserRuleCall_2_0()); }
		ruleDerivedType
		{ after(grammarAccess.getTypeAccess().getDerivedDerivedTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumValue__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumValueAccess().getValNUMBERTerminalRuleCall_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getNumValueAccess().getValNUMBERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__QNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getQNameIdentifierParserRuleCall_0_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getQualifiedNameAccess().getQNameIdentifierParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__QNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getQNameColonColonKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getQualifiedNameAccess().getQNameColonColonKeyword_0_1_0()); }
			'::'
			{ after(grammarAccess.getQualifiedNameAccess().getQNameColonColonKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getQualifiedNameAccess().getQNameColonColonKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__QNameAssignment_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getQNameIdentifierParserRuleCall_0_2_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getQualifiedNameAccess().getQNameIdentifierParserRuleCall_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__QNameAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getQNameColonColonKeyword_0_2_1_0()); }
		(
			{ before(grammarAccess.getQualifiedNameAccess().getQNameColonColonKeyword_0_2_1_0()); }
			'::'
			{ after(grammarAccess.getQualifiedNameAccess().getQNameColonColonKeyword_0_2_1_0()); }
		)
		{ after(grammarAccess.getQualifiedNameAccess().getQNameColonColonKeyword_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__QNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getQNameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getQualifiedNameAccess().getQNameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessName__ANameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessNameAccess().getANameFullStopKeyword_0_0()); }
		(
			{ before(grammarAccess.getAccessNameAccess().getANameFullStopKeyword_0_0()); }
			'.'
			{ after(grammarAccess.getAccessNameAccess().getANameFullStopKeyword_0_0()); }
		)
		{ after(grammarAccess.getAccessNameAccess().getANameFullStopKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessName__ANameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessNameAccess().getANameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getAccessNameAccess().getANameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNValueNumValueParserRuleCall_0_0()); }
		ruleNumValue
		{ after(grammarAccess.getValueAccess().getNValueNumValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__SValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getSValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getSValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__QValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getQValueQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getValueAccess().getQValueQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__BValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getBValueAlternatives_3_0()); }
		(rule__Value__BValueAlternatives_3_0)
		{ after(grammarAccess.getValueAccess().getBValueAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__SelfAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getSelfSelfKeyword_4_0()); }
		(
			{ before(grammarAccess.getValueAccess().getSelfSelfKeyword_4_0()); }
			'self'
			{ after(grammarAccess.getValueAccess().getSelfSelfKeyword_4_0()); }
		)
		{ after(grammarAccess.getValueAccess().getSelfSelfKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NullValueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNullValueNullKeyword_5_0()); }
		(
			{ before(grammarAccess.getValueAccess().getNullValueNullKeyword_5_0()); }
			'null'
			{ after(grammarAccess.getValueAccess().getNullValueNullKeyword_5_0()); }
		)
		{ after(grammarAccess.getValueAccess().getNullValueNullKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__TValueAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getTValueTypeParserRuleCall_6_0()); }
		ruleType
		{ after(grammarAccess.getValueAccess().getTValueTypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__VersionAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getVersionVERSIONTerminalRuleCall_7_0()); }
		RULE_VERSION
		{ after(grammarAccess.getValueAccess().getVersionVERSIONTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedType__OpAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivedTypeAccess().getOpSetOfKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getDerivedTypeAccess().getOpSetOfKeyword_0_0_0()); }
			'setOf'
			{ after(grammarAccess.getDerivedTypeAccess().getOpSetOfKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getDerivedTypeAccess().getOpSetOfKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedType__OpAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivedTypeAccess().getOpSequenceOfKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getDerivedTypeAccess().getOpSequenceOfKeyword_0_1_0()); }
			'sequenceOf'
			{ after(grammarAccess.getDerivedTypeAccess().getOpSequenceOfKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getDerivedTypeAccess().getOpSequenceOfKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedType__OpAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivedTypeAccess().getOpRefToKeyword_0_2_0()); }
		(
			{ before(grammarAccess.getDerivedTypeAccess().getOpRefToKeyword_0_2_0()); }
			'refTo'
			{ after(grammarAccess.getDerivedTypeAccess().getOpRefToKeyword_0_2_0()); }
		)
		{ after(grammarAccess.getDerivedTypeAccess().getOpRefToKeyword_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedType__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivedTypeAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getDerivedTypeAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__SnameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotateToAccess().getSnameAlternatives_0_0()); }
		(rule__AnnotateTo__SnameAlternatives_0_0)
		{ after(grammarAccess.getAnnotateToAccess().getSnameAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__AnnotationTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotateToAccess().getAnnotationTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getAnnotateToAccess().getAnnotationTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__AnnotationDeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotateToAccess().getAnnotationDeclVariableDeclarationPartParserRuleCall_2_0()); }
		ruleVariableDeclarationPart
		{ after(grammarAccess.getAnnotateToAccess().getAnnotationDeclVariableDeclarationPartParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__NamesAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotateToAccess().getNamesFullStopKeyword_4_0_0()); }
		(
			{ before(grammarAccess.getAnnotateToAccess().getNamesFullStopKeyword_4_0_0()); }
			'.'
			{ after(grammarAccess.getAnnotateToAccess().getNamesFullStopKeyword_4_0_0()); }
		)
		{ after(grammarAccess.getAnnotateToAccess().getNamesFullStopKeyword_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__NamesAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotateToAccess().getNamesIdentifierParserRuleCall_4_1_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getAnnotateToAccess().getNamesIdentifierParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotateTo__NamesAssignment_4_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotateToAccess().getNamesIdentifierParserRuleCall_4_1_1_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getAnnotateToAccess().getNamesIdentifierParserRuleCall_4_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__NamesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFreezeAccess().getNamesFreezeStatementParserRuleCall_2_0()); }
		ruleFreezeStatement
		{ after(grammarAccess.getFreezeAccess().getNamesFreezeStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__IdAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFreezeAccess().getIdIdentifierParserRuleCall_4_2_0()); }
		ruleIdentifier
		{ after(grammarAccess.getFreezeAccess().getIdIdentifierParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Freeze__ExAssignment_4_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFreezeAccess().getExLogicalExpressionParserRuleCall_4_4_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getFreezeAccess().getExLogicalExpressionParserRuleCall_4_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezeStatement__DotAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFreezeStatementAccess().getDotFullStopKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getFreezeStatementAccess().getDotFullStopKeyword_0_0_0()); }
			'.'
			{ after(grammarAccess.getFreezeStatementAccess().getDotFullStopKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getFreezeStatementAccess().getDotFullStopKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezeStatement__NameAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFreezeStatementAccess().getNameQualifiedNameParserRuleCall_0_1_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getFreezeStatementAccess().getNameQualifiedNameParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezeStatement__AccessAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFreezeStatementAccess().getAccessAccessNameParserRuleCall_0_1_1_0()); }
		ruleAccessName
		{ after(grammarAccess.getFreezeStatementAccess().getAccessAccessNameParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__NestedAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvalAccess().getNestedEvalParserRuleCall_3_0()); }
		ruleEval
		{ after(grammarAccess.getEvalAccess().getNestedEvalParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__StatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvalAccess().getStatementsExpressionStatementParserRuleCall_4_0()); }
		ruleExpressionStatement
		{ after(grammarAccess.getEvalAccess().getStatementsExpressionStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getInterfaceDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__ExportsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getExportsExportParserRuleCall_3_0()); }
		ruleExport
		{ after(grammarAccess.getInterfaceDeclarationAccess().getExportsExportParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__NamesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportAccess().getNamesQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getExportAccess().getNamesQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__NamesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportAccess().getNamesQualifiedNameParserRuleCall_2_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getExportAccess().getNamesQualifiedNameParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__InsertAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStmtAccess().getInsertInsertKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getImportStmtAccess().getInsertInsertKeyword_0_1_0()); }
			'insert'
			{ after(grammarAccess.getImportStmtAccess().getInsertInsertKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getImportStmtAccess().getInsertInsertKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStmtAccess().getNameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getImportStmtAccess().getNameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__InterfaceAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStmtAccess().getInterfaceIdentifierParserRuleCall_2_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getImportStmtAccess().getInterfaceIdentifierParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__WildcardAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStmtAccess().getWildcardAsteriskKeyword_3_0()); }
		(
			{ before(grammarAccess.getImportStmtAccess().getWildcardAsteriskKeyword_3_0()); }
			'*'
			{ after(grammarAccess.getImportStmtAccess().getWildcardAsteriskKeyword_3_0()); }
		)
		{ after(grammarAccess.getImportStmtAccess().getWildcardAsteriskKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStmt__RestrictionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStmtAccess().getRestrictionExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getImportStmtAccess().getRestrictionExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictStmt__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConflictStmtAccess().getNameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getConflictStmtAccess().getNameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictStmt__RestrictionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConflictStmtAccess().getRestrictionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getConflictStmtAccess().getRestrictionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionStmt__VersionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVersionStmtAccess().getVersionVERSIONTerminalRuleCall_1_0()); }
		RULE_VERSION
		{ after(grammarAccess.getVersionStmtAccess().getVersionVERSIONTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__AnnotationsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpDefStatementAccess().getAnnotationsAnnotationDeclarationsParserRuleCall_0_0()); }
		ruleAnnotationDeclarations
		{ after(grammarAccess.getOpDefStatementAccess().getAnnotationsAnnotationDeclarationsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__StaticAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpDefStatementAccess().getStaticStaticKeyword_2_0()); }
		(
			{ before(grammarAccess.getOpDefStatementAccess().getStaticStaticKeyword_2_0()); }
			'static'
			{ after(grammarAccess.getOpDefStatementAccess().getStaticStaticKeyword_2_0()); }
		)
		{ after(grammarAccess.getOpDefStatementAccess().getStaticStaticKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__ResultAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpDefStatementAccess().getResultTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getOpDefStatementAccess().getResultTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__IdAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpDefStatementAccess().getIdIdentifierParserRuleCall_4_0()); }
		ruleIdentifier
		{ after(grammarAccess.getOpDefStatementAccess().getIdIdentifierParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__ParamAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpDefStatementAccess().getParamOpDefParameterListParserRuleCall_6_0()); }
		ruleOpDefParameterList
		{ after(grammarAccess.getOpDefStatementAccess().getParamOpDefParameterListParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__ImplAssignment_9_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpDefStatementAccess().getImplExpressionParserRuleCall_9_0_0_0()); }
		ruleExpression
		{ after(grammarAccess.getOpDefStatementAccess().getImplExpressionParserRuleCall_9_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefStatement__BlockAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpDefStatementAccess().getBlockBlockExpressionParserRuleCall_9_1_0()); }
		ruleBlockExpression
		{ after(grammarAccess.getOpDefStatementAccess().getBlockBlockExpressionParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationDeclarations__IdAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationDeclarationsAccess().getIdIdentifierParserRuleCall_1_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getAnnotationDeclarationsAccess().getIdIdentifierParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameterList__ListAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpDefParameterListAccess().getListOpDefParameterParserRuleCall_1_0_0()); }
		ruleOpDefParameter
		{ after(grammarAccess.getOpDefParameterListAccess().getListOpDefParameterParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameterList__ListAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpDefParameterListAccess().getListOpDefParameterParserRuleCall_1_1_1_0()); }
		ruleOpDefParameter
		{ after(grammarAccess.getOpDefParameterListAccess().getListOpDefParameterParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameter__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpDefParameterAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getOpDefParameterAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameter__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpDefParameterAccess().getIdIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getOpDefParameterAccess().getIdIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpDefParameter__ValAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpDefParameterAccess().getValExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getOpDefParameterAccess().getValExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__ExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionStatementAccess().getExprExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionStatementAccess().getExprExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__LetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getLetLetExpressionParserRuleCall_0_0()); }
		ruleLetExpression
		{ after(grammarAccess.getExpressionAccess().getLetLetExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExprImplicationExpressionParserRuleCall_1_0()); }
		ruleImplicationExpression
		{ after(grammarAccess.getExpressionAccess().getExprImplicationExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ContainerAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getContainerContainerInitializerParserRuleCall_2_0()); }
		ruleContainerInitializer
		{ after(grammarAccess.getExpressionAccess().getContainerContainerInitializerParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpressionAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getLetExpressionAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpressionAccess().getNameIdentifierParserRuleCall_2_0()); }
		ruleIdentifier
		{ after(grammarAccess.getLetExpressionAccess().getNameIdentifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__ValueExprAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpressionAccess().getValueExprExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getLetExpressionAccess().getValueExprExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__SubExprAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpressionAccess().getSubExprOptBlockExpressionParserRuleCall_6_0()); }
		ruleOptBlockExpression
		{ after(grammarAccess.getLetExpressionAccess().getSubExprOptBlockExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptBlockExpression__ExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptBlockExpressionAccess().getExprExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getOptBlockExpressionAccess().getExprExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptBlockExpression__BlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptBlockExpressionAccess().getBlockBlockExpressionParserRuleCall_1_0()); }
		ruleBlockExpression
		{ after(grammarAccess.getOptBlockExpressionAccess().getBlockBlockExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__ExprsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockExpressionAccess().getExprsExpressionStatementParserRuleCall_1_0()); }
		ruleExpressionStatement
		{ after(grammarAccess.getBlockExpressionAccess().getExprsExpressionStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentExpressionAccess().getLeftLogicalExpressionParserRuleCall_0_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getAssignmentExpressionAccess().getLeftLogicalExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentExpressionAccess().getRightAssignmentExpressionPartParserRuleCall_1_0()); }
		ruleAssignmentExpressionPart
		{ after(grammarAccess.getAssignmentExpressionAccess().getRightAssignmentExpressionPartParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpressionPart__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentExpressionPartAccess().getOpAssignmentOperatorParserRuleCall_0_0()); }
		ruleAssignmentOperator
		{ after(grammarAccess.getAssignmentExpressionPartAccess().getOpAssignmentOperatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpressionPart__ExAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentExpressionPartAccess().getExLogicalExpressionParserRuleCall_1_0_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getAssignmentExpressionPartAccess().getExLogicalExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpressionPart__ContainerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentExpressionPartAccess().getContainerContainerInitializerParserRuleCall_1_1_0()); }
		ruleContainerInitializer
		{ after(grammarAccess.getAssignmentExpressionPartAccess().getContainerContainerInitializerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplicationExpressionAccess().getLeftAssignmentExpressionParserRuleCall_0_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getImplicationExpressionAccess().getLeftAssignmentExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationExpression__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplicationExpressionAccess().getRightImplicationExpressionPartParserRuleCall_1_0()); }
		ruleImplicationExpressionPart
		{ after(grammarAccess.getImplicationExpressionAccess().getRightImplicationExpressionPartParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationExpressionPart__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplicationExpressionPartAccess().getOpImplicationOperatorParserRuleCall_0_0()); }
		ruleImplicationOperator
		{ after(grammarAccess.getImplicationExpressionPartAccess().getOpImplicationOperatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationExpressionPart__ExAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplicationExpressionPartAccess().getExAssignmentExpressionParserRuleCall_1_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getImplicationExpressionPartAccess().getExAssignmentExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getLeftEqualityExpressionParserRuleCall_0_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getLogicalExpressionAccess().getLeftEqualityExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getRightLogicalExpressionPartParserRuleCall_1_0()); }
		ruleLogicalExpressionPart
		{ after(grammarAccess.getLogicalExpressionAccess().getRightLogicalExpressionPartParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpressionPart__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionPartAccess().getOpLogicalOperatorParserRuleCall_0_0()); }
		ruleLogicalOperator
		{ after(grammarAccess.getLogicalExpressionPartAccess().getOpLogicalOperatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpressionPart__ExAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionPartAccess().getExEqualityExpressionParserRuleCall_1_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getLogicalExpressionPartAccess().getExEqualityExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getLeftRelationalExpressionParserRuleCall_0_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getLeftRelationalExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getRightEqualityExpressionPartParserRuleCall_1_0()); }
		ruleEqualityExpressionPart
		{ after(grammarAccess.getEqualityExpressionAccess().getRightEqualityExpressionPartParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionPart__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionPartAccess().getOpEqualityOperatorParserRuleCall_0_0()); }
		ruleEqualityOperator
		{ after(grammarAccess.getEqualityExpressionPartAccess().getOpEqualityOperatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionPart__ExAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionPartAccess().getExRelationalExpressionParserRuleCall_1_0_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getEqualityExpressionPartAccess().getExRelationalExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpressionPart__ContainerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionPartAccess().getContainerContainerInitializerParserRuleCall_1_1_0()); }
		ruleContainerInitializer
		{ after(grammarAccess.getEqualityExpressionPartAccess().getContainerContainerInitializerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getLeftAdditiveExpressionParserRuleCall_0_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getLeftAdditiveExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getRightRelationalExpressionPartParserRuleCall_1_0_0()); }
		ruleRelationalExpressionPart
		{ after(grammarAccess.getRelationalExpressionAccess().getRightRelationalExpressionPartParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Right2Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getRight2RelationalExpressionPartParserRuleCall_1_1_0()); }
		ruleRelationalExpressionPart
		{ after(grammarAccess.getRelationalExpressionAccess().getRight2RelationalExpressionPartParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpressionPart__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionPartAccess().getOpRelationalOperatorParserRuleCall_0_0()); }
		ruleRelationalOperator
		{ after(grammarAccess.getRelationalExpressionPartAccess().getOpRelationalOperatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpressionPart__ExAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionPartAccess().getExAdditiveExpressionParserRuleCall_1_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getRelationalExpressionPartAccess().getExAdditiveExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getLeftMultiplicativeExpressionParserRuleCall_0_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getLeftMultiplicativeExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getRightAdditiveExpressionPartParserRuleCall_1_0()); }
		ruleAdditiveExpressionPart
		{ after(grammarAccess.getAdditiveExpressionAccess().getRightAdditiveExpressionPartParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionPart__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionPartAccess().getOpAdditiveOperatorParserRuleCall_0_0()); }
		ruleAdditiveOperator
		{ after(grammarAccess.getAdditiveExpressionPartAccess().getOpAdditiveOperatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionPart__ExAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionPartAccess().getExMultiplicativeExpressionParserRuleCall_1_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionPartAccess().getExMultiplicativeExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getLeftUnaryExpressionParserRuleCall_0_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getLeftUnaryExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightMultiplicativeExpressionPartParserRuleCall_1_0()); }
		ruleMultiplicativeExpressionPart
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightMultiplicativeExpressionPartParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionPart__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionPartAccess().getOpMultiplicativeOperatorParserRuleCall_0_0()); }
		ruleMultiplicativeOperator
		{ after(grammarAccess.getMultiplicativeExpressionPartAccess().getOpMultiplicativeOperatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionPart__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionPartAccess().getExprUnaryExpressionParserRuleCall_1_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getMultiplicativeExpressionPartAccess().getExprUnaryExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
		ruleUnaryOperator
		{ after(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getExprPostfixExpressionParserRuleCall_1_0()); }
		rulePostfixExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getExprPostfixExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__CallAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getCallFeatureCallParserRuleCall_0_0_0()); }
		ruleFeatureCall
		{ after(grammarAccess.getPostfixExpressionAccess().getCallFeatureCallParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__FCallsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getFCallsCallParserRuleCall_0_1_0()); }
		ruleCall
		{ after(grammarAccess.getPostfixExpressionAccess().getFCallsCallParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__AccessAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getAccessExpressionAccessParserRuleCall_0_2_0()); }
		ruleExpressionAccess
		{ after(grammarAccess.getPostfixExpressionAccess().getAccessExpressionAccessParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getLeftPrimaryExpressionParserRuleCall_1_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getPostfixExpressionAccess().getLeftPrimaryExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__CallAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallAccess().getCallFeatureCallParserRuleCall_0_1_0()); }
		ruleFeatureCall
		{ after(grammarAccess.getCallAccess().getCallFeatureCallParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__ContainerOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallAccess().getContainerOpContainerOpParserRuleCall_1_1_0()); }
		ruleContainerOp
		{ after(grammarAccess.getCallAccess().getContainerOpContainerOpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__ArrayExAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallAccess().getArrayExExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCallAccess().getArrayExExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameIdentifierParserRuleCall_0_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getFeatureCallAccess().getNameIdentifierParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameRelationalOperatorParserRuleCall_0_1_0()); }
		ruleRelationalOperator
		{ after(grammarAccess.getFeatureCallAccess().getNameRelationalOperatorParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__NameAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameAdditiveOperatorParserRuleCall_0_2_0()); }
		ruleAdditiveOperator
		{ after(grammarAccess.getFeatureCallAccess().getNameAdditiveOperatorParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__NameAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameMultiplicativeOperatorParserRuleCall_0_3_0()); }
		ruleMultiplicativeOperator
		{ after(grammarAccess.getFeatureCallAccess().getNameMultiplicativeOperatorParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__NameAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameEqualityOperatorParserRuleCall_0_4_0()); }
		ruleEqualityOperator
		{ after(grammarAccess.getFeatureCallAccess().getNameEqualityOperatorParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__NameAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameImplicationOperatorParserRuleCall_0_5_0()); }
		ruleImplicationOperator
		{ after(grammarAccess.getFeatureCallAccess().getNameImplicationOperatorParserRuleCall_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__NameAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameLogicalOperatorParserRuleCall_0_6_0()); }
		ruleLogicalOperator
		{ after(grammarAccess.getFeatureCallAccess().getNameLogicalOperatorParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__NameAssignment_0_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureCallAccess().getNameNotKeyword_0_7_0()); }
		(
			{ before(grammarAccess.getFeatureCallAccess().getNameNotKeyword_0_7_0()); }
			'not'
			{ after(grammarAccess.getFeatureCallAccess().getNameNotKeyword_0_7_0()); }
		)
		{ after(grammarAccess.getFeatureCallAccess().getNameNotKeyword_0_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerOp__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerOpAccess().getNameIdentifierParserRuleCall_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getContainerOpAccess().getNameIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerOp__DeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerOpAccess().getDeclDeclaratorParserRuleCall_2_0()); }
		ruleDeclarator
		{ after(grammarAccess.getContainerOpAccess().getDeclDeclaratorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__DeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getDeclDeclarationParserRuleCall_0_0()); }
		ruleDeclaration
		{ after(grammarAccess.getDeclaratorAccess().getDeclDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__DeclAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getDeclDeclarationParserRuleCall_1_1_0()); }
		ruleDeclaration
		{ after(grammarAccess.getDeclaratorAccess().getDeclDeclarationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getIdIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getDeclarationAccess().getIdIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__IdAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getIdIdentifierParserRuleCall_2_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getDeclarationAccess().getIdIdentifierParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__InitAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getInitExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getDeclarationAccess().getInitExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgumentList__ArgsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActualArgumentListAccess().getArgsActualArgumentParserRuleCall_0_0()); }
		ruleActualArgument
		{ after(grammarAccess.getActualArgumentListAccess().getArgsActualArgumentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgumentList__ArgsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActualArgumentListAccess().getArgsActualArgumentParserRuleCall_1_1_0()); }
		ruleActualArgument
		{ after(grammarAccess.getActualArgumentListAccess().getArgsActualArgumentParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgument__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActualArgumentAccess().getNameIdentifierParserRuleCall_0_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getActualArgumentAccess().getNameIdentifierParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualArgument__ArgAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActualArgumentAccess().getArgExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getActualArgumentAccess().getArgExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAccess__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccessAccess().getNameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getExpressionAccessAccess().getNameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAccess__CallsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccessAccess().getCallsCallParserRuleCall_2_0()); }
		ruleCall
		{ after(grammarAccess.getExpressionAccessAccess().getCallsCallParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAccess__AccessAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccessAccess().getAccessExpressionAccessParserRuleCall_3_0()); }
		ruleExpressionAccess
		{ after(grammarAccess.getExpressionAccessAccess().getAccessExpressionAccessParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__LitAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getLitLiteralParserRuleCall_0_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getPrimaryExpressionAccess().getLitLiteralParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getExExpressionParserRuleCall_0_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getExExpressionParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__IfExAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getIfExIfExpressionParserRuleCall_0_2_0()); }
		ruleIfExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getIfExIfExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__RefExAssignment_0_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getRefExExpressionParserRuleCall_0_3_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getRefExExpressionParserRuleCall_0_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__CallsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getCallsCallParserRuleCall_1_0()); }
		ruleCall
		{ after(grammarAccess.getPrimaryExpressionAccess().getCallsCallParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__AccessAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAccessExpressionAccessParserRuleCall_2_0()); }
		ruleExpressionAccess
		{ after(grammarAccess.getPrimaryExpressionAccess().getAccessExpressionAccessParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerInitializer__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerInitializerAccess().getTypeQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getContainerInitializerAccess().getTypeQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerInitializer__InitAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerInitializerAccess().getInitExpressionListOrRangeParserRuleCall_3_0()); }
		ruleExpressionListOrRange
		{ after(grammarAccess.getContainerInitializerAccess().getInitExpressionListOrRangeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListOrRange__ListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListOrRangeAccess().getListExpressionListEntryParserRuleCall_0_0()); }
		ruleExpressionListEntry
		{ after(grammarAccess.getExpressionListOrRangeAccess().getListExpressionListEntryParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListOrRange__ListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListOrRangeAccess().getListExpressionListEntryParserRuleCall_1_1_0()); }
		ruleExpressionListEntry
		{ after(grammarAccess.getExpressionListOrRangeAccess().getListExpressionListEntryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListEntryAccess().getNameIdentifierParserRuleCall_0_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getExpressionListEntryAccess().getNameIdentifierParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__AttribAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListEntryAccess().getAttribIdentifierParserRuleCall_0_1_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getExpressionListEntryAccess().getAttribIdentifierParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__ValueAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListEntryAccess().getValueImplicationExpressionParserRuleCall_1_0_0()); }
		ruleImplicationExpression
		{ after(grammarAccess.getExpressionListEntryAccess().getValueImplicationExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionListEntry__ContainerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListEntryAccess().getContainerContainerInitializerParserRuleCall_1_1_0()); }
		ruleContainerInitializer
		{ after(grammarAccess.getExpressionListEntryAccess().getContainerContainerInitializerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getValValueParserRuleCall_0()); }
		ruleValue
		{ after(grammarAccess.getLiteralAccess().getValValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__IfExAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getIfExExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIfExpressionAccess().getIfExExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ThenExAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getThenExOptBlockExpressionParserRuleCall_3_0()); }
		ruleOptBlockExpression
		{ after(grammarAccess.getIfExpressionAccess().getThenExOptBlockExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseExAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElseExOptBlockExpressionParserRuleCall_5_0()); }
		ruleOptBlockExpression
		{ after(grammarAccess.getIfExpressionAccess().getElseExOptBlockExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_VERSION : 'v' ('0'..'9')+ ('.' ('0'..'9')+)*;

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_NUMBER : '-'? (('0'..'9')+ ('.' ('0'..'9')* RULE_EXPONENT?)?|'.' ('0'..'9')+ RULE_EXPONENT?|('0'..'9')+ RULE_EXPONENT);

RULE_EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
