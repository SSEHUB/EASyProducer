from datatypes.MyConnMachineIn import MyConnMachineIn

from datetime import datetime

class MyConnMachineInImpl(MyConnMachineIn):
    """Implementation of the application data type MyConnMachineIn. 
       Generated by: EASy-Producer."""
 
    dataField: str
    axis: int
    cmdField: str
    
    def getDataField(self) -> str:
        """Returns the value of {@code dataField}.
        
           Returns:
             - the value of dataField"""
        return self.dataField
    
    def getAxis(self) -> int:
        """Returns the value of {@code axis}.
        
           Returns:
             - the value of axis"""
        return self.axis
    
    def getCmdField(self) -> str:
        """Returns the value of {@code cmdField}.
        
           Returns:
             - the value of cmdField"""
        return self.cmdField
    
    
    def setDataField(self, v: str):
        """Changes the value of {@code dataField}.
        
           Parameters:
             - v -- the new value of dataField"""
        self.dataField = v
    
    def setAxis(self, v):
        """Changes the value of {@code axis}.
        
           Parameters:
             - v -- the new value of axis, may be of type int or the corresponding numpy type"""
        if ("numpy" in str(type(v))):
           self.axis = v.item()
        else:
           self.axis = v
    
    def setCmdField(self, v: str):
        """Changes the value of {@code cmdField}.
        
           Parameters:
             - v -- the new value of cmdField"""
        self.cmdField = v
    
