
from datetime import datetime

class TestType:
    """Implementation of the application data type TestType. 
       Generated by: EASy-Producer."""
 
    Dtype: str
    _kip: str
    values: list
    
    def getDtype(self) -> str:
        """Returns the value of {@code Dtype}.
        
           Returns:
             - the value of $type"""
        return self.Dtype
    
    def get_kip(self) -> str:
        """Returns the value of {@code _kip}.
        
           Returns:
             - the value of _kip"""
        return self._kip
    
    def getValues(self) -> list:
        """Returns the value of {@code values}.
        
           Returns:
             - the value of values"""
        return self.values
    
    
    def setDtype(self, v: str):
        """Changes the value of {@code Dtype}.
        
           Parameters:
             - v -- the new value of $type"""
        self.Dtype = v
    
    def set_kip(self, v: str):
        """Changes the value of {@code _kip}.
        
           Parameters:
             - v -- the new value of _kip"""
        self._kip = v
    
    def setValues(self, v: list):
        """Changes the value of {@code values}.
        
           Parameters:
             - v -- the new value of values"""
        if ("numpy" in str(type(v))):
           self.values = v.item()
        else:
           self.values = v
    
