
from datetime import datetime

class MyConnMachineOut:
    """Implementation of the application data type MyConnMachineOut. 
       Generated by: EASy-Producer."""
 
    cmdField: str
    dataField: str
    dataValue: int
    
    def getCmdField(self) -> str:
        """Returns the value of {@code cmdField}.
        
           Returns:
             - the value of cmdField"""
        return self.cmdField
    
    def getDataField(self) -> str:
        """Returns the value of {@code dataField}.
        
           Returns:
             - the value of dataField"""
        return self.dataField
    
    def getDataValue(self) -> int:
        """Returns the value of {@code dataValue}.
        
           Returns:
             - the value of dataValue"""
        return self.dataValue
    
    
    def setCmdField(self, v: str):
        """Changes the value of {@code cmdField}.
        
           Parameters:
             - v -- the new value of cmdField"""
        self.cmdField = v
    
    def setDataField(self, v: str):
        """Changes the value of {@code dataField}.
        
           Parameters:
             - v -- the new value of dataField"""
        self.dataField = v
    
    def setDataValue(self, v):
        """Changes the value of {@code dataValue}.
        
           Parameters:
             - v -- the new value of dataValue, may be of type int or the corresponding numpy type"""
        if ("numpy" in str(type(v))):
           self.dataValue = v.item()
        else:
           self.dataValue = v
    
