from json import JSONEncoder
import json
from iip import Serializer
import MyConnMachineOut

class MyConnMachineOutSerializer(Serializer):
    """JSON transport serializer for MyConnMachineOut.
       Generated by: EASy-Producer."""
    
    class MyConnMachineOutEncoder(JSONEncoder):
        """JSON encoder class for MyConnMachineOut.
        Generated by: EASy-Producer."""
    
        def default(self, o):
            """Provides access to the attributes in o.
            
            Parameters:
              - o -- the object to serialize
            Returns:
              dict
                the attributes
            """
            return o.__dict__
        
    
    def readFrom(data: bytes) -> MyConnMachineOut:
        """Turns bytes into an object.
        
        Parameters:
          - data -- the data bytes
        Returns:
          object
            the deserialized object
        """
    
        result = MyConnMachineOut()
        result.__dict__ = json.loads(data)
        return result

    def writeTo(source: MyConnMachineOut) -> bytes:
        """Turns an object into bytes.
        
        Parameters:
          - source -- the object
        Returns:
          bytes
            the serialized data bytes
        """
        
        return MyConnMachineOutEncoder().encode(employee).encode("UTF-8")

