package iip.nodes;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

import de.iip_ecosphere.platform.connectors.rest.Convertable;

import iip.datatypes.RestPhoenixEEMResponseInformationRootItem;
import iip.datatypes.RestPhoenixEEMResponseInformationRootItemImpl;

/**
 * Rest type for the application data type RestPhoenixEEMResponseInformationRootItem.
 * Generated by: EASy-Producer.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class RestPhoenixEEMResponseInformationRootItemRestType implements Convertable {

    @JsonProperty("href")
    private String href;
    @JsonProperty("description")
    private String description;

    /**
     * Default constructor. Fields are pre-allocated with default Java values.
     */
    public RestPhoenixEEMResponseInformationRootItemRestType() {
    }

    /**
     * Returns the value of href.
     *
     * @return the value of href
     */
    public String getHref() {
        return href;
    }

    /**
     * Changes the value of href.
     *
     * @param value the new value
     */
    public void setHref(String value) {
        this.href = value;
    }

    /**
     * Returns the value of description.
     *
     * @return the value of description
     */
    public String getDescription() {
        return description;
    }

    /**
     * Changes the value of description.
     *
     * @param value the new value
     */
    public void setDescription(String value) {
        this.description = value;
    }

    @Override
    public Object fromREST(Object data) {
        Object result = data;
        if (data instanceof RestPhoenixEEMResponseInformationRootItemRestType) {
            result = fromRESTImpl((RestPhoenixEEMResponseInformationRootItemRestType) data);
        } else if (data instanceof RestPhoenixEEMResponseInformationRootItemRestType[]) {
            result = fromRESTImpl((RestPhoenixEEMResponseInformationRootItemRestType[]) data);
        }
        return result;
    }

    /**
     * Implements the conversion from the corresponding REST type.
     *
     * @param orig the original value
     * @return the converted instance
     */
    public static RestPhoenixEEMResponseInformationRootItem fromRESTImpl(
        RestPhoenixEEMResponseInformationRootItemRestType orig) {
        RestPhoenixEEMResponseInformationRootItem result = new RestPhoenixEEMResponseInformationRootItemImpl();
        result.setHref(orig.getHref());
        result.setDescription(orig.getDescription());
        return result;
    }

    /**
     * Implements the conversion from the corresponding REST type array.
     *
     * @param orig the original value
     * @return the converted instance
     */
    public static RestPhoenixEEMResponseInformationRootItem[] fromRESTImpl(
        RestPhoenixEEMResponseInformationRootItemRestType[] orig) {
        RestPhoenixEEMResponseInformationRootItem[] result = null;
        if (orig != null) {
            result = new RestPhoenixEEMResponseInformationRootItem[orig.length];
            for (int i = 0; i < orig.length; i++) {
                result[i] = fromRESTImpl(orig[i]);
            }
        }
        return result;
    }

    @Override
    public Object toREST(Object data) {
        Object result = data;
        if (data instanceof RestPhoenixEEMResponseInformationRootItem) {
            result = toRESTImpl((RestPhoenixEEMResponseInformationRootItem) data);
        } else if (data instanceof RestPhoenixEEMResponseInformationRootItem[]) {
            result = toRESTImpl((RestPhoenixEEMResponseInformationRootItem[]) data);
        }
        return result;
    }

    /**
     * Implements the conversion from the transport type to REST
     *
     * @param orig the original value
     * @return the converted instance
     */
    public static RestPhoenixEEMResponseInformationRootItemRestType[] toRESTImpl(
        RestPhoenixEEMResponseInformationRootItem[] orig) {
        RestPhoenixEEMResponseInformationRootItemRestType[] result = null;
        if (orig != null) {
            result = new RestPhoenixEEMResponseInformationRootItemRestType[orig.length];
            for (int i = 0; i < orig.length; i++) {
                result[i] = toRESTImpl(orig[i]);
            }
        }
        return result;
    }

    /**
     * Implements the conversion from the transport type to REST
     *
     * @param orig the original value
     * @return the converted instance
     */
    public static RestPhoenixEEMResponseInformationRootItemRestType toRESTImpl(RestPhoenixEEMResponseInformationRootItem
        orig) {
        RestPhoenixEEMResponseInformationRootItemRestType result = new RestPhoenixEEMResponseInformationRootItemRestType(
            );
        result.setHref(orig.getHref());
        result.setDescription(orig.getDescription());
        return result;
    }

}
