package iip.datatypes;

import java.math.BigInteger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import de.iip_ecosphere.platform.support.iip_aas.ConfiguredName;
import iip.datatypes.ModbusSiemensRwSentron;

/**
 * Implementation of the application data type ModbusSiemensRwSentron.
 * Generated by: EASy-Producer.
 */
@ConfiguredName("ModbusSiemensRwSentron")
public class ModbusSiemensRwSentronImpl implements ModbusSiemensRwSentron {
 
    @JsonProperty("DisplayContrast")
    @ConfiguredName("DisplayContrast")
    private BigInteger DisplayContrast;
    
    @JsonProperty("DisplayBrightness")
    @ConfiguredName("DisplayBrightness")
    private BigInteger DisplayBrightness;
    
    @JsonProperty("BrightnessDuration")
    @ConfiguredName("BrightnessDuration")
    private BigInteger BrightnessDuration;

    /**
     * Default constructor. Fields are pre-allocated with default Java values.
     */
    public ModbusSiemensRwSentronImpl() {
    }
    
    /**
     * Copy constructor.
     * 
     * @param from the instance to copy the values from
     */
    public ModbusSiemensRwSentronImpl(ModbusSiemensRwSentron from) {
        this.DisplayContrast = from.getDisplayContrast();
        this.DisplayBrightness = from.getDisplayBrightness();
        this.BrightnessDuration = from.getBrightnessDuration();
    }

    @Override
    @JsonIgnore
    public BigInteger getDisplayContrast() {
        return DisplayContrast;
    }

    @Override
    @JsonIgnore
    public void setDisplayContrast(BigInteger value) {
        this.DisplayContrast = value;
    }

    @Override
    @JsonIgnore
    public BigInteger getDisplayBrightness() {
        return DisplayBrightness;
    }

    @Override
    @JsonIgnore
    public void setDisplayBrightness(BigInteger value) {
        this.DisplayBrightness = value;
    }
    
    @Override
    @JsonIgnore
    public BigInteger getBrightnessDuration() {
        return BrightnessDuration;
    }
    
    @Override
    @JsonIgnore
    public void setBrightnessDuration(BigInteger value) {
        this.BrightnessDuration = value;
    }

    @Override
    public int hashCode() {
        int hc = 0;
        hc += getDisplayContrast() != null ? getDisplayContrast().hashCode() : 0;
        hc += getDisplayBrightness() != null ? getDisplayBrightness().hashCode() : 0;
        hc += getBrightnessDuration() != null ? getBrightnessDuration().hashCode() : 0;
        return hc;
    }
    
    @Override
    public boolean equals(Object other) {
        boolean eq;
        if (other instanceof ModbusSiemensRwSentron) {
            ModbusSiemensRwSentron oth = (ModbusSiemensRwSentron) other;
            eq = true;
            eq &= getDisplayContrast() != null ? getDisplayContrast().equals(oth.getDisplayContrast()) : true;
            eq &= getDisplayBrightness() != null ? getDisplayBrightness().equals(oth.getDisplayBrightness()) : true;
            eq &= getBrightnessDuration() != null ? getBrightnessDuration().equals(oth.getBrightnessDuration()) : true;
        } else {
            eq = false;
        }
        return eq;
    }
    
    @Override
    public String toString() {
        return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(this, 
            de.iip_ecosphere.platform.services.environment.IipStringStyle.SHORT_STRING_STYLE);
    }

}
