package iip.serializers;

import java.io.IOException;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import de.iip_ecosphere.platform.support.json.JsonUtils;
import de.iip_ecosphere.platform.transport.serialization.Serializer;
import iip.datatypes.*;

/**
 * JSON transport serializer for MyConnPltfIn.
 * Generated by: EASy-Producer.
 */
public class MyConnPltfInImplSerializer implements Serializer<MyConnPltfInImpl> {

    private static final ObjectMapper MAPPER = new ObjectMapper();
    
    static {
        JsonUtils.handleIipDataClasses(MAPPER);
    }

    @Override             
    public MyConnPltfInImpl from(byte[] data) throws IOException {
        try {
            return MAPPER.readValue(data, MyConnPltfInImpl.class);
        } catch (JsonProcessingException e) {
            throw new IOException(e);
        }
    }

    @Override    
    public byte[] to(MyConnPltfInImpl source) throws IOException {
        try {
            return MAPPER.writeValueAsBytes(source);
        } catch (JsonProcessingException e) {
            throw new IOException(e);
        }
    }

    @Override
    public MyConnPltfInImpl clone(MyConnPltfInImpl origin) throws IOException {
        return new MyConnPltfInImpl(origin);
    }

    @Override
    public Class<MyConnPltfInImpl> getType() {
        return MyConnPltfInImpl.class;
    }

}

