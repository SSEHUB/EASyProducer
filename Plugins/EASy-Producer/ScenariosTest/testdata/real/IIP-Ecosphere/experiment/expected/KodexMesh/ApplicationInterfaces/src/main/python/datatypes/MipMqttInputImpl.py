from datatypes.MipMqttInput import MipMqttInput
from datetime import datetime
from decimal import Decimal

class MipMqttInputImpl(MipMqttInput):
    """Implementation of the application data type MipMqttInput. 
       Generated by: EASy-Producer."""
 
    #Mapped into properties without leading _ below resembling getter/setter
    
    _mipcontext: str = ""
    _mipdate: str = ""
    _mipto: str = ""
    _mipfrom: str = None
    _mipcommand: str = None
    _mipbitstream_ai_clock: str = None
    _mipbitstream_ai_data1: str = None
    _mipbitstream_ai_data2: str = None
    _mipreader: str = None
    
    def getMipcontext(self) -> str:
        """Returns the value of {@code mipcontext}.
        
           Returns:
             - the value of mipcontext"""
        return self._mipcontext
    
    def getMipdate(self) -> str:
        """Returns the value of {@code mipdate}.
        
           Returns:
             - the value of mipdate"""
        return self._mipdate
    
    def getMipto(self) -> str:
        """Returns the value of {@code mipto}.
        
           Returns:
             - the value of mipto"""
        return self._mipto
    
    def getMipfrom(self) -> str:
        """Returns the value of {@code mipfrom}.
        
           Returns:
             - the value of mipfrom"""
        return self._mipfrom
    
    def getMipcommand(self) -> str:
        """Returns the value of {@code mipcommand}.
        
           Returns:
             - the value of mipcommand"""
        return self._mipcommand
    
    def getMipbitstream_ai_clock(self) -> str:
        """Returns the value of {@code mipbitstream_ai_clock}.
        
           Returns:
             - the value of mipbitstream_ai_clock"""
        return self._mipbitstream_ai_clock
    
    def getMipbitstream_ai_data1(self) -> str:
        """Returns the value of {@code mipbitstream_ai_data1}.
        
           Returns:
             - the value of mipbitstream_ai_data1"""
        return self._mipbitstream_ai_data1
    
    def getMipbitstream_ai_data2(self) -> str:
        """Returns the value of {@code mipbitstream_ai_data2}.
        
           Returns:
             - the value of mipbitstream_ai_data2"""
        return self._mipbitstream_ai_data2
    
    def getMipreader(self) -> str:
        """Returns the value of {@code mipreader}.
        
           Returns:
             - the value of mipreader"""
        return self._mipreader
    
    
    def setMipcontext(self, v: str):
        """Changes the value of {@code mipcontext}.
        
           Parameters:
             - v -- the new value of mipcontext"""
        self._mipcontext = v
    
    def setMipdate(self, v: str):
        """Changes the value of {@code mipdate}.
        
           Parameters:
             - v -- the new value of mipdate"""
        self._mipdate = v
    
    def setMipto(self, v: str):
        """Changes the value of {@code mipto}.
        
           Parameters:
             - v -- the new value of mipto"""
        self._mipto = v
    
    def setMipfrom(self, v: str):
        """Changes the value of {@code mipfrom}.
        
           Parameters:
             - v -- the new value of mipfrom"""
        self._mipfrom = v
    
    def setMipcommand(self, v: str):
        """Changes the value of {@code mipcommand}.
        
           Parameters:
             - v -- the new value of mipcommand"""
        self._mipcommand = v
    
    def setMipbitstream_ai_clock(self, v: str):
        """Changes the value of {@code mipbitstream_ai_clock}.
        
           Parameters:
             - v -- the new value of mipbitstream_ai_clock"""
        self._mipbitstream_ai_clock = v
    
    def setMipbitstream_ai_data1(self, v: str):
        """Changes the value of {@code mipbitstream_ai_data1}.
        
           Parameters:
             - v -- the new value of mipbitstream_ai_data1"""
        self._mipbitstream_ai_data1 = v
    
    def setMipbitstream_ai_data2(self, v: str):
        """Changes the value of {@code mipbitstream_ai_data2}.
        
           Parameters:
             - v -- the new value of mipbitstream_ai_data2"""
        self._mipbitstream_ai_data2 = v
    
    def setMipreader(self, v: str):
        """Changes the value of {@code mipreader}.
        
           Parameters:
             - v -- the new value of mipreader"""
        self._mipreader = v
    
    
    #Indeed, there are 2.4 decorators for this, but for now we want to have all here: pythonic field access
    #backed by getter/setter and the ability to replace data classes by e.g. projecting or data enhancing
    #functionality (original idea of the "interfaces" with similar naming as in Java. It may be that the 
    #interfaces become superfluous due to the properties, but let's leave them in for now.
    mipcontext = property(getMipcontext, setMipcontext)
    mipdate = property(getMipdate, setMipdate)
    mipto = property(getMipto, setMipto)
    mipfrom = property(getMipfrom, setMipfrom)
    mipcommand = property(getMipcommand, setMipcommand)
    mipbitstream_ai_clock = property(getMipbitstream_ai_clock, setMipbitstream_ai_clock)
    mipbitstream_ai_data1 = property(getMipbitstream_ai_data1, setMipbitstream_ai_data1)
    mipbitstream_ai_data2 = property(getMipbitstream_ai_data2, setMipbitstream_ai_data2)
    mipreader = property(getMipreader, setMipreader)
    
