package iip;

import java.util.List;

import de.iip_ecosphere.platform.services.environment.Service;
import de.iip_ecosphere.platform.services.environment.YamlArtifact;
import de.iip_ecosphere.platform.transport.serialization.SerializerRegistry;
import de.iip_ecosphere.platform.transport.spring.SerializerMessageConverter;

import iip.serializers.AvaMqttOutputImplSerializer;
import iip.serializers.AvaMqttOutputSerializer;
import iip.serializers.MipMqttInputImplSerializer;
import iip.serializers.MipMqttInputSerializer;
import iip.serializers.MipMqttOutputImplSerializer;
import iip.serializers.MipMqttOutputSerializer;
import iip.serializers.RestHTG3HumidityImplSerializer;
import iip.serializers.RestHTG3HumiditySerializer;
import iip.serializers.RestHTG3TemperatureImplSerializer;
import iip.serializers.RestHTG3TemperatureSerializer;
import iip.serializers.RestPhoenixEEMMixedImplSerializer;
import iip.serializers.RestPhoenixEEMMixedSerializer;
import iip.serializers.RestPhoenixEEMResponseInformationImplSerializer;
import iip.serializers.RestPhoenixEEMResponseInformationInfoItemImplSerializer;
import iip.serializers.RestPhoenixEEMResponseInformationInfoItemSerializer;
import iip.serializers.RestPhoenixEEMResponseInformationRootItemImplSerializer;
import iip.serializers.RestPhoenixEEMResponseInformationRootItemSerializer;
import iip.serializers.RestPhoenixEEMResponseInformationSerializer;
import iip.serializers.RestPhoenixEEMResponseMeasurementSetImplSerializer;
import iip.serializers.RestPhoenixEEMResponseMeasurementSetItemImplSerializer;
import iip.serializers.RestPhoenixEEMResponseMeasurementSetItemSerializer;
import iip.serializers.RestPhoenixEEMResponseMeasurementSetSerializer;
import iip.serializers.RestPhoenixEEMResponseMeasurementSingleImplSerializer;
import iip.serializers.RestPhoenixEEMResponseMeasurementSingleSerializer;
import iip.serializers.RestPhoenixEEMResponseTariffNumberImplSerializer;
import iip.serializers.RestPhoenixEEMResponseTariffNumberSerializer;
import iip.serializers.RestPhoenixRwEEMMixedImplSerializer;
import iip.serializers.RestPhoenixRwEEMMixedSerializer;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.core.env.Environment;
import org.springframework.messaging.converter.MessageConverter;

/**
 * Service artifact starter.
 * Generated by: EASy-Producer.
 */
@SpringBootApplication
@ComponentScan({"iip.nodes", "de.iip_ecosphere.platform.services.environment.spring", 
"de.iip_ecosphere.platform.transport.spring"})
public class Starter extends de.iip_ecosphere.platform.services.environment.spring.Starter {

    /**
     * Creates an instance.
     *
     * @param environment the Spring environment
     */
    @Autowired
    public Starter(Environment environment) {
        super(environment);
    }

    @Override
    protected List<Service> createServices(YamlArtifact artifact) {
        return null;
    }

    /**
     * Creates a custom message converter and binds it against "application/iip".
     *
     * @return the custom message converter
     */
    @Bean
    public MessageConverter customMessageConverter() {
        return new SerializerMessageConverter();
    }

    /**
     * Registers required, generated serializers.
     */
    public static void registerSerializers() {
        SerializerRegistry.registerSerializer(AvaMqttOutputImplSerializer.class);
        SerializerRegistry.registerSerializer(AvaMqttOutputSerializer.class);
        SerializerRegistry.registerSerializer(MipMqttInputImplSerializer.class);
        SerializerRegistry.registerSerializer(MipMqttInputSerializer.class);
        SerializerRegistry.registerSerializer(MipMqttOutputImplSerializer.class);
        SerializerRegistry.registerSerializer(MipMqttOutputSerializer.class);
        SerializerRegistry.registerSerializer(RestHTG3HumidityImplSerializer.class);
        SerializerRegistry.registerSerializer(RestHTG3HumiditySerializer.class);
        SerializerRegistry.registerSerializer(RestHTG3TemperatureImplSerializer.class);
        SerializerRegistry.registerSerializer(RestHTG3TemperatureSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMMixedImplSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMMixedSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseInformationImplSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseInformationInfoItemImplSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseInformationInfoItemSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseInformationRootItemImplSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseInformationRootItemSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseInformationSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseMeasurementSetImplSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseMeasurementSetItemImplSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseMeasurementSetItemSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseMeasurementSetSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseMeasurementSingleImplSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseMeasurementSingleSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseTariffNumberImplSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixEEMResponseTariffNumberSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixRwEEMMixedImplSerializer.class);
        SerializerRegistry.registerSerializer(RestPhoenixRwEEMMixedSerializer.class);
    }

    /**
     * Starts the service chain.
     *
     * @param args command line arguments
     */
    public static void main(String[] args) {
        registerSerializers();
        main(iip.Starter.class, args);
    }

}
