package iip.datatypes;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

import de.iip_ecosphere.platform.services.environment.IipStringStyle;
import de.iip_ecosphere.platform.support.iip_aas.ConfiguredName;

import iip.datatypes.RestHTG3Humidity;

import org.apache.commons.lang3.builder.ReflectionToStringBuilder;

/**
 * Implementation of the application data type RestHTG3Humidity.
 * Generated by: EASy-Producer.
 */
@ConfiguredName("RestHTG3Humidity")
public class RestHTG3HumidityImpl implements RestHTG3Humidity {

    @JsonProperty("id")
    @ConfiguredName("id")
    private int id;
    @JsonProperty("rh")
    @ConfiguredName("rh")
    private double rh;

    /**
     * Default constructor. Fields are pre-allocated with default Java values.
     */
    public RestHTG3HumidityImpl() {
    }

    /**
     * Copy constructor.
     *
     * @param from the instance to copy the values from
     */
    public RestHTG3HumidityImpl(RestHTG3Humidity from) {
        this.id = from.getId();
        this.rh = from.getRh();
    }

    @Override
    @JsonIgnore
    public int getId() {
        return id;
    }

    @Override
    @JsonIgnore
    public void setId(int value) {
        this.id = value;
    }

    @Override
    @JsonIgnore
    public double getRh() {
        return rh;
    }

    @Override
    @JsonIgnore
    public void setRh(double value) {
        this.rh = value;
    }

    @Override
    public int hashCode() {
        int hc = 0;
        hc += Integer.hashCode(getId());
        hc += Double.hashCode(getRh());
        return hc;
    }

    @Override
    public boolean equals(Object other) {
        boolean eq;
        if (other instanceof RestHTG3Humidity) {
            RestHTG3Humidity oth = (RestHTG3Humidity) other;
            eq = true;
            eq &= getId() == oth.getId();
            eq &= getRh() == oth.getRh();
        } else {
            eq = false;
        }
        return eq;
    }

    @Override
    public String toString() {
        return ReflectionToStringBuilder.toString(this, IipStringStyle.SHORT_STRING_STYLE);
    }

}
