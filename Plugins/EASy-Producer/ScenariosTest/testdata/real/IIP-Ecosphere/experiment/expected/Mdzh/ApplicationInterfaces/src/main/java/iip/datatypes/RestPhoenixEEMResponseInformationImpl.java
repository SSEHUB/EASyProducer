package iip.datatypes;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

import de.iip_ecosphere.platform.services.environment.IipStringStyle;
import de.iip_ecosphere.platform.support.iip_aas.ConfiguredName;

import iip.datatypes.RestPhoenixEEMResponseInformation;

import org.apache.commons.lang3.builder.ReflectionToStringBuilder;

/**
 * Implementation of the application data type RestPhoenixEEMResponseInformation.
 * Generated by: EASy-Producer.
 */
@ConfiguredName("RestPhoenixEEMResponseInformation")
public class RestPhoenixEEMResponseInformationImpl implements RestPhoenixEEMResponseInformation {

    @JsonProperty("context")
    @ConfiguredName("context")
    private String context;
    @JsonProperty("timestamp")
    @ConfiguredName("timestamp")
    private String timestamp;
    @JsonProperty("rootItems")
    @ConfiguredName("rootItems")
    private RestPhoenixEEMResponseInformationRootItem[] rootItems;
    @JsonProperty("infoItems")
    @ConfiguredName("infoItems")
    private RestPhoenixEEMResponseInformationInfoItem[] infoItems;

    /**
     * Default constructor. Fields are pre-allocated with default Java values.
     */
    public RestPhoenixEEMResponseInformationImpl() {
    }

    /**
     * Copy constructor.
     *
     * @param from the instance to copy the values from
     */
    public RestPhoenixEEMResponseInformationImpl(RestPhoenixEEMResponseInformation from) {
        this.context = from.getContext();
        this.timestamp = from.getTimestamp();
        this.rootItems = from.getRootItems();
        this.infoItems = from.getInfoItems();
    }

    @Override
    @JsonIgnore
    public String getContext() {
        return context;
    }

    @Override
    @JsonIgnore
    public void setContext(String value) {
        this.context = value;
    }

    @Override
    @JsonIgnore
    public String getTimestamp() {
        return timestamp;
    }

    @Override
    @JsonIgnore
    public void setTimestamp(String value) {
        this.timestamp = value;
    }

    @Override
    @JsonIgnore
    public RestPhoenixEEMResponseInformationRootItem[] getRootItems() {
        return rootItems;
    }

    @Override
    @JsonIgnore
    public void setRootItems(RestPhoenixEEMResponseInformationRootItem[] value) {
        this.rootItems = value;
    }

    @Override
    @JsonIgnore
    public RestPhoenixEEMResponseInformationInfoItem[] getInfoItems() {
        return infoItems;
    }

    @Override
    @JsonIgnore
    public void setInfoItems(RestPhoenixEEMResponseInformationInfoItem[] value) {
        this.infoItems = value;
    }

    @Override
    public int hashCode() {
        int hc = 0;
        hc += getContext() != null ? getContext().hashCode() : 0;
        hc += getTimestamp() != null ? getTimestamp().hashCode() : 0;
        hc += getRootItems() != null ? getRootItems().hashCode() : 0;
        hc += getInfoItems() != null ? getInfoItems().hashCode() : 0;
        return hc;
    }

    @Override
    public boolean equals(Object other) {
        boolean eq;
        if (other instanceof RestPhoenixEEMResponseInformation) {
            RestPhoenixEEMResponseInformation oth = (RestPhoenixEEMResponseInformation) other;
            eq = true;
            eq &= getContext() != null ? getContext().equals(oth.getContext()) : true;
            eq &= getTimestamp() != null ? getTimestamp().equals(oth.getTimestamp()) : true;
            eq &= getRootItems() != null ? getRootItems().equals(oth.getRootItems()) : true;
            eq &= getInfoItems() != null ? getInfoItems().equals(oth.getInfoItems()) : true;
        } else {
            eq = false;
        }
        return eq;
    }

    @Override
    public String toString() {
        return ReflectionToStringBuilder.toString(this, IipStringStyle.SHORT_STRING_STYLE);
    }

}
