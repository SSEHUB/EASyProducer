package iip.datatypes;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

import de.iip_ecosphere.platform.services.environment.IipStringStyle;
import de.iip_ecosphere.platform.support.iip_aas.ConfiguredName;

import iip.datatypes.RestPhoenixRwEEMMixed;

import org.apache.commons.lang3.builder.ReflectionToStringBuilder;

/**
 * Implementation of the application data type RestPhoenixRwEEMMixed.
 * Generated by: EASy-Producer.
 */
@ConfiguredName("RestPhoenixRwEEMMixed")
public class RestPhoenixRwEEMMixedImpl implements RestPhoenixRwEEMMixed {

    @JsonProperty("tn1")
    @ConfiguredName("tn1")
    private RestPhoenixEEMResponseTariffNumber tn1;
    @JsonProperty("tn2")
    @ConfiguredName("tn2")
    private RestPhoenixEEMResponseTariffNumber tn2;

    /**
     * Default constructor. Fields are pre-allocated with default Java values.
     */
    public RestPhoenixRwEEMMixedImpl() {
    }

    /**
     * Copy constructor.
     *
     * @param from the instance to copy the values from
     */
    public RestPhoenixRwEEMMixedImpl(RestPhoenixRwEEMMixed from) {
        this.tn1 = from.getTn1();
        this.tn2 = from.getTn2();
    }

    @Override
    @JsonIgnore
    public RestPhoenixEEMResponseTariffNumber getTn1() {
        return tn1;
    }

    @Override
    @JsonIgnore
    public void setTn1(RestPhoenixEEMResponseTariffNumber value) {
        this.tn1 = value;
    }

    @Override
    @JsonIgnore
    public RestPhoenixEEMResponseTariffNumber getTn2() {
        return tn2;
    }

    @Override
    @JsonIgnore
    public void setTn2(RestPhoenixEEMResponseTariffNumber value) {
        this.tn2 = value;
    }

    @Override
    public int hashCode() {
        int hc = 0;
        hc += getTn1() != null ? getTn1().hashCode() : 0;
        hc += getTn2() != null ? getTn2().hashCode() : 0;
        return hc;
    }

    @Override
    public boolean equals(Object other) {
        boolean eq;
        if (other instanceof RestPhoenixRwEEMMixed) {
            RestPhoenixRwEEMMixed oth = (RestPhoenixRwEEMMixed) other;
            eq = true;
            eq &= getTn1() != null ? getTn1().equals(oth.getTn1()) : true;
            eq &= getTn2() != null ? getTn2().equals(oth.getTn2()) : true;
        } else {
            eq = false;
        }
        return eq;
    }

    @Override
    public String toString() {
        return ReflectionToStringBuilder.toString(this, IipStringStyle.SHORT_STRING_STYLE);
    }

}
