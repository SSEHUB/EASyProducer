package iip.datatypes;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

import de.iip_ecosphere.platform.services.environment.IipStringStyle;
import de.iip_ecosphere.platform.support.iip_aas.ConfiguredName;

import iip.datatypes.RestHTG3Temperature;

import org.apache.commons.lang3.builder.ReflectionToStringBuilder;

/**
 * Implementation of the application data type RestHTG3Temperature.
 * Generated by: EASy-Producer.
 */
@ConfiguredName("RestHTG3Temperature")
public class RestHTG3TemperatureImpl implements RestHTG3Temperature {

    @JsonProperty("id")
    @ConfiguredName("id")
    private int id;
    @JsonProperty("tC")
    @ConfiguredName("tC")
    private Object tC;
    @JsonProperty("tF")
    @ConfiguredName("tF")
    private Object tF;

    /**
     * Default constructor. Fields are pre-allocated with default Java values.
     */
    public RestHTG3TemperatureImpl() {
    }

    /**
     * Copy constructor.
     *
     * @param from the instance to copy the values from
     */
    public RestHTG3TemperatureImpl(RestHTG3Temperature from) {
        this.id = from.getId();
        this.tC = from.getTC();
        this.tF = from.getTF();
    }

    @Override
    @JsonIgnore
    public int getId() {
        return id;
    }

    @Override
    @JsonIgnore
    public void setId(int value) {
        this.id = value;
    }

    @Override
    @JsonIgnore
    public Object getTC() {
        return tC;
    }

    @Override
    @JsonIgnore
    public void setTC(Object value) {
        this.tC = value;
    }

    @Override
    @JsonIgnore
    public Object getTF() {
        return tF;
    }

    @Override
    @JsonIgnore
    public void setTF(Object value) {
        this.tF = value;
    }

    @Override
    public int hashCode() {
        int hc = 0;
        hc += Integer.hashCode(getId());
        hc += getTC() != null ? getTC().hashCode() : 0;
        hc += getTF() != null ? getTF().hashCode() : 0;
        return hc;
    }

    @Override
    public boolean equals(Object other) {
        boolean eq;
        if (other instanceof RestHTG3Temperature) {
            RestHTG3Temperature oth = (RestHTG3Temperature) other;
            eq = true;
            eq &= getId() == oth.getId();
            eq &= getTC() != null ? getTC().equals(oth.getTC()) : true;
            eq &= getTF() != null ? getTF().equals(oth.getTF()) : true;
        } else {
            eq = false;
        }
        return eq;
    }

    @Override
    public String toString() {
        return ReflectionToStringBuilder.toString(this, IipStringStyle.SHORT_STRING_STYLE);
    }

}
