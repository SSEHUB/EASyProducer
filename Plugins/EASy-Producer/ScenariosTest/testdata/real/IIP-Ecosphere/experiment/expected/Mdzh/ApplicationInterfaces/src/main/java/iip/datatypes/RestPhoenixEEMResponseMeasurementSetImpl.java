package iip.datatypes;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

import de.iip_ecosphere.platform.services.environment.IipStringStyle;
import de.iip_ecosphere.platform.support.iip_aas.ConfiguredName;

import iip.datatypes.RestPhoenixEEMResponseMeasurementSet;

import org.apache.commons.lang3.builder.ReflectionToStringBuilder;

/**
 * Implementation of the application data type RestPhoenixEEMResponseMeasurementSet.
 * Generated by: EASy-Producer.
 */
@ConfiguredName("RestPhoenixEEMResponseMeasurementSet")
public class RestPhoenixEEMResponseMeasurementSetImpl implements RestPhoenixEEMResponseMeasurementSet {

    @JsonProperty("context")
    @ConfiguredName("context")
    private String context;
    @JsonProperty("timestamp")
    @ConfiguredName("timestamp")
    private String timestamp;
    @JsonProperty("items")
    @ConfiguredName("items")
    private RestPhoenixEEMResponseMeasurementSetItem[] items;

    /**
     * Default constructor. Fields are pre-allocated with default Java values.
     */
    public RestPhoenixEEMResponseMeasurementSetImpl() {
    }

    /**
     * Copy constructor.
     *
     * @param from the instance to copy the values from
     */
    public RestPhoenixEEMResponseMeasurementSetImpl(RestPhoenixEEMResponseMeasurementSet from) {
        this.context = from.getContext();
        this.timestamp = from.getTimestamp();
        this.items = from.getItems();
    }

    @Override
    @JsonIgnore
    public String getContext() {
        return context;
    }

    @Override
    @JsonIgnore
    public void setContext(String value) {
        this.context = value;
    }

    @Override
    @JsonIgnore
    public String getTimestamp() {
        return timestamp;
    }

    @Override
    @JsonIgnore
    public void setTimestamp(String value) {
        this.timestamp = value;
    }

    @Override
    @JsonIgnore
    public RestPhoenixEEMResponseMeasurementSetItem[] getItems() {
        return items;
    }

    @Override
    @JsonIgnore
    public void setItems(RestPhoenixEEMResponseMeasurementSetItem[] value) {
        this.items = value;
    }

    @Override
    public int hashCode() {
        int hc = 0;
        hc += getContext() != null ? getContext().hashCode() : 0;
        hc += getTimestamp() != null ? getTimestamp().hashCode() : 0;
        hc += getItems() != null ? getItems().hashCode() : 0;
        return hc;
    }

    @Override
    public boolean equals(Object other) {
        boolean eq;
        if (other instanceof RestPhoenixEEMResponseMeasurementSet) {
            RestPhoenixEEMResponseMeasurementSet oth = (RestPhoenixEEMResponseMeasurementSet) other;
            eq = true;
            eq &= getContext() != null ? getContext().equals(oth.getContext()) : true;
            eq &= getTimestamp() != null ? getTimestamp().equals(oth.getTimestamp()) : true;
            eq &= getItems() != null ? getItems().equals(oth.getItems()) : true;
        } else {
            eq = false;
        }
        return eq;
    }

    @Override
    public String toString() {
        return ReflectionToStringBuilder.toString(this, IipStringStyle.SHORT_STRING_STYLE);
    }

}
