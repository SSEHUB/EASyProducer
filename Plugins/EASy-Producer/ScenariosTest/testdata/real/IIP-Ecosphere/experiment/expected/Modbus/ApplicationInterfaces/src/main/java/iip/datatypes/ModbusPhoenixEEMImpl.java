package iip.datatypes;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

import de.iip_ecosphere.platform.services.environment.IipStringStyle;
import de.iip_ecosphere.platform.support.iip_aas.ConfiguredName;

import iip.datatypes.ModbusPhoenixEEM;

import org.apache.commons.lang3.builder.ReflectionToStringBuilder;

/**
 * Implementation of the application data type ModbusPhoenixEEM.
 * Generated by: EASy-Producer.
 */
@ConfiguredName("ModbusPhoenixEEM")
public class ModbusPhoenixEEMImpl implements ModbusPhoenixEEM {
 
    @JsonProperty("Day")
    @ConfiguredName("Day")
    private int Day;
    
    @JsonProperty("Month")
    @ConfiguredName("Month")
    private int Month;
    
    @JsonProperty("Year")
    @ConfiguredName("Year")
    private int Year;
    
    @JsonProperty("U1")
    @ConfiguredName("U1")
    private float U1;
    
    @JsonProperty("frequency")
    @ConfiguredName("frequency")
    private float frequency;
    
    @JsonProperty("I1")
    @ConfiguredName("I1")
    private float I1;
    
    /**
     * Default constructor. Fields are pre-allocated with default Java values.
     */
    public ModbusPhoenixEEMImpl() {
    }
    
    /**
     * Copy constructor.
     * 
     * @param from the instance to copy the values from
     */
    public ModbusPhoenixEEMImpl(ModbusPhoenixEEM from) {
        this.Day = from.getDay();
        this.Month = from.getMonth();
        this.Year = from.getYear();
        this.U1 = from.getU1();
        this.frequency = from.getFrequency();
        this.I1 = from.getI1();
    }

    @Override
    @JsonIgnore
    public int getDay() {
        return Day;
    }

    @Override
    @JsonIgnore
    public void setDay(int value) {
        this.Day = value;
    }
    
    @Override
    @JsonIgnore
    public int getMonth() {
        return Month;
    }

    @Override
    @JsonIgnore
    public void setMonth(int value) {
        this.Month = value;
    }
    
    @Override
    @JsonIgnore
    public int getYear() {
        return Year;
    }

    @Override
    @JsonIgnore
    public void setYear(int value) {
        this.Year = value;
    }
    
    @Override
    @JsonIgnore
    public float getU1() {
        return U1;
    }
    
    @Override
    @JsonIgnore
    public void setU1(float value) {
        this.U1 = value;
    }

    @Override
    @JsonIgnore
    public float getFrequency() {
        return frequency;
    }

    @Override
    @JsonIgnore
    public void setFrequency(float value) {
        this.frequency = value;
    }
    
    @Override
    @JsonIgnore
    public float getI1() {
        return I1;
    }
    
    @Override
    @JsonIgnore
    public void setI1(float value) {
        this.I1 = value;
    }

    @Override
    public int hashCode() {
        int hc = 0;
        hc += Integer.hashCode(getDay());
        hc += Integer.hashCode(getMonth());
        hc += Integer.hashCode(getYear());
        hc += Float.hashCode(getU1());
        hc += Float.hashCode(getFrequency());
        hc += Float.hashCode(getI1());
        return hc;
    }
    
    @Override
    public boolean equals(Object other) {
        boolean eq;
        if (other instanceof ModbusPhoenixEEM) {
            ModbusPhoenixEEM oth = (ModbusPhoenixEEM) other;
            eq = true;
            eq &= getDay() == oth.getDay();
            eq &= getMonth() == oth.getMonth();
            eq &= getYear() == oth.getYear();
            eq &= getU1() == oth.getU1();
            eq &= getFrequency() == oth.getFrequency();
            eq &= getI1() == oth.getI1();
        } else {
            eq = false;
        }
        return eq;
    }
    
    @Override
    public String toString() {
        return ReflectionToStringBuilder.toString(this, IipStringStyle.SHORT_STRING_STYLE);
    }

}
