package iip.connectivity;

import java.io.IOException;

import de.iip_ecosphere.platform.connectors.ConnectorParameter;
import de.iip_ecosphere.platform.connectors.modbustcpipv1.ModbusTcpIpConnector;
import de.iip_ecosphere.platform.support.TimeUtils;
import de.iip_ecosphere.platform.transport.connectors.ReceptionCallback;
import de.iip_ecosphere.platform.transport.serialization.SerializerRegistry;

import iip.datatypes.Empty;
import iip.datatypes.SentronOutput;
import iip.nodes.SentronEnergyModbusConnector;
import iip.serializers.EmptyImplSerializer;
import iip.serializers.EmptySerializer;
import iip.serializers.SentronOutputImplSerializer;
import iip.serializers.SentronOutputSerializer;

/**
 * Technical connection test for connector "Sentron Energy Modbus connector".
 * Generated by: EASy-Producer.
 */
public class SentronEnergyModbusConnectorTest {

    private static ReceptionCallback<SentronOutput> callback = new ReceptionCallback<SentronOutput>() {

        @Override
        public void received(SentronOutput data) {
            System.out.println("Connector received: " + data);
        }

        @Override
        public Class<SentronOutput> getType() {
            return SentronOutput.class;
        }

    };

    /**
     * Main program.
     *
     * @param args ignored
     *
     * @throws IOException if intended connectivity fails
     */
    public static void main(String[] args) throws IOException {
        SerializerRegistry.registerSerializer(SentronOutputImplSerializer.class);
        SerializerRegistry.registerSerializer(SentronOutputSerializer.class);
        SerializerRegistry.registerSerializer(EmptyImplSerializer.class);
        SerializerRegistry.registerSerializer(EmptySerializer.class);

        // as configured, or create own and customize
        ConnectorParameter params = SentronEnergyModbusConnector.createConnectorParameter();

        ModbusTcpIpConnector<SentronOutput, Empty> conn = new ModbusTcpIpConnector<>(SentronEnergyModbusConnector.
            createConnectorAdapter());
        Runtime.getRuntime()
            .addShutdownHook(new Thread(() -> conn.disconnectSafe()));
        conn.connect(params);
        conn.setReceptionCallback(callback);
        System.out.println("Connector Sentron Energy Modbus connector created...");

        // wait for data
        System.out.println("Requesting data until <CTRL>+C...");
        while (true) {
            TimeUtils.sleep(300);
        }
    }

}
