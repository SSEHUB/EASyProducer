package iip.connectivity;
import java.io.IOException;

import de.iip_ecosphere.platform.connectors.ConnectorParameter;
import de.iip_ecosphere.platform.support.TimeUtils;
import de.iip_ecosphere.platform.transport.connectors.ReceptionCallback;
import de.iip_ecosphere.platform.transport.serialization.SerializerRegistry;

import de.iip_ecosphere.platform.connectors.mqttv3.PahoMqttv3Connector;

import iip.nodes.MyMqttConnExample;
import iip.datatypes.MyConnPltfOut;
import iip.datatypes.MyConnPltfIn;

/**
 * Technical connection test for connector "myMqttConnExample".
 * Generated by: EASy-Producer.
 */
public class MyMqttConnExampleTest {

    private static ReceptionCallback<MyConnPltfOut> callback
        = new ReceptionCallback<MyConnPltfOut>() {
    
        @Override
        public void received(MyConnPltfOut data) {
            System.out.println("Connector received: " + data);
        }
    
        @Override
        public Class<MyConnPltfOut> getType() {
            return MyConnPltfOut.class;
        }
    
    };

    /**
     * Main program.
     * 
     * @param args ignored
     * @throws IOException if intended connectivity fails
     */
    public static void main(String[] args) throws IOException {
        SerializerRegistry.registerSerializer(iip.serializers.MyConnPltfIn.class);
        SerializerRegistry.registerSerializer(iip.serializers.MyConnPltfOut.class);
        
        ConnectorParameter params = MyMqttConnExample
            .createConnectorParameter(); // as configured, or create own and customize
            
        PahoMqttv3Connector<MyConnPltfOut, MyConnPltfIn> conn = new PahoMqttv3Connector<>(
            MyMqttConnExample.createConnectorAdapter());
        Runtime.getRuntime().addShutdownHook(new Thread(() -> conn.disconnectSafe()));
        conn.connect(params);
        conn.setReceptionCallback(callback);
        System.out.println("Connector myMqttConnExample created...");

        // wait for data
        while (true) {
            TimeUtils.sleep(300);
        }
    }

}
