Pipelines::PipelineElement::name = name|The logical name of the pipeline element (must be given and be unique within a pipeline).
Pipelines::PipelineElement::constraints = constraints|Runtime constraints to be considered during adaptation.
Pipelines::PipelineNode::capacity = used computational capacity (runtime)|the element's capacity in terms of percents (0-1)
Pipelines::PipelineNode::executors = used number of executors (runtime)|the used number of executors for the entire pipeline
Pipelines::PipelineNode::inputTypes = input item types|the actual input types accepted by the element
Pipelines::PipelineNode::outputTypes = output item types|the actual output types provided by the element
Pipelines::PipelineNode::parallelism = intended parallelism|The intended parallelism of this node in terms of (Storm) executors (at least 1 must be given).
Pipelines::PipelineNode::numtasks = intended tasks|The number of (potentially sequential or parallel Storm) tasks of this node (same as parallelism if not given).
Pipelines::PipelineNode::maxParallelism = maximum parallelism|The maximum parallelism of this node in terms of (Storm) executors.
Pipelines::PipelineNode::maxNumtasks = maximum tasks|The maximum number of (potentially sequential or parallel Storm) tasks.
Pipelines::PipelineNode::scalable = scalable|Shall this node be subject to pipeline scaling at pipeline startup?
Pipelines::PipelineNode::stormInvariant = The intended parallelism must not exceed the number of tasks.
Pipelines::PipelineNode::maxParallel = Intended parallelism is larger than maximum parallelism.
Pipelines::PipelineNode::maxTasks = Intended number of tasks is larger than maximum tasks.
Pipelines::Flow::destination = flow end|The end of a data flow in terms of a pipeline node.
Pipelines::Flow::grouping = grouping|The grouping operation defining the (Storm) data distribution policy.
Pipelines::Flow::destinationCheck = destination must be configured. 
Pipelines::Flow::groupingCheck = grouping must be configured.
Pipelines::Flow::destinationConst = Destination should not be source
Pipelines::Flow::tupleTypeCheck = tupleType must be configured.
Pipelines::Source::output = outgoing flows|The outgoing pipeline flows leading data to other pipeline nodes.
Pipelines::Source::source = data source|The actual data source from Data Management.
Pipelines::Source::outputCheck = output must be configured.
Pipelines::Source::sourceCheck = source must be configured.
Pipelines::Source::reverseProp = Source input and output parameters are not configured properly
Pipelines::Source::sourceTypeCheck = Input and output types should be the same
Pipelines::Source::actual = the actually selected source (runtime)|The actually selected source at runtime.
Pipelines::Source::available = the actually available sources (runtime)|The actually available sources at runtime.
Pipelines::Source::velocity = velocity of this source (runtime)|Data stream velocity
Pipelines::Source::volume = volume of this source (runtime)|Data stream volume
Pipelines::Source::volatility = volatility of this source (runtime)|Data stream volatility
Pipelines::Source::confidence = accuracy of this source in terms of confidence (runtime)|Data stream accuracy
Pipelines::Source::completeness= completeness of this source (runtime)|Data stream completeness
Pipelines::Source::permissibleParametersSourceCheck = permissible parameters must be from the parameters of the source.
Pipelines::Source::flowTypeCheck = tupleType of an outgoing flow of a Source is not supported by the Source.
Pipelines::Source::items = output items (runtime)|output items/s
Pipelines::Sink::sink = data sink|The actual data sink from Data Management.
Pipelines::Sink::sinkCheck = sink must be configured. 
Pipelines::ReplaySink::permissibleParametersSinkCheck = permissible parameters must be from the parameters of the sink.
Pipelines::Sink::actual = the actually selected sink (runtime)|The actually selected sink at runtime.
Pipelines::Sink::available = the actually available sink (runtime)|The actually available sinks at runtime.
Pipelines::Sink::velocity = velocity of this sink (runtime)|Data stream velocity
Pipelines::Sink::volume = volume of this sink (runtime)|Data stream volume
Pipelines::Sink::confidence = accuracy of this sink in terms of confidence (runtime)|Sink confidence
Pipelines::Sink::items = output items (runtime)|output items/s
Pipelines::Sink::predecessorItems = input items (runtime)|input items/s
Pipelines::Sink::predictedItemsThreshold = predicted output items threshold (runtime)|predicted threshold for output items/s
Pipelines::ProcessingElement::output = outgoing flows|The outgoing pipeline flows leading data to other pipeline nodes.
Pipelines::ProcessingElement::outputCheck = output must be configured.
Pipelines::ProcessingElement::peTypeCheck = Input and output types should be the same
Pipelines::FamilyElement::family = algorithm family|The actual algorithm family defining the potential algorithms.
Pipelines::FamilyElement::familyCheck = family must be configured.
Pipelines::FamilyElement::permissibleParametersFamilyCheck = permissible parameters must be from the parameters of its belonging family.
Pipelines::FamilyElement::defaultAlgorithm = default algorithm|The algorithm (from the set of members of the family) that shall be used when starting up a pipeline.
Pipelines::FamilyElement::tuplesInputTypeCheck = Tuples input must match 
Pipelines::FamilyElement::tuplesOutputTypeCheck = Tuples output must match
Pipelines::FamilyElement::actualAlgorithmCheck = Actual algorithm must be part of the Family
Pipelines::FamilyElement::accuracyConfidence = algorithm accuracy in terms of confidence
Pipelines::FamilyElement::actual = the actually selected algorithm (runtime)|The actually selected algorithm at runtime.
Pipelines::FamilyElement::available = the actually available algorithms (runtime)|The actually available algorithms at runtime.
Pipelines::FamilyElement::latency = latency of the actual algorithm (runtime)|processing latency of the actual algorithm in milliseconds
Pipelines::FamilyElement::throughputItem = item throughput of the actual algorithm (runtime)|throughput of the actual algorithm in terms of items
Pipelines::FamilyElement::throughputVolume = volume throughput of the actual algorithm(runtime)|throughput of the actual algorithm in terms of bytes
Pipelines::FamilyElement::usedMemory = memory use of the actual algorithm (runtime)|memory use of the actual algorithm
Pipelines::FamilyElement::accuracyErrorRate = accuracy of the actual algorithm in terms of errors (runtime)|accuracy
Pipelines::FamilyElement::believability = believability of the actual algorithm (runtime)|believability
Pipelines::FamilyElement::relevancy = relevancy of the actual algorithm (runtime)|relevancy
Pipelines::FamilyElement::completeness = completeness of the actual algorithm (runtime)|completeness
Pipelines::FamilyElement::volume = volume of the actual algorithm (runtime)|processed data stream volume in bytes
Pipelines::FamilyElement::velocity = velocity of the actual algorithm (runtime)|processed stream velocity in items per second
Pipelines::FamilyElement::variety = variety of the actual algorithm (runtime)|processed stream variety
Pipelines::FamilyElement::defaultCheck = The default algorithm is not member of the set of algorithms of the families.
Pipelines::FamilyElement::flowTypeCheck = tupleType of an outgoing flow of an FamilyElement is not supported by the family.
Pipelines::FamilyElement::items = output items (runtime)|output items/s
Pipelines::FamilyElement::predecessorItems = input items (runtime)|input items/s
Pipelines::FamilyElement::predictedItemsThreshold = predicted output items threshold (runtime)|predicted threshold for output items/s
Pipelines::DataManagementElement::dataManagement = data element|The data management element indicating the actual storage for the data and the storage strategy.
Pipelines::DataManagementElement::dataManagementCheck = dataManagement must be configured.
Pipelines::DataManagementElement::flowTypeCheck = tupleType of an outgoing flow of a DataManagementElement is not supported by the DataManagementElement.
Pipelines::SubPipelineAlgorithm::subPipeline = subPipeline|Experimental - do not use.
Pipelines::Pipeline::name = pipeline name|The logical name of the pipeline.
Pipelines::Pipeline::sources = data sources|The data sources of this pipeline.
Pipelines::Pipeline::sourcesCheck = sources must be configured.
Pipelines::SubPipeline::connectorTrueCheck = connector must be configured and at least one connector must be assigned.
Pipelines::Pipeline::numworkers = number of workers|The maximum number of workers to allocate.
Pipelines::Pipeline::timeout = message timeout|The timeout for disappearing messages.
Pipelines::Pipeline::artifact = artifact|The Maven artifact where to deploy the generated pipeline code to.
Pipelines::Pipeline::debug = debug mode|Whether additional debugging code shall be generated, such as extensive logging.
Pipelines::Pipeline::fastSerialization = fast serialization|Use kryo serializers for the pipeline. For full performance, also the types shall provide serializers.
Pipelines::Pipeline::isSubPipeline = isSubPipeline|Experimental - do not use.
Pipelines::Pipeline::connectors = connectors|Experimental - do not use.
Pipelines::Pipeline::subPipelineFamily = subPipelineFamily|Experimental - do not use.
Pipelines::Pipeline::constraints = constraints|Runtime constraints to be considered during adaptation.
Pipelines::Pipeline::sourcesCount = At least one source must be assigned
Pipelines::Pipeline::latency = pipeline latency (runtime)|the maximum pipeline processing latency in milliseconds
Pipelines::Pipeline::throughputItem = pipeline item throughput (runtime)|the overall pipeline throughput in items per second
Pipelines::Pipeline::throughputVolume = pipeline volume throughput (runtime)|the overall pipeline throughput in bytes per second
Pipelines::Pipeline::accuracyConfidence = pipeline accuracy in terms of confidence (runtime)|the overall pipeline accuracy in terms of confidence
Pipelines::Pipeline::accuracyErrorRate = overall pipeline accuracy in terms of errors (runtime)|the overall pipeline accuracy in terms of errors
Pipelines::Pipeline::capacity = used computational capacity (runtime)|the overall pipeline capacity in terms of percents (0-1)
Pipelines::Pipeline::executors = used number of executors (runtime)|the used number of executors for the entire pipeline
Pipelines::Pipeline::tasks = used number of tasks (runtime)|the used number of tasks for the entire pipeline
Pipelines::Pipeline::scaling = scaling mode|How shall pipeline be scaled on startup?
Pipelines::pipelines = configured pipelines
Pipelines::pipelineNamesUnique = All pipeline names must be unique
Pipelines::Scaling::doNotScale = do not scale|Do not scale pipeline upon startup at all. If it does not fit, reject start.
Pipelines::Scaling::startAsIs = start as configured|If up-scaling is possible but not needed, start as configured.
Pipelines::Scaling::useFree = start with all free executor|If up-scaling is possible but not needed, start with all free executors.
