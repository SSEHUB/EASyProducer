import commonPomMethods;
@advice(QM)
template interfacesPom(Configuration config, FileArtifact target, String interfaceArtifact, setOf(FieldType) types) {
	
	mapOf(String, String) artifactsMap = {};//collect the artifacts that are included as dependencies.
	
	def appendRepositories(Text text) {
		text.append("    <repository>\n      <id>qm.eu</id>\n      <name>qm.eu</name>\n      <url>https://projects.sse.uni-hildesheim.de/qm/maven/</url>\n    </repository>\n");
	}
	
	def appendResources(Text text) {
		text.append("        <resource>
            <directory>"+"$"+"{basedir}/</directory>
            <filtering>false</filtering>
            <includes>
            <include>protobuf/*.proto</include>
            </includes>
        </resource>\n");        
	}
	
	def appendPlugins(Text text) {		
            text.append("            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>              
            </plugin>\n");	
            text.append("            <plugin>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<createChecksum>true</createChecksum>
				</configuration>
			</plugin>\n");
//            text.append("            <plugin>
//                <groupId>org.apache.maven.plugins</groupId>
//                <artifactId>maven-jar-plugin</artifactId>
//                <version>2.4</version>
//                <configuration>
//                    <useDefaultManifestFile>true</useDefaultManifestFile>
//                </configuration>
//            </plugin>\n");  
            text.append("            <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>\n"); 
			text.append("            <plugin>
    			<groupId>com.github.os72</groupId>
    			<artifactId>protoc-jar-maven-plugin</artifactId>
    			<version>3.0.0-a3</version>
    			<executions>
        			<execution>
            			<phase>generate-sources</phase>
			            <goals>
			                <goal>run</goal>
			            </goals>
			            <configuration>
			                <protocVersion>2.6.1</protocVersion> <!-- 2.4.1, 2.5.0, 2.6.1, 3.0.0 -->
			                <includeDirectories>
			                    <include>"+"$"+"{basedir}/protobuf</include>
			                </includeDirectories>
			                <inputDirectories>
			                    <include>"+"$"+"{basedir}/protobuf</include>
			                </inputDirectories>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>\n");       	
	}

	def appendDependencies(Text text) {
		
   text.append("   <dependency>
     <groupId>org.apache.storm</groupId>
     <artifactId>storm-core</artifactId>
   </dependency>\n");
   text.append("   <dependency>
     <groupId>com.esotericsoftware.kryo</groupId>
     <artifactId>kryo</artifactId>
   </dependency>\n");
   text.append("    <dependency>
    <groupId>com.google.protobuf</groupId>
    <artifactId>protobuf-java</artifactId>
    <version>2.6.1</version>
</dependency>\n");
   		text.append("   <dependency>
     <groupId>eu.qualimaster</groupId>
     <artifactId>StormCommons</artifactId>
   </dependency>\n");
   		artifactsMap.add("eu.qualimaster:StormCommons", "eu.qualimaster:StormCommons:0.0.5-SNAPSHOT");
   		text.append("   <dependency>
     <groupId>eu.qualimaster</groupId>
     <artifactId>QualiMaster.Events</artifactId>
   </dependency>\n"); 
   		artifactsMap.add("eu.qualimaster:QualiMaster.Events", "eu.qualimaster:QualiMaster.Events:0.0.5-SNAPSHOT");
   text.append("   <dependency>
     <groupId>eu.qualimaster</groupId>
     <artifactId>DataManagementLayer</artifactId>
   </dependency>\n"); 
   text.append("    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <version>2.4.0</version> 
            
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>        
      </exclusions>               
    </dependency>");   
     artifactsMap.add("eu.qualimaster:DataManagementLayer", "eu.qualimaster:DataManagementLayer:0.0.5-SNAPSHOT");		
	}
	
	def appendTypeDependencies(Text text, setOf(FieldType) types) {
		for(FieldType type : types) {
			String artifact = type.artifact;
			sequenceOf(String) artList = artifact.split(":");
			if(artList.size() == 3) {
				String artKey = artList[0]+":"+artList[1];
				if(artifact.length()>0 and !artifactsMap.containsKey(artKey)) {							
					text.append("    <dependency>\n");
				    text.append("        <groupId>${artList[0]}</groupId>\n");
					text.append("        <artifactId>${artList[1]}</artifactId>\n");
					text.append("        <version>${artList[2]}</version>\n");	
					text.append("    </dependency>\n");
					artifactsMap.add(artKey, artifact);
				}	
			}		
		}
	}
	
	def main(Configuration config, FileArtifact target, String interfaceArtifact, setOf(FieldType) types) {
		Text text = target.getText();
		text.append("<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n");		
		text.append("  <modelVersion>4.0.0</modelVersion>\n");
		sequenceOf(String) artList = interfaceArtifact.split(":");
		if(artList.size() == 3) {
		    text.append("  <groupId>${artList[0]}</groupId>\n");
			text.append("  <artifactId>${artList[1]}</artifactId>\n");
			text.append("  <version>${artList[2]}</version>\n");	
		}		
		text.append("  <packaging>jar</packaging>\n");
		text.append("\n");
		text.append("  <build>\n");
		text.append("    <sourceDirectory>"+"$"+"{basedir}/</sourceDirectory>\n");
		text.append("    <plugins>\n");
		appendPlugins(text);
		text.append("    </plugins>\n");
		text.append("    <resources>\n");
		appendResources(text);
		text.append("    </resources>\n");
		text.append("  </build>\n");
		text.append("  <repositories>\n");
		
		appendRepositories(text);
		text.append("  </repositories>\n");
		text.append("\n");
		appendDependencyManagement(text);
		text.append("  <dependencies>\n");
		appendDependencies(text);
		appendTypeDependencies(text, types);
		text.append("  </dependencies>\n");		
		text.append("</project>\n");
		target.rename("pom.xml");
	}
}