project PipelineVar_8Cfg {

	import Basics;
	import Pipelines;
	import FamiliesCfg;
	import DataManagementCfg;
	annotate BindingTime bindingTime = BindingTime.compile to PipelineVar_8Cfg;
	Pipeline PipelineVar_8;
	Source PipelineVar_8_Source0;
	Flow PipelineVar_8_Flow0;
	FamilyElement PipelineVar_8_FamilyElement0;
	Flow PipelineVar_8_Flow1;
	FamilyElement PipelineVar_8_FamilyElement1;
	Flow PipelineVar_8_Flow2;
	FamilyElement PipelineVar_8_FamilyElement2;
	Flow PipelineVar_8_Flow3;
	FamilyElement PipelineVar_8_FamilyElement3;
	Flow PipelineVar_8_Flow4;
	Sink PipelineVar_8_Sink0;
	PipelineVar_8_Sink0 = Sink {
		sink = refBy(DataSinkVar_2), 
		parallelism = 1, 
		name = "DynamicGraphSink", 
		constraints = {}
	};
	PipelineVar_8_Flow4 = Flow {
		destination = refBy(PipelineVar_8_Sink0), 
		grouping = Grouping.shuffleGrouping, 
		tupleType = refBy(FamiliesCfg::FamilyVar_23.output[0]), 
		name = "f4", 
		constraints = {}
	};
	PipelineVar_8_FamilyElement3 = FamilyElement {
		family = refBy(FamilyVar_23), 
		permissibleParameters = {
			refBy(FamiliesCfg::FamilyVar_23.parameters[0]), refBy(FamiliesCfg::FamilyVar_23.parameters[1])
		}, 
		output = {
			refBy(PipelineVar_8_Flow4)
		}, 
		parallelism = 1, 
		name = "DynamicHubComputation", 
		constraints = {}
	};
	PipelineVar_8_Flow3 = Flow {
		destination = refBy(PipelineVar_8_FamilyElement3), 
		grouping = Grouping.shuffleGrouping, 
		tupleType = refBy(FamiliesCfg::FamilyVar_22.output[0]), 
		name = "f3", 
		constraints = {}
	};
	PipelineVar_8_FamilyElement2 = FamilyElement {
		family = refBy(FamilyVar_22), 
		permissibleParameters = {
			refBy(FamiliesCfg::FamilyVar_22.parameters[0])
		}, 
		output = {
			refBy(PipelineVar_8_Flow3)
		}, 
		parallelism = 1, 
		name = "DynamicGraphCompilation", 
		constraints = {}
	};
	PipelineVar_8_Flow2 = Flow {
		destination = refBy(PipelineVar_8_FamilyElement2), 
		grouping = Grouping.shuffleGrouping, 
		tupleType = refBy(FamiliesCfg::fCorrelationFinancial.output[0]), 
		name = "f2", 
		constraints = {}
	};
	PipelineVar_8_FamilyElement1 = FamilyElement {
		family = refBy(fCorrelationFinancial), 
		permissibleParameters = {
			refBy(FamiliesCfg::fCorrelationFinancial.parameters[0])
		}, 
		output = {
			refBy(PipelineVar_8_Flow2)
		}, 
		parallelism = 1, 
		name = "CorrelationComputation", 
		constraints = {}
	};
	PipelineVar_8_Flow1 = Flow {
		destination = refBy(PipelineVar_8_FamilyElement1), 
		grouping = Grouping.shuffleGrouping, 
		tupleType = refBy(FamiliesCfg::fPreprocessor.output[0]), 
		name = "f5", 
		constraints = {}
	};
	PipelineVar_8_FamilyElement0 = FamilyElement {
		family = refBy(fPreprocessor), 
		output = {
			refBy(PipelineVar_8_Flow1)
		}, 
		parallelism = 1, 
		name = "preprocessor", 
		constraints = {}
	};
	PipelineVar_8_Flow0 = Flow {
		destination = refBy(PipelineVar_8_FamilyElement0), 
		grouping = Grouping.shuffleGrouping, 
		tupleType = refBy(DataManagementCfg::spring.input[1]), 
		name = "f1", 
		constraints = {}
	};
	Flow PipelineVar_8_Flow5;
	PipelineVar_8_Flow5 = Flow {
		destination = refBy(PipelineVar_8_FamilyElement1), 
		grouping = Grouping.shuffleGrouping, 
		tupleType = refBy(DataManagementCfg::spring.input[0]), 
		name = "f6", 
		constraints = {}
	};
	PipelineVar_8_Source0 = Source {
		output = {
			refBy(PipelineVar_8_Flow0), refBy(PipelineVar_8_Flow5)
		}, 
		source = refBy(spring), 
		parallelism = 1, 
		name = "FinancialDataSource", 
		constraints = {}
	};
	PipelineVar_8 = Pipeline {
		name = "DynamicGraphPip", 
		sources = {
			refBy(PipelineVar_8_Source0)
		}, 
		numworkers = 18, 
		artifact = "eu.qualimaster:DynamicGraphPip:0.0.1-SNAPSHOT", 
		debug = false, 
		fastSerialization = false, 
		constraints = {}
	};
	freeze {
		PipelineVar_8;
		PipelineVar_8_Source0;
		PipelineVar_8_Flow0;
		PipelineVar_8_FamilyElement0;
		PipelineVar_8_Flow1;
		PipelineVar_8_FamilyElement1;
		PipelineVar_8_Flow2;
		PipelineVar_8_FamilyElement2;
		PipelineVar_8_Flow3;
		PipelineVar_8_FamilyElement3;
		PipelineVar_8_Flow4;
		PipelineVar_8_Sink0;
		PipelineVar_8_Flow5;
	} but (f|f.bindingTime >= BindingTime.runtimeMon)
}
