Algorithms::Algorithm::name = name|The logical name of this algorithm as it is used in further parts of the model.
Algorithms::Algorithm::artifact = implementing artifact|The Maven artifact implementing this algorithm.
Algorithms::Algorithm::description = description|Free text description for documentation purposes.
Algorithms::Algorithm::input = input fields|The input data fields accepted by this algorithm. Must match the input fields of the family.
Algorithms::Algorithm::output = output fields|The output data fields provided by this family. Must match the output fields of the family.
Algorithms::Algorithm::parameters = adaptable parameters|Parameters of the algorithm that can be changed at runtime (can be a subset of the family).
Algorithms::SoftwareAlgorithm::class = implementing class|The (qualified) name of the Java class implementing this algorithm.
Algorithms::SoftwareAlgorithm::algTopologyClass = algTopologyClass|Experimental - do not touch.
Algorithms::SoftwareAlgorithm::scalable = scalable|Shall the algorithm be scalable during pipeline startup (only for sub-topology algorithms).
Algorithms::SoftwareAlgorithm::stormInvariant = The intended parallelism must not exceed the number of tasks.
Algorithms::SoftwareAlgorithm::parallelism = intended parallelism|The intended parallelism of this node in terms of (Storm) executors (at least 1 must be given, sub-topologies only).
Algorithms::SoftwareAlgorithm::numtasks = intended tasks|The number of (potentially sequential or parallel Storm) tasks of this algorithms (same as parallelism if not given, sub-topologies only).
Algorithms::SoftwareAlgorithm::minParallelism = minimum parallelism|The minimum parallelism of this node in terms of (Storm) executors (at least 1 must be given, sub-topologies only).
Algorithms::SoftwareAlgorithm::minNumtasks = minimum tasks|The minimum number of (potentially sequential or parallel Storm) tasks of this algorithms (same as parallelism if not given, sub-topologies only).
Algorithms::SoftwareAlgorithm::maxParallelism = maximum parallelism|The maximum parallelism of this node in terms of (Storm) executors (sub-topologies only).
Algorithms::SoftwareAlgorithm::maxNumtasks = maximum tasks|The maximum number of (potentially sequential or parallel Storm) tasks of this algorithms (sub-topologies only).
Algorithms::SoftwareAlgorithm::minParallel = Intended parallelism is smaller than minimum parallelism.
Algorithms::SoftwareAlgorithm::minTasks = Intended number of tasks is smaller than minimum tasks.
Algorithms::SoftwareAlgorithm::maxParallel = Intended parallelism is larger than maximum parallelism.
Algorithms::SoftwareAlgorithm::maxTasks = Intended number of tasks is larger than maximum tasks.
Algorithms::SoftwareAlgorithm::executors = actual parallelism|The actual parallelism of this node in terms of (Storm) executors (sub-topologies only).
Algorithms::SoftwareAlgorithm::tasks = actual tasks|The actual number of (potentially sequential or parallel Storm) tasks of this algorithms (sub-topologies only).
Algorithms::HardwareAlgorithm::hwNode = hardware node|The hardware node to run the algorithm on.
Algorithms::HardwareAlgorithm::actualHwNode = actual hardware node|The actual hardware node running the algorithm on.
Algorithms::HardwareAlgorithm::scalable = scalable|Shall the algorithm be scalable during pipeline startup.
Algorithms::HardwareAlgorithm::senderParallelism = intended sender parallelism|The intended parallelism of the node sending data to the hardware in terms of (Storm) executors.
Algorithms::HardwareAlgorithm::receiverParallelism = intended receiver parallelism|The intended parallelism of the node receiving data from the hardware in terms of (Storm) executors.
Algorithms::HardwareAlgorithm::senderNumTasks = intended sender tasks | The number of (potentially sequential or parallel Storm) tasks used for sending data to the hardware (same as parallelism if not given).
Algorithms::HardwareAlgorithm::receiverNumTasks = intended receiver tasks | The number of (potentially sequential or parallel Storm) tasks used for receiving data from the hardware (same as parallelism if not given).
Algorithms::HardwareAlgorithm::actualSenderParallelism = actual sender parallelism|The actual parallelism of the node sending data to the hardware in terms of (Storm) executors.
Algorithms::HardwareAlgorithm::actualReceiverParallelism = actual receiver parallelism|The actual parallelism of the node receiving data from the hardware in terms of (Storm) executors.
Algorithms::HardwareAlgorithm::actualSenderNumTasks = actual sender tasks | The actual number of (potentially sequential or parallel Storm) tasks used for sending data to the hardware (same as parallelism if not given).
Algorithms::HardwareAlgorithm::actualReceiverNumTasks = actual receiver parallelism|The actual parallelism of the node receiving data from the hardware in terms of (Storm) executors.
Algorithms::HardwareAlgorithm::stormInvariantSender = The intended parallelism for the sender must not exceed its number of tasks.
Algorithms::HardwareAlgorithm::stormInvariantReceiver = The intended parallelism for the receiver must not exceed its number of tasks.
Algorithms::Algorithm::successor = successor|Successor algorithm bound to this algorithm as part of a hardware library.
Algorithms::Algorithm::inputGivenCheck = Input must be assigned
Algorithms::Algorithm::outputGivenCheck = Output must be assigned
Algorithms::algorithms = configured algorithms
Algorithms::Algorithm::latency = processing latency (runtime)|algorithm processing latency in milliseconds
Algorithms::Algorithm::throughputItems = throughput in items (runtime)|algorithm throughput in items per second
Algorithms::Algorithm::throughputVolume = throughput in bytes (runtime)|algorithm throughput in bytes per second
Algorithms::Algorithm::usedMemory = memory use (runtime)|algorithm memory use in bytes
Algorithms::Algorithm::accuracyConfidence = accuracy confidence (runtime)|accuracy in terms of confidence
Algorithms::Algorithm::accuracyErrorRate = accuracy error rate (runtime)|accuracy in terms of error rate
Algorithms::Algorithm::believability = believability (runtime)|believability
Algorithms::Algorithm::relevancy = relevancy (runtime)|relevancy
Algorithms::Algorithm::completeness = completeness (runtime)|completeness
Algorithms::Algorithm::volume = data stream volume (runtime)|processed data stream volume in bytes
Algorithms::Algorithm::velocity = data stream velocity (runtime)|processed stream velocity in items per second
Algorithms::Algorithm::variety = data stream variety (runtime)|processed stream variety
Algorithms::Algorithm::items = output items (runtime)|output items/s
Algorithms::Algorithm::family_Items = family output items (runtime)|output items/s of the family
Algorithms::Algorithm::family_PredecessorItems = family input items (runtime)|input items/s of the family
Algorithms::Algorithm::family_PredictedItemsThreshold = family predicted output items threshold (runtime)|predicted threshold for output items/s
Algorithms::algNamesUnique = All algorithm names must be unique