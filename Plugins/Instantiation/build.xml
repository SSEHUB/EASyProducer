<?xml version="1.0" encoding="UTF-8"?>
<project name="Instantiation" default="all" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">	
	<property file="${user.home}/global-build.properties"/>
	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
        <classpath path="${jacoco.path}/jacocoant.jar"/>
    </taskdef>
    
    <!-- Individual properties for this build script -->
    <property name="test.plugin.instantiation" value="net.ssehub.easy.instantiation.core.tests"/>
    <property name="test.suite.instantiation" value="net.ssehub.easy.instantiation.core.AllTests"/>
    <property name="test.plugin.instantiation.java" value="net.ssehub.easy.instantiation.java.tests"/>
    <property name="test.suite.instantiation.java" value="net.ssehub.easy.instantiation.java.AllTests"/>
    <property name="test.plugin.instantiation.ant" value="net.ssehub.easy.instantiation.ant.test"/>
    <property name="test.suite.instantiation.ant" value="net.ssehub.easy.instantiation.ant.AllTests"/>
    <property name="test.plugin.instantiation.aspectj" value="net.ssehub.easy.instantiation.aspectj.tests"/>
    <property name="test.suite.instantiation.aspectj" value="net.ssehub.easy.instantiation.aspectj.AllTests"/>
    <property name="test.plugin.instantiation.rtVil" value="de.uni_hildesheim.sse.vil.rt.tests"/>
    <property name="test.suite.instantiation.rtVil" value="de.uni_hildesheim.sse.vil.rt.tests.AllTests"/>
    <property name="test.plugin.vil" value="de.uni_hildesheim.sse.vil.buildlang.tests"/>
    <property name="test.suite.vil" value="test.de.uni_hildesheim.sse.vil.buildlang.AllTests"/>
    <property name="test.plugin.template" value="de.uni_hildesheim.sse.vil.templatelang.tests"/>
    <property name="test.suite.template" value="test.de.uni_hildesheim.sse.vil.templatelang.AllTests"/>
	<property name="test.plugin.instantiation.serializer" value="net.ssehub.easy.instantiation.serializer.xml.tests" />
	<property name="test.suite.instantiation.serializer" value="net.ssehub.easy.instantiation.serializer.xml.AllTests"/>
    
	<target name="init">
		<!-- Delete generated folders -->
		<delete dir="junitResults"/>
		<delete dir="${coverage.base.dir}"/>
		<delete dir="${doc.dir}"/>
		
		<!-- Create folders -->
		<mkdir dir="junitResults"/>
		<mkdir dir="${coverage.base.dir}"/>
		<mkdir dir="${coverage.instr.dir}"/>
		<mkdir dir="${coverage.results.dir}"/>
		<mkdir dir="${doc.dir}"/>
	</target>
	
	<target name="compile">

        <echo>#####################################</echo>
        <echo>###  Compiling Instantiator Core  ###</echo>
        <echo>#####################################</echo>
        <ant dir="de.uni_hildesheim.sse.easy.instantiatorCore" antfile="${build.script.name}" />
            
        <!-- Must be compiled before rt-Instantiator Core -->
        <echo>###########################################</echo>
        <echo>###  Compiling Instantiator Serializer  ###</echo>
        <echo>###########################################</echo>
        <ant dir="${home.instantiator.serializer.dir}" antfile="${build.script.name}" /> 
        
        <echo>#######################################</echo>
        <echo>###  Compiling rt-Instantiator Core ###</echo>
        <echo>#######################################</echo>
        <ant dir="de.uni-hildesheim.sse.easy.instantiatorCore.rt" antfile="${build.script.name}" />
        
        <echo>#######################################</echo>
        <echo>###   Compiling Java Instantiator   ###</echo>
        <echo>#######################################</echo>
        <ant dir="${home.instantiator.java.dir}" antfile="${build.script.name}" />

		<echo>#############################</echo>
        <echo>###  Assembling ANT-Lib   ###</echo>
        <echo>#############################</echo>
        <ant dir="Ant" antfile="${build.script.name}" />

        <echo>#######################################</echo>
        <echo>###   Compiling ANT Instantiator    ###</echo>
        <echo>#######################################</echo>
        <ant dir="${home.instantiator.ant.dir}" antfile="${build.script.name}" />
        
        <echo>#################################</echo>
        <echo>###  Assembling AspectJ-Lib   ###</echo>
        <echo>#################################</echo>
        <ant dir="AspectJ" antfile="${build.script.name}" />
		
        <echo>##########################################</echo>
        <echo>###   Compiling AspectJ Instantiator   ###</echo>
        <echo>##########################################</echo>
        <ant dir="${home.instantiator.aspectj.dir}" antfile="${build.script.name}" />

        <echo>##################################</echo>
        <echo>###  Assembling Maven-Lib   ###</echo>
        <echo>##################################</echo>
        <ant dir="Maven" antfile="${build.script.name}" />
        
        <echo>#######################################</echo>
        <echo>###   Compiling Maven Instantiator  ###</echo>
        <echo>#######################################</echo>
        <ant dir="${home.instantiator.maven.dir}" antfile="${build.script.name}" />

        <echo>##################################</echo>
        <echo>###  Assembling Velocity-Lib   ###</echo>
        <echo>##################################</echo>
        <ant dir="Velocity" antfile="${build.script.name}" />
		
        <echo>#############################</echo>
        <echo>###  Compiling Velocity   ###</echo>
        <echo>#############################</echo>
        <ant dir="de.uni_hildeshem.sse.easy.instantiator.velocity" antfile="${build.script.name}" />

        <echo>##############################</echo>
        <echo>###  Assembling XVCL-Lib   ###</echo>
        <echo>##############################</echo>
        <ant dir="XVCL" antfile="${build.script.name}" />
		
        <echo>########################</echo>
        <echo>###  Compiling XVCL  ###</echo>
        <echo>########################</echo>
        <ant dir="de.uni_hildesheim.sse.easy.instantiator.xvcl" antfile="${build.script.name}" />
 
        <echo>####################################</echo>
        <echo>###  Compiling Expressions Core  ###</echo>
        <echo>####################################</echo>
        <ant dir="${home.vil.expressions.core.dir}" antfile="${build.script.name}" />
       
        <echo>####################################</echo>
        <echo>###   Compiling Expressions UI   ###</echo>
        <echo>####################################</echo>
        <ant dir="${home.vil.expressions.ui.dir}" antfile="${build.script.name}" />
        
        <echo>############################</echo>
        <echo>###  Compiling VIL Core  ###</echo>
        <echo>############################</echo>
        <ant dir="${home.vil.core.dir}" antfile="${build.script.name}" />

        <echo>###############################</echo>
        <echo>###  Compiling rt-VIL Core  ###</echo>
        <echo>###############################</echo>
        <ant dir="${home.vil.rt.core.dir}" antfile="${build.script.name}" />
        
        <echo>############################</echo>
        <echo>###   Compiling VIL UI   ###</echo>
        <echo>############################</echo>
        <ant dir="${home.vil.ui.dir}" antfile="${build.script.name}" />
        
        <echo>###############################</echo>
        <echo>###   Compiling rt-VIL UI   ###</echo>
        <echo>###############################</echo>
        <ant dir="${home.vil.rt.ui.dir}" antfile="${build.script.name}" />
        
        <echo>#################################</echo>
        <echo>###  Compiling Template Core  ###</echo>
        <echo>#################################</echo>
        <ant dir="${home.template.core.dir}" antfile="${build.script.name}" />
       
        <echo>#################################</echo>
        <echo>###   Compiling Template UI   ###</echo>
        <echo>#################################</echo>
        <ant dir="${home.template.ui.dir}" antfile="${build.script.name}" />
       
        <echo>###########################################</echo>
        <echo>###  Compiling Instantiator Core Tests  ###</echo>
        <echo>###########################################</echo>
        <ant dir="${home.instantiatorCore.tests.dir}" antfile="${build.script.name}" />
		
		<echo>#################################################</echo>
        <echo>###  Compiling Instantiator Serializer Tests  ###</echo>
        <echo>#################################################</echo>
        <ant dir="${home.instantiator.serializer.test.dir}" antfile="${build.script.name}" />
        
        <echo>##################################</echo>
        <echo>###  Compiling Template Tests  ###</echo>
        <echo>##################################</echo>
        <ant dir="${home.template.tests.dir}" antfile="${build.script.name}" />
        
        <echo>#############################</echo>
        <echo>###  Compiling VIL Tests  ###</echo>
        <echo>#############################</echo>
        <ant dir="${home.vil.tests.dir}" antfile="${build.script.name}" />

        <echo>################################</echo>
        <echo>###  Compiling rt-VIL Tests  ###</echo>
        <echo>################################</echo>
        <ant dir="${home.vil.rt.tests.dir}" antfile="${build.script.name}" />
        
        <echo>#############################################</echo>
        <echo>###   Compiling Java Instantiator Tests   ###</echo>
        <echo>#############################################</echo>
        <ant dir="${home.instantiator.java.test.dir}" antfile="${build.script.name}" />

        <echo>#############################################</echo>
        <echo>###   Compiling ANT Instantiator Tests    ###</echo>
        <echo>#############################################</echo>
        <ant dir="${home.instantiator.ant.test.dir}" antfile="${build.script.name}" />

        <echo>################################################</echo>
        <echo>###   Compiling AspectJ Instantiator Tests   ###</echo>
        <echo>################################################</echo>
        <ant dir="${home.instantiator.aspectj.test.dir}" antfile="${build.script.name}" />

		<echo>##################################</echo>
        <echo>###  Compiling Velocity Tests  ###</echo>
        <echo>##################################</echo>
        <ant dir="de.uni-hildesheim.sse.easy.instantiator.velocity.tests" antfile="${build.script.name}" />
        
        <echo>#################################################</echo>
        <echo>###   Compiling Complete Instantiator Tests   ###</echo>
        <echo>#################################################</echo>
        <ant dir="de.uni_hildesheim.sse.easy.instantiation.tests" antfile="${build.script.name}" />
	</target>
	
	<target name="prepareTestEclipse" if="${unzipNewEclipse}">
		<delete dir="${test.eclipse.name}"/>
		<mkdir dir="${test.eclipse.name}"/>
		<mkdir dir="${test.eclipse.workspace.dir}"/>
		<unzip src="${test.eclipse.zip}" dest="${test.eclipse.name}"/>
	</target>
	
	<target name="copy.to.eclipse">
		<condition property="test.eclipse.path" value="${basedir}/${test.eclipse.name}">
			<istrue value="${unzipNewEclipse}"/>
		</condition>
		<condition property="test.eclipse.path" value="${alternative.test.eclipse.dir}">
			<isfalse value="${unzipNewEclipse}"/>
		</condition>
		<antcall target="prepareTestEclipse"/>
		
        <copy todir="${test.eclipse.path}/plugins" failonerror="true" overwrite="true" flatten="true">
			<!-- Copy Plug-ins, which shall be tested -->
            <fileset dir="${basedir}" includes="**/${build.jar.dir}/*.jar" excludes="${home.instantiator.maven.dir}/${build.jar.dir}/**/*.jar"/>
            <!-- Copy dependent Plug-ins -->
			<!-- Model -->
		    <fileset dir="${home.libs.common.io.dir}/${build.jar.dir}" includes="**/*.jar"/>
            <fileset dir="${home.utils.dir}/${build.jar.dir}" includes="**/*.jar" />
            <fileset dir="${home.model.dir}/${build.jar.dir}" includes="**/*.jar" />
            <fileset dir="${home.model.tests.dir}/${build.jar.dir}" includes="**/*.jar" />
            <!-- Reasoner (Check whether Drools2 is needed) -->
			<fileset dir="${home.reasonerCore.dir}/${build.jar.dir}" includes="**/*.jar" />
        	<fileset dir="${home.reasonerCore.test.dir}/${build.jar.dir}" includes="**/*.jar" />
			<!--<fileset dir="${home.drools2.dir}/${build.jar.dir}" includes="**/*.jar" />-->
            <fileset dir="${home.sseReasoner.dir}/${build.jar.dir}" includes="**/*.jar" />
        	<fileset dir="${home.sseReasoner.test.dir}/${build.jar.dir}" includes="**/*.jar" />
			<!-- IVML Parser -->
            <fileset dir="${home.dslCore.dir}/${build.jar.dir}" includes="**/*.jar" />
            <fileset dir="${home.ivml.dir}/${build.jar.dir}" includes="**/*.jar" />
            <fileset dir="${home.ivml.tests.dir}/${build.jar.dir}" includes="**/*.jar" />
            <!-- EASy-Producer: Needed for Serializer.Tests -->
            <!--<fileset dir="${home.easy.persistence.dir}/${build.jar.dir}" includes="**/*.jar" />-->
		</copy>
        
        <!-- Maven Instantiatior must be unpacked -->
        <mkdir dir="${test.eclipse.path}/plugins/de.uni_hildesheim.sse.easy.instantiator.maven"/>
        <unzip dest="${test.eclipse.path}/plugins/de.uni_hildesheim.sse.easy.instantiator.maven">
            <fileset dir="${home.instantiator.maven.dir}/${build.jar.dir}">
                <include name="**/*.jar"/>
            </fileset>
       </unzip>
	</target>
	
	<target name="coreTest" depends="copy.to.eclipse">
		<property name="eclipse-home" value="${test.eclipse.path}"/>
		<!-- Instantiator Core, Buildlang, and Serializer --> 
        <!--ant target="core-test" antfile="plugins/${test.eclipse.testFW.dir}/library.xml" dir="${test.eclipse.path}">
		  <property name="data-dir" value="${test.eclipse.workspace.dir}"/>
		  <property name="plugin-name" value="de.uni_hildesheim.sse.easy.instantiation.tests"/>
		  <property name="classname" value="de.uni_hildesheim.sse.easy.instantiation.tests.AllTests"/>
		  <property name="extraVMargs" value="-Dvil.buildlang.testdata.home=${home.vil.tests.dir}/testdata -Dinstantiation.serializer.testdata.home=${home.instantiator.serializer.test.dir}/testdata -DinstantiatorCore.testdata.home=${home.instantiatorCore.tests.dir}/testdata -javaagent:${jacoco.path}/jacocoagent.jar=append=true,destfile=${basedir}/${coverage.results.dir}/${ant.project.name}.exec" />
		  <property name="os" value="${test.eclipse.os}"/>
		  <property name="ws" value="${test.eclipse.ws}"/>
		  <property name="arch" value="${test.eclipse.arch}"/>
		  <property name="timeout" value="480000"/>
		</ant-->
        <!-- Serializer Test -->
		<ant target="core-test" antfile="plugins/${test.eclipse.testFW.dir}/library.xml" dir="${test.eclipse.path}">
          <property name="data-dir" value="${test.eclipse.workspace.dir}"/>
          <property name="plugin-name" value="${test.plugin.instantiation.serializer}"/>
          <property name="classname" value="${test.suite.instantiation.serializer}"/>
          <property name="extraVMargs" value="-Dinstantiation.serializer.testdata.home=${home.instantiator.serializer.test.dir}/testdata -javaagent:${jacoco.path}/jacocoagent.jar=append=true,destfile=${basedir}/${coverage.results.dir}/${ant.project.name}.exec" />
          <property name="os" value="${test.eclipse.os}"/>
		  <property name="ws" value="${test.eclipse.ws}"/>
		  <property name="arch" value="${test.eclipse.arch}"/>
          <property name="timeout" value="480000"/>
        </ant>
        <!-- Instantiator Core test -->
        <ant target="core-test" antfile="plugins/${test.eclipse.testFW.dir}/library.xml" dir="${test.eclipse.path}">
		  <property name="data-dir" value="${test.eclipse.workspace.dir}"/>
		  <property name="plugin-name" value="${test.plugin.instantiation}"/>
		  <property name="classname" value="${test.suite.instantiation}"/>
		  <property name="extraVMargs" value="-DinstantiatorCore.testdata.home=${home.instantiatorCore.tests.dir}/testdata -javaagent:${jacoco.path}/jacocoagent.jar=append=true,destfile=${basedir}/${coverage.results.dir}/${ant.project.name}.exec" />
		  <property name="os" value="${test.eclipse.os}"/>
		  <property name="ws" value="${test.eclipse.ws}"/>
		  <property name="arch" value="${test.eclipse.arch}"/>
		  <property name="timeout" value="240000"/>
		</ant>
        <!-- buildlang test -->
        <ant target="core-test" antfile="plugins/${test.eclipse.testFW.dir}/library.xml" dir="${test.eclipse.path}">
		  <property name="data-dir" value="${test.eclipse.workspace.dir}"/>
		  <property name="plugin-name" value="${test.plugin.vil}"/>
		  <property name="classname" value="${test.suite.vil}"/>
		  <property name="extraVMargs" value="-Dvil.buildlang.testdata.home=${home.vil.tests.dir}/testdata -javaagent:${jacoco.path}/jacocoagent.jar=append=true,destfile=${basedir}/${coverage.results.dir}/${ant.project.name}.exec" />
		  <property name="os" value="${test.eclipse.os}"/>
		  <property name="ws" value="${test.eclipse.ws}"/>
		  <property name="arch" value="${test.eclipse.arch}"/>
		  <property name="timeout" value="240000"/>
		</ant>
        <!-- templatelang test -->
        <ant target="core-test" antfile="plugins/${test.eclipse.testFW.dir}/library.xml" dir="${test.eclipse.path}">
		  <property name="data-dir" value="${test.eclipse.workspace.dir}"/>
		  <property name="plugin-name" value="${test.plugin.template}"/>
		  <property name="classname" value="${test.suite.template}"/>
		  <property name="extraVMargs" value="-Dvil.templatelang.testdata.home=${home.template.tests.dir}/testdata -javaagent:${jacoco.path}/jacocoagent.jar=append=true,destfile=${basedir}/${coverage.results.dir}/${ant.project.name}.exec" />
		  <property name="os" value="${test.eclipse.os}"/>
		  <property name="ws" value="${test.eclipse.ws}"/>
		  <property name="arch" value="${test.eclipse.arch}"/>
		  <property name="timeout" value="240000"/>
		</ant>
        <!-- Java Instantiation test -->
        <ant target="core-test" antfile="plugins/${test.eclipse.testFW.dir}/library.xml" dir="${test.eclipse.path}">
		  <property name="data-dir" value="${test.eclipse.workspace.dir}"/>
		  <property name="plugin-name" value="${test.plugin.instantiation.java}"/>
		  <property name="classname" value="${test.suite.instantiation.java}"/>
		  <property name="extraVMargs" value="-Dinstantiator.java.testdata.home=${home.instantiator.java.test.dir}/testdata -javaagent:${jacoco.path}/jacocoagent.jar=append=true,destfile=${basedir}/${coverage.results.dir}/${ant.project.name}.exec" />
		  <property name="os" value="${test.eclipse.os}"/>
		  <property name="ws" value="${test.eclipse.ws}"/>
		  <property name="arch" value="${test.eclipse.arch}"/>
		  <property name="timeout" value="240000"/>
		</ant>
        <!-- ANT Instantiation test -->
        <ant target="core-test" antfile="plugins/${test.eclipse.testFW.dir}/library.xml" dir="${test.eclipse.path}">
          <property name="data-dir" value="${test.eclipse.workspace.dir}"/>
          <property name="plugin-name" value="${test.plugin.instantiation.ant}"/>
          <property name="classname" value="${test.suite.instantiation.ant}"/>
          <property name="extraVMargs" value="-Dinstantiator.ant.testdata.home=${home.instantiator.ant.test.dir}/testdata -javaagent:${jacoco.path}/jacocoagent.jar=append=true,destfile=${basedir}/${coverage.results.dir}/${ant.project.name}.exec" />
          <property name="os" value="${test.eclipse.os}"/>
		  <property name="ws" value="${test.eclipse.ws}"/>
		  <property name="arch" value="${test.eclipse.arch}"/>
          <property name="timeout" value="240000"/>
        </ant>
        <!-- AspectJ Instantiation test -->
        <ant target="core-test" antfile="plugins/${test.eclipse.testFW.dir}/library.xml" dir="${test.eclipse.path}">
          <property name="data-dir" value="${test.eclipse.workspace.dir}"/>
          <property name="plugin-name" value="${test.plugin.instantiation.aspectj}"/>
          <property name="classname" value="${test.suite.instantiation.aspectj}"/>
          <property name="extraVMargs" value="-Dinstantiator.aspectj.testdata.home=${home.instantiator.aspectj.test.dir}/testdata -javaagent:${jacoco.path}/jacocoagent.jar=append=true,destfile=${basedir}/${coverage.results.dir}/${ant.project.name}.exec" />
          <property name="os" value="${test.eclipse.os}"/>
		  <property name="ws" value="${test.eclipse.ws}"/>
		  <property name="arch" value="${test.eclipse.arch}"/>
          <property name="timeout" value="240000"/>
        </ant>
        <!-- Velocity Instantiation test -->
		<ant target="core-test" antfile="plugins/${test.eclipse.testFW.dir}/library.xml" dir="${test.eclipse.path}">
		  <property name="data-dir" value="${test.eclipse.workspace.dir}"/>
		  <property name="plugin-name" value="de.uni-hildesheim.sse.easy.instantiator.velocity.tests"/>
		  <property name="classname" value="test.uni_hildesheim.sse.easy.instantiator.velocity.tests.AllTests"/>
		  <property name="extraVMargs" value="-Dvil.buildlang.testdata.home=${home.vil.tests.dir}/testdata -javaagent:${jacoco.path}/jacocoagent.jar=append=true,destfile=${basedir}/${coverage.results.dir}/${ant.project.name}.exec" />
		  <property name="os" value="${test.eclipse.os}"/>
		  <property name="ws" value="${test.eclipse.ws}"/>
		  <property name="arch" value="${test.eclipse.arch}"/>
		  <property name="timeout" value="240000"/>
		</ant>
        <!-- rt-VIL test -->
        <ant target="core-test" antfile="plugins/${test.eclipse.testFW.dir}/library.xml" dir="${test.eclipse.path}">
          <property name="data-dir" value="${test.eclipse.workspace.dir}"/>
          <property name="plugin-name" value="${test.plugin.instantiation.rtVil}"/>
          <property name="classname" value="${test.suite.instantiation.rtVil}"/>
          <property name="extraVMargs" value="-Dvil.rt.testdata.home=${home.vil.rt.tests.dir}/testdata -javaagent:${jacoco.path}/jacocoagent.jar=append=true,destfile=${basedir}/${coverage.results.dir}/${ant.project.name}.exec" />
          <property name="os" value="${test.eclipse.os}"/>
		  <property name="ws" value="${test.eclipse.ws}"/>
		  <property name="arch" value="${test.eclipse.arch}"/>
          <property name="timeout" value="240000"/>
        </ant>        
      </target>
	
	<target name="report">
		<jacoco:report>                 
            <executiondata>
                <file file="${basedir}/${coverage.results.dir}/${ant.project.name}.exec"/>
            </executiondata>
                                
            <structure name="${ant.project.name}">
                <group name="Parsers">
                    <classfiles>
                        <fileset dir="${home.vil.expressions.core.dir}/${build.classes.dir}/" includes="**/*.class" />
                        <fileset dir="${home.vil.core.dir}/${build.classes.dir}/" includes="**/*.class" />
                        <fileset dir="${home.vil.tests.dir}/${build.classes.dir}/" includes="**/*.class" />
                        <fileset dir="${home.template.core.dir}/${build.classes.dir}/" includes="**/*.class" />
                    </classfiles>
                    <sourcefiles encoding="UTF-8">
                        <fileset dir="${home.vil.expressions.core.dir}/src/" />
                        <fileset dir="${home.vil.expressions.core.dir}/src-gen/" />
                        <fileset dir="${home.vil.expressions.core.dir}/xtend-gen/" />
                        <fileset dir="${home.vil.core.dir}/src/" />
                        <fileset dir="${home.vil.core.dir}/src-gen/" />
                        <fileset dir="${home.vil.core.dir}/xtend-gen/" />
                        <fileset dir="${home.vil.tests.dir}/src/" />
                        <fileset dir="${home.template.core.dir}/src/" />
                        <fileset dir="${home.template.core.dir}/src-gen/" />
                        <fileset dir="${home.template.core.dir}/xtend-gen/" />
                    </sourcefiles>
                </group>
                <group name="Model">
                    <classfiles>
                        <fileset dir="${home.instantiatorCore.dir}/${build.classes.dir}/" includes="**/*.class" />
                        <fileset dir="${home.instantiatorCore.rt.dir}/${build.classes.dir}/" includes="**/*.class" />
                    </classfiles>
                    <sourcefiles encoding="UTF-8">
                        <fileset dir="${home.instantiatorCore.dir}/src/" />
                        <fileset dir="${home.instantiatorCore.rt.dir}/src/" />
                    </sourcefiles>
                </group>
                <group name="Instantiators">
                    <classfiles>
                        <!-- Jacoco also supports JAR files, but his will cause that also the complete eclipse infrastructure is measured here -->
                        <fileset dir="${home.instantiator.java.dir}/${build.classes.dir}/" includes="**/*.class" />
                        <fileset dir="${home.instantiator.ant.dir}/${build.classes.dir}/" includes="**/*.class"  />
                        <fileset dir="${home.instantiator.aspectj.dir}/${build.classes.dir}/" includes="**/*.class"  />
                        <fileset dir="${home.instantiator.velocity.dir}/${build.classes.dir}/" includes="**/*.class" />
                        <fileset dir="${home.instantiator.serializer.dir}/${build.classes.dir}/" includes="**/*.class" />
                        <fileset dir="${home.instantiator.maven.dir}/${build.classes.dir}/" includes="**/*.class" />
                    </classfiles>
                    <sourcefiles encoding="UTF-8">
                        <fileset dir="${home.instantiator.java.dir}/src/" />
                        <fileset dir="${home.instantiator.ant.dir}/src/" />
                        <fileset dir="${home.instantiator.aspectj.dir}/src/" />
                        <fileset dir="${home.instantiator.velocity.dir}/src/" />
                        <fileset dir="${home.instantiator.serializer.dir}/src/" />
                        <fileset dir="${home.instantiator.maven.dir}/src/" />
                    </sourcefiles>
                </group>
            </structure>
                                
            <html destdir="${basedir}/${coverage.results.dir}"/>                        
        </jacoco:report>
	</target> 
	
	<target name="test" depends="coreTest, report">
		<!-- Gather Junit results -->
		<copy todir="junitResults" failonerror="true" overwrite="true">
			<fileset dir="${test.eclipse.path}/results/">
				<include name="**/*.xml" />
			</fileset>
		</copy>
        <copy todir="${benchmarks.home}" failonerror="false" overwrite="true">
            <fileset dir="${home.vil.rt.tests.dir}/testdata/temp/">
                <include name="*.tsv" />
            </fileset>
        </copy>
	</target>	

	<target name="storeJars">
		<copy todir="${easy.bundles.dir}" failonerror="true" overwrite="true" flatten="true">
			<fileset dir=".">
				<include name="**/build/jar/*.jar" />
			</fileset>
		</copy>
	</target>
	
    <target name="remove.testeclipse.instance">
        <delete dir="${basedir}/${test.eclipse.name}"/>
    </target>
		
	<target name="all" depends="init, compile, test, storeJars, remove.testeclipse.instance"/>
	<target name="only.compile" depends="init, compile"/>
</project>
