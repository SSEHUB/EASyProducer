-> main(Project, Configuration, Project) with (<project>, <config>, <project>)
-> main(Configuration, FileArtifact) with (<config>, JCATest4.java)
    art <- JCATest4.java
    -> addEnum(JavaCodeArtifact, String, String) with (JCATest4.java, SimpleEnum, SimpleEnum.
            Generated by: EASy-Producer.) = JavaCodeEnum: SimpleEnum
    -> setPrivate(JavaCodeEnum) with (JavaCodeEnum: SimpleEnum) = JavaCodeEnum: SimpleEnum
    enm <- JavaCodeEnum: SimpleEnum
    -> addLiteral(JavaCodeEnum, String) with (JavaCodeEnum: SimpleEnum, FIRST) = JavaCodeEnumConstant
    -> addLiteral(JavaCodeEnum, String) with (JavaCodeEnum: SimpleEnum, SECOND) = JavaCodeEnumConstant
    -> addEnum(JavaCodeArtifact, String, String) with (JCATest4.java, SimpleEnum2, SimpleEnum.
            Generated by: EASy-Producer.) = JavaCodeEnum: SimpleEnum2
    -> setPrivate(JavaCodeEnum) with (JavaCodeEnum: SimpleEnum2) = JavaCodeEnum: SimpleEnum2
    enm <- JavaCodeEnum: SimpleEnum2
    -> addLiteral(JavaCodeEnum, String, String) with (JavaCodeEnum: SimpleEnum2, FIRST, First value.) = JavaCodeEnumConstant
    -> addLiteral(JavaCodeEnum, String, String) with (JavaCodeEnum: SimpleEnum2, SECOND, Second value.) = JavaCodeEnumConstant
    -> addEnum(JavaCodeArtifact, String, String) with (JCATest4.java, PublicEnum, PublicEnum.
            Generated by: EASy-Producer.) = JavaCodeEnum: PublicEnum
    -> addInterface(JavaCodeEnum, String) with (JavaCodeEnum: PublicEnum, java.io.Serializable) = JavaCodeEnum: PublicEnum
    enm <- JavaCodeEnum: PublicEnum
    -> addLiteral(JavaCodeEnum, String) with (JavaCodeEnum: PublicEnum, FIRST) = JavaCodeEnumConstant
    -> addArgument(JavaCodeEnumConstant, Any) with (JavaCodeEnumConstant, 1) = JavaCodeEnumConstant
    -> addLiteral(JavaCodeEnum, String) with (JavaCodeEnum: PublicEnum, SECOND) = JavaCodeEnumConstant
    -> addArgument(JavaCodeEnumConstant, Any) with (JavaCodeEnumConstant, 2) = JavaCodeEnumConstant
    -> addAttribute(JavaCodeClass, String, String) with (JavaCodeEnum: PublicEnum, int, value) = JavaCodeAttribute: value
    attr <- JavaCodeAttribute: value
    -> addConstructor(JavaCodeClass, String) with (JavaCodeEnum: PublicEnum, Creates a constant.) = JavaCodeMethod: PublicEnum
    cons <- JavaCodeMethod: PublicEnum
    -> addParameter(JavaCodeMethod, String, String, String) with (JavaCodeMethod: PublicEnum, int, value, the value) = JavaCodeParameterSpecification int value
    -> addAssignment(JavaCodeMethod, String, JavaCodeExpression) with (JavaCodeMethod: PublicEnum, this.value, JavaCodeTextExpression) = JavaCodeAssignment
    -> addGetter(JavaCodeClass, JavaCodeAttribute) with (JavaCodeEnum: PublicEnum, JavaCodeAttribute: value) = JavaCodeMethod: getValue
    -> vilTemplateProcessor(String, Configuration, Artifact) with (JavaCode4Tpl, <config>, JCATest4.java, {}) = {JCATest4.java}