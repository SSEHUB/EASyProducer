import javaLib;

@indent(indentation = 4, additional = 0)
@format(profile="java", profileArg_javadocIndent="* ", lineLength = 120, profileArg_eltSorting="CONS_ALPHA")
template JavaCode6Tpl(Configuration config, JavaCodeArtifact target) {

    def main(Configuration config, JavaCodeArtifact target) {
        JavaCodeClass mainCls = target.addClass("Data",
            'Data class.
            Generated by: EASy-Producer.');
   
        JavaCodeMethod m = mainCls.addMainMethod();
        m.addVariable("java.util.List<String>", "data", "")
            .addNew("java.util.ArrayList<>");
        m.addImport("java.lang.Math");
            
        JavaCodeMethodCall c = m.addCall("data.stream");
        c = c.addCall("filter");
        c.addLambdaArgument()
            .addVariable("d")
            .addExpression("d.length() > 0");
        c.addCall("collect")
            .addArgument("java.util.Collectors.toList()", JavaCodeImportScope.CLASS);
            
        m.addEmptyLine();

        c = m.addCall("data.stream");
        c = c.addCall("filter");
        c.addLambdaArgument()
            .addVariable("d")
            .addCall("isOk")
                .addArgument("d");
        c.addCall("collect")
            .addArgument("java.util.Collectors.toList()", JavaCodeImportScope.CLASS);

        m.addEmptyLine();

        c = m.addCall("data.stream");
        c = c.addCall("filter");
        c.addLambdaArgument()
            .addVariable("d")
            .addBlock()
                .addReturn("d != null && d.length() > 0");
        c.addCall("collect")
            .addArgument("java.util.Collectors.toList()", JavaCodeImportScope.CLASS);

        mainCls.addMethod("boolean", "isOk", "Checks whether a String is ok.")
            .setStatic()
            .addReturn("!text.isEmpty()")
            .addParameter("String", "text", "the text");
    }
    
}
