import javaLib;

@indent(indentation = 4, additional = 0)
@format(profile="java", profileArg_javadocIndent="* ", lineLength = 120, profileArg_eltSorting="CONS_ALPHA")
template JavaCode7Tpl(Configuration config, JavaCodeArtifact target) {

    def main(Configuration config, JavaCodeArtifact target) {
        JavaCodeClass mainCls = target.addClass("DataImpl<CO, CI>",
            'Data class.
            Generated by: EASy-Producer.');
        mainCls.addExtends("de.test.TestConnector<CO, CI>");
        sequenceOf(String) props = {};
        props.add("spring.cloud.function.definition=createModbusPhoenixEEM_myModbusConn;createModbusSiemensSentron_myModbusSentronConn");
        props.add("iip.service.ModbusReceiver=true");
        mainCls.addAnnotation("TestPropertySource").addArrayArgument("properties", true).stringValues(props);

        JavaCodeMethod m = mainCls.addConstructor("Connector constructor.");
        m.addParameter("de.test.ProtocolAdapter<CO, CI>...", "adapter", "the protocol adapter");
        m.addSuperCall().addArgument("adapter");
        
        m = mainCls.addMethod("Class<?>", "getInputClass");
        m.addOverrideAnnotation();
        m.addReturn("RestType.class");

        m = mainCls.addMethod("Class<?>", "getValueClass");
        m.addOverrideAnnotation();
        m.addReturn("RestType.class");
        
        m = mainCls.addMethod("test");
        JavaCodeAlternative a = m.addIf("false");
        a.addSystemOutPrintlnCall().addStringArgument("IF");
        a = a.addElseIf("false");
        a.addSystemOutPrintlnCall().addStringArgument("ELSE-IF");
        a.addElse().addSystemOutPrintlnCall().addStringArgument("ELSE-IF");
    }
    
}
