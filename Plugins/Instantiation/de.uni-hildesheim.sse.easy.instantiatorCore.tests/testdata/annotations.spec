net.ssehub.easy.instantiation.core.model.vilTypes.Collection  @net.ssehub.easy.instantiation.core.model.vilTypes.ClassMeta(furtherOperations=class net.ssehub.easy.instantiation.core.model.vilTypes.CollectionOperations, name="")
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Collection.allowSequenceAdjustment()
  @net.ssehub.easy.instantiation.core.model.vilTypes.Invisible(inherit=true)
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Collection.any(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Collection.apply(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.NotOclCompliant({"apply"})
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=true, flatten=false, name={"apply","iterate"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Collection.asSequence()
  @net.ssehub.easy.instantiation.core.model.vilTypes.NotOclCompliant({"asSequence"})
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"asSequence","toSequence"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Collection.asSet()
  @net.ssehub.easy.instantiation.core.model.vilTypes.NotOclCompliant({"asSet"})
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"asSet","toSet"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Collection.avg()
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=true, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract void net.ssehub.easy.instantiation.core.model.vilTypes.Collection.clear()
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Collection net.ssehub.easy.instantiation.core.model.vilTypes.Collection.cloneCollection()
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"clone"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Collection net.ssehub.easy.instantiation.core.model.vilTypes.Collection.closure(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=true, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=0)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Collection net.ssehub.easy.instantiation.core.model.vilTypes.Collection.collect(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=true, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=0)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Collection net.ssehub.easy.instantiation.core.model.vilTypes.Collection.collectNested(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=2147483647)
 - public abstract int net.ssehub.easy.instantiation.core.model.vilTypes.Collection.count(java.lang.Object)
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Collection.excludes(java.lang.Object)
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Collection.excludesAll(net.ssehub.easy.instantiation.core.model.vilTypes.Collection)
 - public abstract java.lang.Boolean net.ssehub.easy.instantiation.core.model.vilTypes.Collection.exists(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Collection net.ssehub.easy.instantiation.core.model.vilTypes.Collection.flatten() throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=true, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=0, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract java.lang.Boolean net.ssehub.easy.instantiation.core.model.vilTypes.Collection.forAll(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
 - public abstract int net.ssehub.easy.instantiation.core.model.vilTypes.Collection.getGenericParameterCount()
  @net.ssehub.easy.instantiation.core.model.vilTypes.Invisible(inherit=true)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.TypeDescriptor net.ssehub.easy.instantiation.core.model.vilTypes.Collection.getGenericParameterType(int)
  @net.ssehub.easy.instantiation.core.model.vilTypes.Invisible(inherit=true)
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Collection.includes(java.lang.Object)
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Collection.includesAll(net.ssehub.easy.instantiation.core.model.vilTypes.Collection)
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Collection.isAcyclic(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Collection.isEmpty()
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Collection.isEquals(net.ssehub.easy.instantiation.core.model.vilTypes.Collection)
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"equals"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Collection.isNotEmpty()
  @net.ssehub.easy.instantiation.core.model.vilTypes.NotOclCompliant({"isNotEmpty"})
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"notEmpty","isNotEmpty"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract java.lang.Boolean net.ssehub.easy.instantiation.core.model.vilTypes.Collection.isUnique(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
 - public abstract java.util.Iterator net.ssehub.easy.instantiation.core.model.vilTypes.Collection.iterator()
  @net.ssehub.easy.instantiation.core.model.vilTypes.Invisible(inherit=false)
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Collection.max()
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Collection.min()
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Collection.one(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Collection.product()
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Collection net.ssehub.easy.instantiation.core.model.vilTypes.Collection.reject(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=0, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Collection net.ssehub.easy.instantiation.core.model.vilTypes.Collection.select(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=0, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Collection net.ssehub.easy.instantiation.core.model.vilTypes.Collection.selectByKind(net.ssehub.easy.instantiation.core.model.vilTypes.TypeDescriptor)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"selectByKind","typeSelect"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Collection net.ssehub.easy.instantiation.core.model.vilTypes.Collection.selectByType(net.ssehub.easy.instantiation.core.model.vilTypes.TypeDescriptor)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract int net.ssehub.easy.instantiation.core.model.vilTypes.Collection.size()
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Collection net.ssehub.easy.instantiation.core.model.vilTypes.Collection.sortedBy(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.NotOclCompliant({"sort"})
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"sortedBy","sort"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Collection.sum()
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Collection net.ssehub.easy.instantiation.core.model.vilTypes.Collection.typeReject(net.ssehub.easy.instantiation.core.model.vilTypes.TypeDescriptor)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
net.ssehub.easy.instantiation.core.model.vilTypes.Set - public static final java.util.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.DEFAULT
  @net.ssehub.easy.instantiation.core.model.vilTypes.DefaultValue(name="")
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Set.add(java.lang.Object)
  @net.ssehub.easy.instantiation.core.model.vilTypes.GenericArguments([0])
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.cloneCollection()
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SET, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"clone"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.closure(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SET, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=true, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=0)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.collect(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SET, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=true, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=0)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.collectNested(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SET, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=2147483647)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.difference(net.ssehub.easy.instantiation.core.model.vilTypes.Set)
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"-"}, opType=INFIX, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.excluding(net.ssehub.easy.instantiation.core.model.vilTypes.Collection)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.flatten() throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SET, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=true, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=0, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.including(net.ssehub.easy.instantiation.core.model.vilTypes.Collection)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.intersection(net.ssehub.easy.instantiation.core.model.vilTypes.Set)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Set.projectSingle()
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.reject(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SET, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=0, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Set.remove(java.lang.Object)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.select(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SET, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=0, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.selectByKind(net.ssehub.easy.instantiation.core.model.vilTypes.TypeDescriptor)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SET, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"selectByKind","typeSelect"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.selectByType(net.ssehub.easy.instantiation.core.model.vilTypes.TypeDescriptor)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SET, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.symmetricDifference(net.ssehub.easy.instantiation.core.model.vilTypes.Set)
 - public abstract java.util.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.toMappedSet()
  @net.ssehub.easy.instantiation.core.model.vilTypes.Invisible(inherit=false)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Set.toSequence()
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.typeReject(net.ssehub.easy.instantiation.core.model.vilTypes.TypeDescriptor)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SET, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Set.union(net.ssehub.easy.instantiation.core.model.vilTypes.Set)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
net.ssehub.easy.instantiation.core.model.vilTypes.Sequence - public static final java.util.List net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.DEFAULT
  @net.ssehub.easy.instantiation.core.model.vilTypes.DefaultValue(name="")
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.add(java.lang.Object)
  @net.ssehub.easy.instantiation.core.model.vilTypes.GenericArguments([0])
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.append(java.lang.Object)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.append(net.ssehub.easy.instantiation.core.model.vilTypes.Collection)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.at(int)
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"[]"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.cloneCollection()
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SEQUENCE, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"clone"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.closure(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SET, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=true, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=0)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.collect(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SEQUENCE, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=true, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=0)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.collectNested(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SEQUENCE, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=2147483647)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.excluding(net.ssehub.easy.instantiation.core.model.vilTypes.Collection)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.first()
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.flatten() throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SEQUENCE, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=true, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=0, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.get(int)
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.hasDuplicates()
 - public abstract int net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.indexOf(java.lang.Object)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.insertAt(int,java.lang.Object)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.isSubsequenceOf(net.ssehub.easy.instantiation.core.model.vilTypes.Sequence)
 - public abstract java.lang.String net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.joinfields(java.lang.String,java.lang.String,java.lang.String)
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.last()
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Map net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.mapAny(net.ssehub.easy.instantiation.core.model.vilTypes.Sequence)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType, interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Map net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.mapSequence(net.ssehub.easy.instantiation.core.model.vilTypes.Sequence)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType, interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.overlaps(net.ssehub.easy.instantiation.core.model.vilTypes.Sequence)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.prepend(java.lang.Object)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.reject(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SEQUENCE, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=0, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract boolean net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.remove(java.lang.Object)
 - public abstract void net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.removeAll(java.lang.Object)
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.removeAt(int)
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.removeFirst()
 - public abstract java.lang.Object net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.removeLast()
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.revert()
  @net.ssehub.easy.instantiation.core.model.vilTypes.NotOclCompliant({"revert"})
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"reverse","revert"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.select(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SEQUENCE, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={""}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=0, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.selectByKind(net.ssehub.easy.instantiation.core.model.vilTypes.TypeDescriptor)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SEQUENCE, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"selectByKind","typeSelect"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.selectByType(net.ssehub.easy.instantiation.core.model.vilTypes.TypeDescriptor)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SEQUENCE, type="")
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.sortAlpha()
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.sortedBy(net.ssehub.easy.instantiation.core.model.expressions.ExpressionEvaluator) throws net.ssehub.easy.instantiation.core.model.common.VilException
  @net.ssehub.easy.instantiation.core.model.vilTypes.NotOclCompliant({"sort"})
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
  @net.ssehub.easy.instantiation.core.model.vilTypes.OperationMeta(allowsAggregation=false, flatten=false, name={"sortedBy","sort"}, opType=NORMAL, requiresDynamicExpressionProcessing=false, storeArtifactsBefore=false, trace=true, useAny=false, useGenericParameter=-1, useOperandTypeAsParameter=false, useParameter=-1)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.subSequence(int,int)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract java.util.List net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.toMappedList()
  @net.ssehub.easy.instantiation.core.model.vilTypes.Invisible(inherit=false)
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Set net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.toSet()
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.typeReject(net.ssehub.easy.instantiation.core.model.vilTypes.TypeDescriptor)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnType(kind=SEQUENCE, type="")
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])
 - public abstract net.ssehub.easy.instantiation.core.model.vilTypes.Sequence net.ssehub.easy.instantiation.core.model.vilTypes.Sequence.union(net.ssehub.easy.instantiation.core.model.vilTypes.Sequence)
  @net.ssehub.easy.instantiation.core.model.vilTypes.ReturnGenerics([interface net.ssehub.easy.instantiation.core.model.vilTypes.IVilType])