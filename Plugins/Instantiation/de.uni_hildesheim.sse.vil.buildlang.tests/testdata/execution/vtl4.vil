import vtlLib;

@advice(expressionTest)
vilScript vtl4 (Project source, Project target, Configuration config) {

    main(Project source, Project target, Configuration config) = : {
        Boolean val = doSomething();
        expressionTest cfg = config;
        String s = asName("a");
        String s2 = asName(cfg.var.name);
        VtlTestType tt = new VtlTestType();
        tt.count = 1;
        workOn(tt);
        setOf(VtlTestType) tests = {};
        tests.add(tt);
        addTestType(tests, "myValue");
        addTestType(tests, "next", count=27, test=true);
        workOnSet("", tests);
        setOf(String) data = {};
        for(String s3:cfg.var.examples) {
            String tmp = s3.replace("v", "x");
            String tmp1 = s3;
            data.add(tmp);
            data.add(tmp1);
        };
    }

    workOn(VtlTestType type) = : {
        type.count = type.count + 1;
    }

    workOnSet(String something, setOf(VtlTestType) tst) = : {
        for(VtlTestType t:tst) {
            workOn(t);
        };
    }

}