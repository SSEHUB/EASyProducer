/*
 * generated by Xtext
 */
package de.uni_hildesheim.sse.vil.rt.ui;

import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.builder.IXtextBuilderParticipant;
import org.eclipse.xtext.ui.editor.IXtextEditorCallback;
import org.eclipse.xtext.ui.editor.hyperlinking.IHyperlinkHelper;
import org.eclipse.xtext.ui.editor.validation.ValidatingEditorCallback;
import org.eclipse.xtext.ui.resource.IResourceUIServiceProvider;

import de.uni_hildesheim.sse.vil.rt.ui.hyperlinking.RtVilHyperlinkHelper;
import net.ssehub.easy.dslCore.ui.BuilderParticipant;
import net.ssehub.easy.dslCore.ui.EasyUiResourceServiceProvider;

/**
 * Use this class to register components to be used within the IDE.
 */
public class RtVilUiModule extends de.uni_hildesheim.sse.vil.rt.ui.AbstractRtVilUiModule {

    public RtVilUiModule(AbstractUIPlugin plugin) {
        super(plugin);
    }

    /**
     * Binds the custom VIL hyperlink helper for the creation of the
     * <code>com.google.inject.Bindery</code>.
     * 
     * This enables the creation of hyperlinks for VIL-elements in an VIL-file
     * and the custom reaction on selecting these Hyperlinks (or pressing F3),
     * e.g. showing the element's declaration.
     */
    public Class<? extends IHyperlinkHelper> bindIHyperlinkHelper() {
        return RtVilHyperlinkHelper.class;
    }
    
    @Override
    public Class<? extends IXtextBuilderParticipant> bindIXtextBuilderParticipant() {
        return BuilderParticipant.class;
    }

    /**
     * Binds a resource service provider.
     * 
     * @return the resource service provider
     */
    public Class<? extends IResourceUIServiceProvider> bindIResourceUIServiceProvider() {
        return EasyUiResourceServiceProvider.class;
    }
    
    @Override
    public Class<? extends IXtextEditorCallback> bindIXtextEditorCallback() {
         return ValidatingEditorCallback.class; // enable markers, Composite would be nice
    }

}
