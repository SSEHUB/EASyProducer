module de.uni_hildesheim.sse.vil.expressions.GenerateExpressionDsl

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.eclipse.xtext.xtext.ui.generator.*

//var grammarURI = "classpath:/de/uni_hildesheim/sse/vil/expressions/ExpressionDsl.xtext"
var file.extensions = "expr"
var projectName = "de.uni_hildesheim.sse.vil.expressions"
var grammarName = "${projectName}.ExpressionDsl"
var rootPath = ".."
var runtimeProject = "${projectName}"

Workflow {
    bean = StandaloneSetup {
            scanClassPath = false // get rid of scangraph
            platformUri = "${runtimeProject}/.."
            // The following two lines can be removed, if Xbase is not used.
            //registerGeneratedEPackage = "org.eclipse.xtext.xbase.XbasePackage"
            //registerGenModelFile = "platform:/resource/org.eclipse.xtext.xbase/model/Xbase.genmodel"
        }
    
        component = DirectoryCleaner {
            directory = "${runtimeProject}/src-gen"
        }
    
        component = DirectoryCleaner {
            directory = "${runtimeProject}.ui/src-gen"
        }
    
        component = XtextGenerator {
            configuration = {
                project = StandardProjectConfig {
                    baseName = projectName
                    rootPath = rootPath
                    runtime = {
                        name = runtimeProject
                    }
                    genericIde = {
                        name = "${projectName}.ide"
                    }      
                    runtimeTest = {
                        enabled = false
                        name = "${runtimeProject}.tests"
                    }
                    eclipsePlugin = {
                        enabled = true
                        name = "${runtimeProject}.ui"
                    }
                    eclipsePluginTest = {
                        enabled = false
                    }
                    createEclipseMetaData = true
                }
                code = {
                    encoding = "UTF-8"
                    lineDelimiter = "\r\n"
                    fileHeader = "/*\n * generated by Xtext \${version}\n */"
                    preferXtendStubs = false
                }
            }

            language = StandardLanguage {
                name = grammarName
                fileExtensions = file.extensions
    
                serializer = {
                    generateStub = false
                }
                validator = {
                    // composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
                    // Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
                    generateDeprecationValidation = true
                }
                generator = {
                    generateXtendStub = true
                }
                parserGenerator = {
                    options = {
                        backtrack = true
                    }
                }
            }        
        }
}

