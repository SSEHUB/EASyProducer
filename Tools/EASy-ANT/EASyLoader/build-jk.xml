<?xml version="1.0" encoding="UTF-8"?>
<project name="EASyLoader" default="all" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	<!-- import von globalen Properties Einstellungen -->
	<property file="${user.home}/global-build.properties"/>
    <include file="${user.home}/macros.xml"/>

    <!-- Check - no typedef shall be required as installed in ANT/lib -->
    <path id="maven-ant-tasks.classpath" path="${ant-maven.lib}" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
       uri="antlib:org.apache.maven.artifact.ant"
       classpathref="maven-ant-tasks.classpath" />

    <!-- force snapshot update - does not work in macros.xml  -->
    <artifact:remoteRepository id="easy.repository" url="${maven.repository}">
        <snapshots updatePolicy="always" />
    </artifact:remoteRepository>
	
	<!-- Einstellungen fuer dieses Projekt -->
	<property name="src.dir" value="src"/>
	<property name="javacSource" value="1.6"/>
	<property name="javacTarget" value="1.6"/>
	
	<path id ="includes">
        <!-- Lib - all through ant -->
    </path>
	
	<!-- Targets  -->
	<target name="init">
		<!-- Delete generated folders -->
		<delete dir="${basedir}/build"/>
		
		<!-- Create folders -->
        <mkdir dir="${basedir}/build"/>
		<mkdir dir="${basedir}/build/classes"/>
		<mkdir dir="${basedir}/build/jar"/>
        <mkdir dir="${build.base.dir}/generatedLibs"/>

		<artifact:dependencies pathId="maven.compile.classpath">
            <pom file="pom.xml" id="pom"/>
            <remoteRepository refid="easy.repository" />
        </artifact:dependencies>        
	</target>
	
	<!-- Compile all files without test classes -->
	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" compiler="modern" debug="on" destdir="${basedir}/build/classes" includeAntRuntime="no" failonerror="true" source="${javacSource}" target="${javacTarget}" encoding="${javac.encoding}">
	        <classpath refid="maven.compile.classpath" />
			<classpath refid="includes" />	
		</javac>
    </target>
	
	<!-- Creates the jar files -->
	<target name="jar" depends="compile">
		<jar destfile="${build.jar.dir}/${ant.project.name}.jar" basedir="${basedir}/build/classes" manifest="META-INF/MANIFEST.MF"/>
	    <!-- Copy created jar to global EASy Plug-ins directory -->
        <copy todir="${easy.bundles.dir}">
            <fileset dir="${build.jar.dir}" includes="**/*.jar"/>
        </copy>
        <jar destfile="${build.jar.dir}/${ant.project.name}-sources.jar" basedir="${src.dir}" />
        <easyJavadoc sourcepath="${src.dir}" source="${javacSource}" destdir="${doc.dir}">
            <classpath refid="maven.compile.classpath" />
            <classpath refid="includes"/>
        </easyJavadoc>
        <jar destfile="${build.jar.dir}/${ant.project.name}-javadoc.jar" basedir="${doc.dir}" />
        <mvnDeploy folderName="${ant.project.name}" jarFolder="${build.jar.dir}" jarFile="${ant.project.name}.jar"/>
    </target>
	
	<target name="bundle">
		<echoproperties/>
        <copy file="${org.eclipse.platform:org.eclipse.osgi.services:jar}" todir="${basedir}/build/jar"/>
        <copy file="${org.eclipse.platform:org.eclipse.osgi:jar}" todir="${basedir}/build/jar"/>
        <copy file="${org.eclipse.platform:org.eclipse.equinox.preferences:jar}" todir="${basedir}/build/jar"/>
        <copy file="${org.eclipse.platform:org.eclipse.equinox.common:jar}" todir="${basedir}/build/jar"/>
		<copy file="${org.apache.ant:ant:jar}" todir="${basedir}/build/jar"/>
		<copy file="${org.apache.ant:ant-launcher:jar}" todir="${basedir}/build/jar"/>
		<copy todir="${basedir}/build/jar" failonerror="false" overwrite="true">
            <fileset dir="scripts"/>
            <fileset dir="libs/**/*.jar" />
        </copy>
		<zip destfile="${basedir}/build/jar/${ant.project.name}.zip" basedir="${basedir}/build/jar">
            <exclude name="**/*-sources.jar" />
            <exclude name="**/*-javadoc.jar" />
	    </zip>
	</target>
	
	<target name="deployAntJar">
		<delete dir="${easy.antLib.dir}" failonerror="false"/>
		<mkdir dir="${easy.antLib.dir}"/>
		<copy todir="${easy.antLib.dir}" failonerror="true" overwrite="true">
            <fileset dir="${basedir}/build/jar">
			    <include name="**/*.jar" />
	            <exclude name="**/*-sources.jar" />
	            <exclude name="**/*-javadoc.jar" />
			</fileset>
        </copy>
	</target>
	
	<!-- Creates ANT Jar and uses the new created jar to create the two EASy Jars -->
	<target name="all" depends="jar, bundle, deployAntJar">
        <delete dir="${build.classes.dir}"/>
        <delete dir="${doc.dir}"/>
	</target>
	
</project>
