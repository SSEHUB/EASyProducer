<?xml version="1.0" encoding="UTF-8"?>
<project name="ModelCopyTask" default="all" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">
    <property file="${user.home}/migration.properties"/>
	<property file="${user.home}/global-build.properties"/>
    <include file="${user.home}/macros.xml"/>
	
	<!-- Settings for this project-->
	<property name="src.dir" value="src"/>
	<property name="test.dir" value="test"/>
	<property name="lib.dir" value="lib"/>
	<property name="javacSource" value="1.7"/>
	<property name="javacTarget" value="1.7"/>	
	<property name="resources.internal.dir" value="res"/>
	<property name="resources.external.dir" value="externalResources"/>
	<property name="build.base.dir" value="build"/>
	<property name="build.classes.dir" value="${build.base.dir}/classes"/>
	<property name="build.testclasses.dir" value="${build.base.dir}/test"/>
	<property name="build.jar.dir" value="${build.base.dir}/jar"/>
	<property name="build.task.dir" value="${build.jar.dir}/task"/>
	<property name="javac.encoding" value="iso-8859-1"/>
	<property name="junitResults.dir" value="junitResults"/>
	
	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
      <classpath path="${jacoco.path}/jacocoant.jar"/>
  </taskdef>
	
	<path id ="includes">
		<!-- Libs -->
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<path id ="junit">	
		<!-- Junit -->
		<fileset dir="${eclipse.plugins.dir}">
			<include name="**/*junit*.jar" />
			<include name="**/*hamcrest*.jar" />
		</fileset>
	</path>
	
	<!-- Targets  -->
	<target name="init">
		<!-- Delete generated folders -->
		<delete dir="${build.base.dir}"/>
		<delete dir="${junitResults.dir}"/>
		
		<!-- Create folders -->
		<mkdir dir="${junitResults.dir}"/>
    <mkdir dir="${build.base.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
		<mkdir dir="${build.testclasses.dir}"/>
		<mkdir dir="${build.jar.dir}"/>
		<mkdir dir="${build.task.dir}"/>
	</target>
	
	<!-- Compile all files without test classes -->
	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" debug="off" destdir="${build.classes.dir}" includeAntRuntime="no" failonerror="true" source="${javacSource}" target="${javacTarget}" encoding="${javac.encoding}">
			<classpath refid="includes" />
			<exclude name="**/package-info.java"/>
		</javac>
  </target>
	
	<!-- Creates a jar file -->
	<target name="jar">
		<copy todir="${build.classes.dir}">
      <fileset dir="${resources.internal.dir}" includes="**/*"/>
    </copy>
		<jar destfile="${build.jar.dir}/${ant.project.name}.jar" basedir="${build.classes.dir}"/>
  </target>
	
	<target name="test">
		<javac srcdir="${src.dir}:${test.dir}" debug="on" destdir="${build.testclasses.dir}" includeAntRuntime="no" failonerror="true" source="${javacSource}" target="${javacTarget}" encoding="${javac.encoding}">
      <classpath refid="includes" />
      <classpath refid="junit" />
      <exclude name="**/package-info.java"/>
    </javac>
		
		<jacoco:coverage destfile="${junitResults.dir}/jacoco.exec" includes="de.uni_hildesheim.sse.easy.ant.**.*">
      <junit fork="true" forkmode="once" printsummary="off" haltonfailure="off">
        <classpath refid="includes" />
        <classpath refid="junit" />
        <classpath>
          <pathelement location="${build.testclasses.dir}"/>
        </classpath>
  
        <formatter type="xml"/>
  
      	<test name="de.uni_hildesheim.sse.easy.ant.modelcopy.ModelCopyTest" todir="${junitResults.dir}"/>
      </junit>
    </jacoco:coverage>
		
    <jacoco:report>                
        <executiondata>
            <file file="${junitResults.dir}/jacoco.exec"/>
        </executiondata>
      	<structure name="${ant.project.name}">
  	        <classfiles>
  	            <fileset dir="${build.testclasses.dir}"/>
  	        </classfiles>
  	        <sourcefiles encoding="UTF-8">
  	            <fileset dir="${src.dir}"/>
  	            <fileset dir="${test.dir}"/>
  	        </sourcefiles>
  	    </structure>
        <html destdir="${junitResults.dir}/report"/>                   
    </jacoco:report>
	</target>
	
	<target name="dist" depends="jar">
		<copy todir="${build.jar.dir}">
			<fileset dir="${resources.external.dir}" includes="**/*"/>
    </copy>
		<copy todir="${build.jar.dir}/task">
			<fileset dir="${lib.dir}" includes="**/*.jar">
            <exclude name="ant-1.8.4.jar"/>
			</fileset>
    </copy>
	  <move file="${build.jar.dir}/${ant.project.name}.jar" todir="${build.jar.dir}/task"/>
		<zip destfile="${build.base.dir}/${ant.project.name}.zip" basedir="${build.jar.dir}"/>
	</target>

	<target name="all-old">
	   <antcall target="compile"/>
	   <antcall target="test"/>
	   <antcall target="dist"/>
    </target>
	
    <target name="all">
        <maven pomFile="pom.xml" goal="deploy"/>
        <delete failonerror="false" dir="bin"/>
        <delete failonerror="false" dir=".m2"/>   
    </target>
	
</project>
